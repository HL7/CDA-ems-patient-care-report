<!-- OtherSymptoms: 2.16.840.1.1133883.17.3.10.1.67 -->

<pattern id="p-PatientCareReport_1A_OtherSymptoms_value_4_89_4-error_mdht" see="#p-PatientCareReport_1A_OtherSymptoms_value_4_89_4-error_mdht" name="p-PatientCareReport_1A_OtherSymptoms_value_4_89_4-error_mdht">
		<!--
			UML path: /OtherSymptoms
			UML root path: /PatientCareReport/SituationSection/otherSymptoms
			UML qualified name: emspcr::OtherSymptoms
		-->
	<rule context="/cda:ClinicalDocument/cda:SituationSection[cda:templateId/@root = '2.16.840.1.1133883.17.3.10.1.9']/cda:otherSymptoms[cda:templateId/@root = '2.16.840.1.1133883.17.3.10.1.67']">
		<!--
			OCL: ((not self.value->isEmpty()) and self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.90'))
			Constraint name: OtherSymptomsValue
		-->
	<assert test="not(cda:value and cda:value[not(@nullFlavor)]) or not(cda:value[not(. and @xsi:type='CD' and @codeSystem = '2.16.840.1.113883.6.90')])">Error: PatientCareReport - 4.89.4 value
		Conformance: MAY contain zero or more [0..*] value with @xsi:type=&quot;CD&quot; (CONF:10808), which SHALL be selected from (CodeSystem: 2.16.840.1.113883.6.90 ICD-10 CM) (CONF:10809)
		Analysis: n/a
		Validation message: n/a	</assert>
		<!--
			OCL: ((not self.value->isEmpty()) and self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))
			Constraint name: OtherSymptomsValueP
		-->
	<assert test="not(cda:value and cda:value[not(@nullFlavor)]) or not(cda:value[not(@xsi:type='CD')])">Error: PatientCareReport - 4.89.4 value
		Conformance: MAY contain zero or more [0..*] value with @xsi:type=&quot;CD&quot; (CONF:10808), which SHALL be selected from (CodeSystem: 2.16.840.1.113883.6.90 ICD-10 CM) (CONF:10809)
		Analysis: n/a
		Validation message: n/a	</assert>
	</rule>
</pattern>

