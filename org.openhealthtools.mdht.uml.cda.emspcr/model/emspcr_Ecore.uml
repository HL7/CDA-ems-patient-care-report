<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CDA="http://www.openhealthtools.org/mdht/schemas/cda/4" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_xpUkQGeQEeGtXKebdWh3hg" name="emspcr">
    <packageImport xmi:id="_x1tacGeQEeGtXKebdWh3hg">
      <importedPackage href="pathmap://CONSOL_MODEL/consol.uml#_2B30sBSVEeGGzu7fmW9pXw"/>
    </packageImport>
    <packageImport xmi:id="_x1tacWeQEeGtXKebdWh3hg">
      <importedPackage href="pathmap://CDA_MODEL/cda.uml#_ii81kjxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_x1tacmeQEeGtXKebdWh3hg">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.emspcr.model/model/emspcr-vocab.uml#_xpzscGeQEeGtXKebdWh3hg"/>
    </packageImport>
    <packageImport xmi:id="_alO60EU9EeKcguOHLOhl3Q">
      <importedPackage href="pathmap://DATATYPES_MODEL/datatypes.uml#_XgMSwzxVEd6JwqSGecoePg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_xs1LQWeQEeGtXKebdWh3hg" name="PatientCareReport">
      <ownedComment xmi:id="_mETdgCwsEeOaIuM51LdlNw">
        <body>A report from the EMS crew to the emergency department summarizing the patient's condition and any remedial actions taken</body>
      </ownedComment>
      <ownedRule xmi:id="_-9GOcWaNEe2Mns8sNTkjCw" name="USRealmHeader2TemplateId" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-9GOcmaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.2' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-9IDoGaNEe2Mns8sNTkjCw" name="PatientCareReportClassCode" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-9IDoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('classCode') and self.classCode=vocab::ActClinicalDocument::DOCCLIN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-9Kf4GaNEe2Mns8sNTkjCw" name="PatientCareReportMoodCode" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-9Kf4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode') and self.moodCode=vocab::ActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-9MVEGaNEe2Mns8sNTkjCw" name="PatientCareReportId" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-9MVEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.id.oclIsUndefined() or self.id.isNullFlavorUndefined()) implies (not self.id.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-9P_cGaNEe2Mns8sNTkjCw" name="PatientCareReportCodeP" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-9P_cWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-9OKQGaNEe2Mns8sNTkjCw" name="PatientCareReportCode" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-9OKQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67796-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-9R0oGaNEe2Mns8sNTkjCw" name="PatientCareReportTitle" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-9R0oWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (self.title.getText() = 'EMS Patient Care Report')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-9TCwGaNEe2Mns8sNTkjCw" name="PatientCareReportConfidentialityCode" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-9TCwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.confidentialityCode.oclIsUndefined() or self.confidentialityCode.isNullFlavorUndefined()) implies (not self.confidentialityCode.oclIsUndefined() and self.confidentialityCode.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.confidentialityCode.oclAsType(datatypes::CE) in 
value.code = 'N' and value.codeSystem = '2.16.840.1.113883.5.25')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-9U38GaNEe2Mns8sNTkjCw" name="PatientCareReportVersionNumber" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-9U38WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.versionNumber.oclIsUndefined() or self.versionNumber.isNullFlavorUndefined()) implies (not self.versionNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__AReQGaNEe2Mns8sNTkjCw" name="PatientCareReportRecordTarget" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__AReQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.recordTarget->one(recordTarget : cda::RecordTarget | not recordTarget.oclIsUndefined() and recordTarget.oclIsKindOf(cda::RecordTarget))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__DQg0GaNEe2Mns8sNTkjCw" name="PatientCareReportCurrentMedication" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__DQg0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSCurrentMedicationSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__DZDsGaNEe2Mns8sNTkjCw" name="PatientCareReportCardiacArrestEvent" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__DZDsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSCardiacArrestEventSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__DhmkGaNEe2Mns8sNTkjCw" name="PatientCareReportAdvanceDirectives" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__DhmkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSAdvanceDirectivesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ELt4GaNEe2Mns8sNTkjCw" name="PatientCareReportAllergiesAndAdverseReactionsSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ELt4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSAllergiesAndAdverseReactionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ETpsGaNEe2Mns8sNTkjCw" name="PatientCareReportPastMedicalHistorySection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ETpsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSPastMedicalHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__EhFEGaNEe2Mns8sNTkjCw" name="PatientCareReportSocialHistorySection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__EhFEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSSocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__E0AAGaNEe2Mns8sNTkjCw" name="PatientCareReportPhysicalAssessmentSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__E0AAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSPhysicalAssessmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__HECwGaNEe2Mns8sNTkjCw" name="PatientCareReportMedicationsAdministeredSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__HECwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSMedicationsAdministeredSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__JtuIGaNEe2Mns8sNTkjCw" name="PatientCareReportProceduresPerformedSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__JtuIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSProceduresPerformedSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__J7wkGaNEe2Mns8sNTkjCw" name="PatientCareReportPatientCareNarrativeSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__J7wkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSPatientCareNarrativeSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__NNHAGaNEe2Mns8sNTkjCw" name="PatientCareReportSceneSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__NNHAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSSceneSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__OIUEGaNEe2Mns8sNTkjCw" name="PatientCareReportComponentOf" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__OIUEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__O9agGaNEe2Mns8sNTkjCw" name="PatientCareReportDispatchSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__O9agWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSDispatchSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__PGkcGaNEe2Mns8sNTkjCw" name="PatientCareReportDispositionSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__PGkcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSDispositionSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__PQVcGaNEe2Mns8sNTkjCw" name="PatientCareReportPersonnelAdverseEventSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__PQVcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSPersonnelAdverseEventSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__PatgGaNEe2Mns8sNTkjCw" name="PatientCareReportProtocolSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__PatgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSProtocolSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Pj3cGaNEe2Mns8sNTkjCw" name="PatientCareReportResponseSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Pj3cWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSResponseSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__PzIAGaNEe2Mns8sNTkjCw" name="PatientCareReportSituationSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__PzIAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSSituationSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__P7q4GaNEe2Mns8sNTkjCw" name="PatientCareReportTimesSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__P7q4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSTimesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__QFb4GaNEe2Mns8sNTkjCw" name="PatientCareReportVitalSignsSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__QFb4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSVitalSignsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__QOl0GaNEe2Mns8sNTkjCw" name="PatientCareReportAuthorParticipation" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__QOl0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(cda::Author))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__QY94GaNEe2Mns8sNTkjCw" name="PatientCareReportCustodian" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__QY94WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.custodian->one(custodian : cda::Custodian | not custodian.oclIsUndefined() and custodian.oclIsKindOf(cda::Custodian))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Qiu4GaNEe2Mns8sNTkjCw" name="PatientCareReportDocumentationOf" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Qiu4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.documentationOf->one(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__RHWoGaNEe2Mns8sNTkjCw" name="PatientCareReportRelatedDocument" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__RHWoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.relatedDocument->one(relatedDocument : cda::RelatedDocument | not relatedDocument.oclIsUndefined() and relatedDocument.oclIsKindOf(cda::RelatedDocument))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__RQgkGaNEe2Mns8sNTkjCw" name="PatientCareReportParticipant" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__RQgkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ADAtoGaOEe2Mns8sNTkjCw" name="PatientCareReportInjuryIncidentDescriptionSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ADBUsGaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSInjuryIncidentDescriptionSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ADJ3kGaOEe2Mns8sNTkjCw" name="PatientCareReportEMSBillingSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ADJ3kWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSBillingSection))->size() >= 1</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_xs3ngWeQEeGtXKebdWh3hg">
        <general xmi:type="uml:Class" href="pathmap://CONSOL_MODEL/.controlled/consol-documents.uml#_dduXkJ5OEeOr4eM3k36wAg"/>
      </generalization>
      <ownedOperation xmi:id="__DQg0maNEe2Mns8sNTkjCw" name="getCurrentMedication" bodyCondition="__DQg1WaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__DQg1WaNEe2Mns8sNTkjCw" name="body" constrainedElement="__DQg0maNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__DQg1maNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSCurrentMedicationSection))->asSequence()->any(true).oclAsType(emspcr::EMSCurrentMedicationSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__DQg02aNEe2Mns8sNTkjCw" type="_aDO5AIcnEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__DQg1GaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__DZDsmaNEe2Mns8sNTkjCw" name="getCardiacArrestEvent" bodyCondition="__DZDtWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__DZDtWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__DZDsmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__DZDtmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSCardiacArrestEventSection))->asSequence()->any(true).oclAsType(emspcr::EMSCardiacArrestEventSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__DZDs2aNEe2Mns8sNTkjCw" type="_pIikMHwDEeGW3cDolvqrTA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__DZDtGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__DhmkmaNEe2Mns8sNTkjCw" name="getAdvanceDirectives" bodyCondition="__DhmlWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__DhmlWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__DhmkmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__DhmlmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSAdvanceDirectivesSection))->asSequence()->any(true).oclAsType(emspcr::EMSAdvanceDirectivesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__Dhmk2aNEe2Mns8sNTkjCw" type="_i4C-AH9aEeGht55Sz1eBOw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__DhmlGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__ELt4maNEe2Mns8sNTkjCw" name="getAllergiesAndAdverseReactionsSection" bodyCondition="__ELt5WaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__ELt5WaNEe2Mns8sNTkjCw" name="body" constrainedElement="__ELt4maNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__ELt5maNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSAllergiesAndAdverseReactionsSection))->asSequence()->any(true).oclAsType(emspcr::EMSAllergiesAndAdverseReactionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__ELt42aNEe2Mns8sNTkjCw" type="_nSjIgH9cEeGht55Sz1eBOw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__ELt5GaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__ETpsmaNEe2Mns8sNTkjCw" name="getPastMedicalHistorySection" bodyCondition="__ETptWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__ETptWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__ETpsmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__ETptmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSPastMedicalHistorySection))->asSequence()->any(true).oclAsType(emspcr::EMSPastMedicalHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__ETps2aNEe2Mns8sNTkjCw" type="_VtMvAIzcEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__ETptGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__EhFEmaNEe2Mns8sNTkjCw" name="getSocialHistorySection" bodyCondition="__EhFFWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__EhFFWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__EhFEmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__EhFFmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSSocialHistorySection))->asSequence()->any(true).oclAsType(emspcr::EMSSocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__EhFE2aNEe2Mns8sNTkjCw" type="_1XH7YIziEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__EhFFGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__E0AAmaNEe2Mns8sNTkjCw" name="getPhysicalAssessmentSection" bodyCondition="__E0ABWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__E0ABWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__E0AAmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__E0ABmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSPhysicalAssessmentSection))->asSequence()->any(true).oclAsType(emspcr::EMSPhysicalAssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__E0AA2aNEe2Mns8sNTkjCw" type="_6223oJohEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__E0ABGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__HEp0GaNEe2Mns8sNTkjCw" name="getMedicationsAdministeredSection" bodyCondition="__HEp02aNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__HEp02aNEe2Mns8sNTkjCw" name="body" constrainedElement="__HEp0GaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__HEp1GaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSMedicationsAdministeredSection))->asSequence()->any(true).oclAsType(emspcr::EMSMedicationsAdministeredSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__HEp0WaNEe2Mns8sNTkjCw" type="_c7crcJovEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__HEp0maNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__JtuImaNEe2Mns8sNTkjCw" name="getProceduresPerformedSection" bodyCondition="__JtuJWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__JtuJWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__JtuImaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__JtuJmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSProceduresPerformedSection))->asSequence()->any(true).oclAsType(emspcr::EMSProceduresPerformedSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__JtuI2aNEe2Mns8sNTkjCw" type="_4QFw8JumEeGzXI65shd6Fw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__JtuJGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__J7wkmaNEe2Mns8sNTkjCw" name="getPatientCareNarrativeSection" bodyCondition="__J7wlWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__J7wlWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__J7wkmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__J7wlmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSPatientCareNarrativeSection))->asSequence()->any(true).oclAsType(emspcr::EMSPatientCareNarrativeSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__J7wk2aNEe2Mns8sNTkjCw" type="_iDmQYJ9mEeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__J7wlGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__NNHAmaNEe2Mns8sNTkjCw" name="getSceneSection" bodyCondition="__NNuEmaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__NNuEmaNEe2Mns8sNTkjCw" name="body" constrainedElement="__NNHAmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__NNuE2aNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSSceneSection))->asSequence()->any(true).oclAsType(emspcr::EMSSceneSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__NNuEGaNEe2Mns8sNTkjCw" type="_h3A8IKK3EeGOxth0BgV-QA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__NNuEWaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__O9agmaNEe2Mns8sNTkjCw" name="getDispatchSection" bodyCondition="__O9ahWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__O9ahWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__O9agmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__O9ahmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSDispatchSection))->asSequence()->any(true).oclAsType(emspcr::EMSDispatchSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__O9ag2aNEe2Mns8sNTkjCw" type="_OV4TIJ9nEeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__O9ahGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__PGkcmaNEe2Mns8sNTkjCw" name="getDispositionSection" bodyCondition="__PHLgWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__PHLgWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__PGkcmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__PHLgmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSDispositionSection))->asSequence()->any(true).oclAsType(emspcr::EMSDispositionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__PGkc2aNEe2Mns8sNTkjCw" type="_i-lM8J-dEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__PHLgGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__PQVcmaNEe2Mns8sNTkjCw" name="getPersonnelAdverseEventSection" bodyCondition="__PQVdWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__PQVdWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__PQVcmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__PQVdmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSPersonnelAdverseEventSection))->asSequence()->any(true).oclAsType(emspcr::EMSPersonnelAdverseEventSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__PQVc2aNEe2Mns8sNTkjCw" type="_GGotEJ-kEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__PQVdGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__PatgmaNEe2Mns8sNTkjCw" name="getProtocolSection" bodyCondition="__PathWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__PathWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__PatgmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__PathmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSProtocolSection))->asSequence()->any(true).oclAsType(emspcr::EMSProtocolSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__Patg2aNEe2Mns8sNTkjCw" type="_aK7P4J-mEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__PathGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__PkegGaNEe2Mns8sNTkjCw" name="getResponseSection" bodyCondition="__Pkeg2aNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__Pkeg2aNEe2Mns8sNTkjCw" name="body" constrainedElement="__PkegGaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__PkehGaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSResponseSection))->asSequence()->any(true).oclAsType(emspcr::EMSResponseSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__PkegWaNEe2Mns8sNTkjCw" type="_LI7M8J99EeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__PkegmaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__PzIAmaNEe2Mns8sNTkjCw" name="getSituationSection" bodyCondition="__PzIBWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__PzIBWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__PzIAmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__PzvEGaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSSituationSection))->asSequence()->any(true).oclAsType(emspcr::EMSSituationSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__PzIA2aNEe2Mns8sNTkjCw" type="_olqMIKK8EeGOxth0BgV-QA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__PzIBGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__P8R8GaNEe2Mns8sNTkjCw" name="getTimesSection" bodyCondition="__P8R82aNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__P8R82aNEe2Mns8sNTkjCw" name="body" constrainedElement="__P8R8GaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__P8R9GaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSTimesSection))->asSequence()->any(true).oclAsType(emspcr::EMSTimesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__P8R8WaNEe2Mns8sNTkjCw" type="_ClVY0KxCEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__P8R8maNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__QFb4maNEe2Mns8sNTkjCw" name="getVitalSignsSection" bodyCondition="__QFb5WaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__QFb5WaNEe2Mns8sNTkjCw" name="body" constrainedElement="__QFb4maNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__QFb5maNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSVitalSignsSection))->asSequence()->any(true).oclAsType(emspcr::EMSVitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__QFb42aNEe2Mns8sNTkjCw" type="_jCzkkIzkEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__QFb5GaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ADBUsWaOEe2Mns8sNTkjCw" name="getInjuryIncidentDescriptionSection" bodyCondition="_ADBUtGaOEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="_ADBUtGaOEe2Mns8sNTkjCw" name="body" constrainedElement="_ADBUsWaOEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ADBUtWaOEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSInjuryIncidentDescriptionSection))->asSequence()->any(true).oclAsType(emspcr::EMSInjuryIncidentDescriptionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ADBUsmaOEe2Mns8sNTkjCw" type="_3dRe0HSUEeGa4IXs2ghZEw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ADBUs2aOEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ADJ3kmaOEe2Mns8sNTkjCw" name="getEMSBillingSections" bodyCondition="_ADJ3lWaOEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="_ADJ3lWaOEe2Mns8sNTkjCw" name="body" constrainedElement="_ADJ3kmaOEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ADJ3lmaOEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSBillingSection)).oclAsType(emspcr::EMSBillingSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ADJ3k2aOEe2Mns8sNTkjCw" type="_S-YTcGldEeG4boS-IbG8Zw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ADJ3lGaOEe2Mns8sNTkjCw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VtMvAIzcEeGnhceUMXltng" name="EMSPastMedicalHistorySection">
      <ownedComment xmi:id="_r4pFkCwqEeOaIuM51LdlNw">
        <body>Collection of information regarding the patient's medical history</body>
      </ownedComment>
      <ownedRule xmi:id="__Aqf0maNEe2Mns8sNTkjCw" name="EMSPastMedicalHistorySectionTemplateId" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Aqf02aNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.19' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Art8GaNEe2Mns8sNTkjCw" name="EMSPastMedicalHistorySectionCode" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Art8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67842-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__As8EGaNEe2Mns8sNTkjCw" name="EMSPastMedicalHistorySectionCodeP" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__As8EWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__AuKMGaNEe2Mns8sNTkjCw" name="EMSPastMedicalHistorySectionTitle" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__AuKMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__AvYUGaNEe2Mns8sNTkjCw" name="EMSPastMedicalHistorySectionText" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__AvYUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__irAsGaNEe2Mns8sNTkjCw" name="EMSPastMedicalHistorySectionExistenceOfHistoryOfCondition" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__irAsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ExistenceOfHistoryOfConditionOrSurgery) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__iy8gGaNEe2Mns8sNTkjCw" name="EMSPastMedicalHistorySectionHistoryOfCondition" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__iy8gWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::MedicalSurgicalHistory) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_W3TxsIzcEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__irAsmaNEe2Mns8sNTkjCw" name="getExistenceOfHistoryOfCondition" bodyCondition="__irAtWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__irAtWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__irAsmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__irAtmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ExistenceOfHistoryOfConditionOrSurgery))->asSequence()->any(true).oclAsType(emspcr::ExistenceOfHistoryOfConditionOrSurgery)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__irAs2aNEe2Mns8sNTkjCw" type="_W_uRYIzdEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__irAtGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__iy8gmaNEe2Mns8sNTkjCw" name="getHistoryOfCondition" bodyCondition="__iy8hWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__iy8hWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__iy8gmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__izjkGaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::MedicalSurgicalHistory))->asSequence()->any(true).oclAsType(emspcr::MedicalSurgicalHistory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__iy8g2aNEe2Mns8sNTkjCw" type="_5XgZ4IzdEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__iy8hGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_S-YTcGldEeG4boS-IbG8Zw" name="EMSBillingSection">
      <ownedComment xmi:id="_SnBqACUcEeOPwcQY2yBpiA">
        <body>Information pertinent to billing processes</body>
      </ownedComment>
      <ownedRule xmi:id="__BEIcWaNEe2Mns8sNTkjCw" name="EMSBillingSectionTemplateId" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__BEIcmaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.5' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__BFWkGaNEe2Mns8sNTkjCw" name="EMSBillingSectionCode" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__BFWkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67659-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__BHLwGaNEe2Mns8sNTkjCw" name="EMSBillingSectionCodeP" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__BHLwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__BIZ4GaNEe2Mns8sNTkjCw" name="EMSBillingSectionTitle" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__BIZ4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__BJoAGaNEe2Mns8sNTkjCw" name="EMSBillingSectionText" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__BJoAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__tbfMGaNEe2Mns8sNTkjCw" name="EMSBillingSectionBillingCondition" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__tbfMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::BillingCondition) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__trW0GaNEe2Mns8sNTkjCw" name="EMSBillingSectionLevelOfServiceObservation" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__trW0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::LevelOfServiceObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_S-YTcWldEeG4boS-IbG8Zw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__tbfMmaNEe2Mns8sNTkjCw" name="getBillingCondition" bodyCondition="__tbfNWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__tbfNWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__tbfMmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__tbfNmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::BillingCondition))->asSequence()->any(true).oclAsType(emspcr::BillingCondition)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__tbfM2aNEe2Mns8sNTkjCw" type="_rNkl4GleEeG4boS-IbG8Zw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__tbfNGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__trW0maNEe2Mns8sNTkjCw" name="getLevelOfServiceObservation" bodyCondition="__trW1WaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__trW1WaNEe2Mns8sNTkjCw" name="body" constrainedElement="__trW0maNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__trW1maNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::LevelOfServiceObservation))->asSequence()->any(true).oclAsType(emspcr::LevelOfServiceObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__trW02aNEe2Mns8sNTkjCw" type="_To2-YGleEeG4boS-IbG8Zw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__trW1GaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_3dRe0HSUEeGa4IXs2ghZEw" name="EMSInjuryIncidentDescriptionSection">
      <ownedComment xmi:id="_t6nrwCwnEeOaIuM51LdlNw">
        <body>Observations concerning a patient's injury mechanism</body>
      </ownedComment>
      <ownedRule xmi:id="__BKPEGaNEe2Mns8sNTkjCw" name="EMSInjuryIncidentDescriptionSectionTemplateId" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__BKPEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.17' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__BK2IGaNEe2Mns8sNTkjCw" name="EMSInjuryIncidentDescriptionSectionCode" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__BK2IWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67800-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__BMEQGaNEe2Mns8sNTkjCw" name="EMSInjuryIncidentDescriptionSectionCodeP" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__BMEQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__BNSYGaNEe2Mns8sNTkjCw" name="EMSInjuryIncidentDescriptionSectionTitle" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__BNSYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__BOggGaNEe2Mns8sNTkjCw" name="EMSInjuryIncidentDescriptionSectionText" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__BOggWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ennIGaNEe2Mns8sNTkjCw" name="EMSInjuryIncidentDescriptionSectionInjuryCauseCategory" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ennIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::InjuryCauseCategory) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__e4F0GaNEe2Mns8sNTkjCw" name="EMSInjuryIncidentDescriptionSectionInjuryMechanism" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__e4F0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::InjuryMechanism) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fX1EGaNEe2Mns8sNTkjCw" name="EMSInjuryIncidentDescriptionSectionTraumaCenterCriteria" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fX1EWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::TraumaTriageCriteriaSteps1and2) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fz58GaNEe2Mns8sNTkjCw" name="EMSInjuryIncidentDescriptionSectionInjuryRiskFactor" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fz58WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::TraumaTriageCriteriaSteps3and4) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gQl4GaNEe2Mns8sNTkjCw" name="EMSInjuryIncidentDescriptionSectionVehicleImpactArea" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gQl4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::VehicleImpactArea) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gtR0GaNEe2Mns8sNTkjCw" name="EMSInjuryIncidentDescriptionSectionPatientLocationInVehicle" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gtR0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientLocationInVehicle) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__hIvoGaNEe2Mns8sNTkjCw" name="EMSInjuryIncidentDescriptionSectionVehicleOccupantSafetyEquipment" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__hIvoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::VehicleOccupantSafetyEquipment) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__hjmYGaNEe2Mns8sNTkjCw" name="EMSInjuryIncidentDescriptionSectionAirbagDeploymentStatus" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__hjmYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::AirbagDeploymentStatus) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__iASUGaNEe2Mns8sNTkjCw" name="EMSInjuryIncidentDescriptionSectionHeightOfFall" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__iASUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::HeightOfFall) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__iNGoGaNEe2Mns8sNTkjCw" name="EMSInjuryIncidentDescriptionSectionDisasterType" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__iNGoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::DisasterType) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_3dSF4HSUEeGa4IXs2ghZEw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__eoOMGaNEe2Mns8sNTkjCw" name="getInjuryCauseCategory" bodyCondition="__eoOM2aNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__eoOM2aNEe2Mns8sNTkjCw" name="body" constrainedElement="__eoOMGaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__eoONGaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::InjuryCauseCategory))->asSequence()->any(true).oclAsType(emspcr::InjuryCauseCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__eoOMWaNEe2Mns8sNTkjCw" type="_KEFo8HSVEeGa4IXs2ghZEw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__eoOMmaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__e4F0maNEe2Mns8sNTkjCw" name="getInjuryMechanism" bodyCondition="__e4F1WaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__e4F1WaNEe2Mns8sNTkjCw" name="body" constrainedElement="__e4F0maNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__e4F1maNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::InjuryMechanism))->asSequence()->any(true).oclAsType(emspcr::InjuryMechanism)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__e4F02aNEe2Mns8sNTkjCw" type="_aS16EHSWEeGa4IXs2ghZEw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__e4F1GaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__fX1EmaNEe2Mns8sNTkjCw" name="getTraumaCenterCriteria" bodyCondition="__fYcImaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__fYcImaNEe2Mns8sNTkjCw" name="body" constrainedElement="__fX1EmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__fYcI2aNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::TraumaTriageCriteriaSteps1and2))->asSequence()->any(true).oclAsType(emspcr::TraumaTriageCriteriaSteps1and2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__fYcIGaNEe2Mns8sNTkjCw" type="_lTHsIIcXEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__fYcIWaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__fz58maNEe2Mns8sNTkjCw" name="getInjuryRiskFactor" bodyCondition="__fz59WaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__fz59WaNEe2Mns8sNTkjCw" name="body" constrainedElement="__fz58maNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__fz59maNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::TraumaTriageCriteriaSteps3and4))->asSequence()->any(true).oclAsType(emspcr::TraumaTriageCriteriaSteps3and4)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__fz582aNEe2Mns8sNTkjCw" type="_vuraIIcZEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__fz59GaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__gQl4maNEe2Mns8sNTkjCw" name="getVehicleImpactArea" bodyCondition="__gQl5WaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__gQl5WaNEe2Mns8sNTkjCw" name="body" constrainedElement="__gQl4maNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__gQl5maNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::VehicleImpactArea))->asSequence()->any(true).oclAsType(emspcr::VehicleImpactArea)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__gQl42aNEe2Mns8sNTkjCw" type="_nvhVwIcaEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__gQl5GaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__gtR0maNEe2Mns8sNTkjCw" name="getPatientLocationInVehicle" bodyCondition="__gtR1WaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__gtR1WaNEe2Mns8sNTkjCw" name="body" constrainedElement="__gtR0maNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__gtR1maNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientLocationInVehicle))->asSequence()->any(true).oclAsType(emspcr::PatientLocationInVehicle)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__gtR02aNEe2Mns8sNTkjCw" type="_zMwjMIccEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__gtR1GaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__hIvomaNEe2Mns8sNTkjCw" name="getVehicleOccupantSafetyEquipment" bodyCondition="__hIvpWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__hIvpWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__hIvomaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__hIvpmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::VehicleOccupantSafetyEquipment))->asSequence()->any(true).oclAsType(emspcr::VehicleOccupantSafetyEquipment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__hIvo2aNEe2Mns8sNTkjCw" type="_bsVJUIcdEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__hIvpGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__hjmYmaNEe2Mns8sNTkjCw" name="getAirbagDeploymentStatus" bodyCondition="__hjmZWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__hjmZWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__hjmYmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__hjmZmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::AirbagDeploymentStatus))->asSequence()->any(true).oclAsType(emspcr::AirbagDeploymentStatus)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__hjmY2aNEe2Mns8sNTkjCw" type="_2lRhsIcdEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__hjmZGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__iA5YGaNEe2Mns8sNTkjCw" name="getHeightOfFall" bodyCondition="__iA5Y2aNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__iA5Y2aNEe2Mns8sNTkjCw" name="body" constrainedElement="__iA5YGaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__iA5ZGaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::HeightOfFall))->asSequence()->any(true).oclAsType(emspcr::HeightOfFall)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__iA5YWaNEe2Mns8sNTkjCw" type="_auKbcIceEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__iA5YmaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__iNGomaNEe2Mns8sNTkjCw" name="getDisasterType" bodyCondition="__iNGpWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__iNGpWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__iNGomaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__iNGpmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::DisasterType))->asSequence()->any(true).oclAsType(emspcr::DisasterType)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__iNGo2aNEe2Mns8sNTkjCw" type="_wKL4IIceEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__iNGpGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_pIikMHwDEeGW3cDolvqrTA" name="EMSCardiacArrestEventSection">
      <ownedComment xmi:id="_eAWn0CUeEeOPwcQY2yBpiA">
        <body>Information regarding a cardiac arrest</body>
      </ownedComment>
      <ownedRule xmi:id="__B7EEWaNEe2Mns8sNTkjCw" name="EMSCardiacArrestEventSectionTemplateId" constrainedElement="_pIikMHwDEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__B7rIGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.14' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__B8SMGaNEe2Mns8sNTkjCw" name="EMSCardiacArrestEventSectionCode" constrainedElement="_pIikMHwDEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__B8SMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67799-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__B9gUGaNEe2Mns8sNTkjCw" name="EMSCardiacArrestEventSectionCodeP" constrainedElement="_pIikMHwDEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__B9gUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__B_VgGaNEe2Mns8sNTkjCw" name="EMSCardiacArrestEventSectionTitle" constrainedElement="_pIikMHwDEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__B_VgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Cardiac Arrest Event')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__CAjoGaNEe2Mns8sNTkjCw" name="EMSCardiacArrestEventSectionText" constrainedElement="_pIikMHwDEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__CAjoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__YuagGaNEe2Mns8sNTkjCw" name="EMSCardiacArrestEventSectionCardiacArrestExistence" constrainedElement="_pIikMHwDEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YuagWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::CardiacArrest) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pIlAcHwDEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__YuagmaNEe2Mns8sNTkjCw" name="getCardiacArrestExistence" bodyCondition="__YuahWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__YuahWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__YuagmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__YuahmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CardiacArrest))->asSequence()->any(true).oclAsType(emspcr::CardiacArrest)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__Yuag2aNEe2Mns8sNTkjCw" type="_Qlqj8HwGEeGW3cDolvqrTA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__YuahGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_i4C-AH9aEeGht55Sz1eBOw" name="EMSAdvanceDirectivesSection">
      <ownedComment xmi:id="_ryjSACSSEeO2bfzIdJE0yg">
        <body>Information regarding patient advance directives</body>
      </ownedComment>
      <ownedRule xmi:id="__C5UcGaNEe2Mns8sNTkjCw" name="EMSAdvanceDirectivesSectionTemplateId" constrainedElement="_i4C-AH9aEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__C5UcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.12' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__C57gGaNEe2Mns8sNTkjCw" name="EMSAdvanceDirectivesSectionCode" constrainedElement="_i4C-AH9aEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__C57gWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67840-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__C7JoGaNEe2Mns8sNTkjCw" name="EMSAdvanceDirectivesSectionCodeP" constrainedElement="_i4C-AH9aEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__C7JoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__C8XwGaNEe2Mns8sNTkjCw" name="EMSAdvanceDirectivesSectionTitle" constrainedElement="_i4C-AH9aEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__C8XwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__C9l4GaNEe2Mns8sNTkjCw" name="EMSAdvanceDirectivesSectionText" constrainedElement="_i4C-AH9aEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__C9l4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eAjIGaNEe2Mns8sNTkjCw" name="EMSAdvanceDirectivesSectionAdvancedDirectiveObservation" constrainedElement="_i4C-AH9aEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eAjIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::AdvanceDirectiveObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_kG590H9aEeGht55Sz1eBOw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__eAjImaNEe2Mns8sNTkjCw" name="getAdvancedDirectiveObservation" bodyCondition="__eAjJWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__eAjJWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__eAjImaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__eAjJmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::AdvanceDirectiveObservation))->asSequence()->any(true).oclAsType(emspcr::AdvanceDirectiveObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__eAjI2aNEe2Mns8sNTkjCw" type="_xCcE0Iy7EeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__eAjJGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_nSjIgH9cEeGht55Sz1eBOw" name="EMSAllergiesAndAdverseReactionsSection">
      <ownedComment xmi:id="_NTt7kCSTEeO2bfzIdJE0yg">
        <body>Information regarding patient allergies and sensitivities</body>
      </ownedComment>
      <ownedRule xmi:id="__C-M8GaNEe2Mns8sNTkjCw" name="EMSAllergiesAndAdverseReactionsSectionTemplateId" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__C-M8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.13' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__C-0AGaNEe2Mns8sNTkjCw" name="EMSAllergiesAndAdverseReactionsSectionCode" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__C-0AWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '48765-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__DACIGaNEe2Mns8sNTkjCw" name="EMSAllergiesAndAdverseReactionsSectionCodeP" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__DACIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__DBQQGaNEe2Mns8sNTkjCw" name="EMSAllergiesAndAdverseReactionsSectionTitle" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__DBQQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__DCeYGaNEe2Mns8sNTkjCw" name="EMSAllergiesAndAdverseReactionsSectionText" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__DCeYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__efrUGaNEe2Mns8sNTkjCw" name="EMSAllergiesAndAdverseReactionsSectionEnvironmentalAllergies" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__efrUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::NonDrugAllergyOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ADTBgGaOEe2Mns8sNTkjCw" name="EMSAllergiesAndAdverseReactionsSectionEMSDrugAllergyOrganizer" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ADTBgWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::DrugAllergyOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_p8HLwH9cEeGht55Sz1eBOw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__efrUmaNEe2Mns8sNTkjCw" name="getEnvironmentalAllergies" bodyCondition="__egSYGaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__egSYGaNEe2Mns8sNTkjCw" name="body" constrainedElement="__efrUmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__egSYWaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::NonDrugAllergyOrganizer))->asSequence()->any(true).oclAsType(emspcr::NonDrugAllergyOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__efrU2aNEe2Mns8sNTkjCw" type="_CFApcIzGEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__efrVGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ADTBgmaOEe2Mns8sNTkjCw" name="getEMSDrugAllergyOrganizer" bodyCondition="_ADTBhWaOEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="_ADTBhWaOEe2Mns8sNTkjCw" name="body" constrainedElement="_ADTBgmaOEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ADTBhmaOEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::DrugAllergyOrganizer))->asSequence()->any(true).oclAsType(emspcr::DrugAllergyOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ADTBg2aOEe2Mns8sNTkjCw" type="_JHDCEK9UEeO6uquZyO0R2Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ADTBhGaOEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aDO5AIcnEeGqF6qfYwLiQw" name="EMSCurrentMedicationSection">
      <ownedComment xmi:id="_Dz0XkCUgEeOPwcQY2yBpiA">
        <body>Information regarding a patient's current medications</body>
      </ownedComment>
      <ownedRule xmi:id="__DDsgGaNEe2Mns8sNTkjCw" name="EMSCurrentMedicationSectionTemplateId" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__DDsgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.15' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__DETkGaNEe2Mns8sNTkjCw" name="EMSCurrentMedicationSectionCode" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__DETkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67844-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__DFhsGaNEe2Mns8sNTkjCw" name="EMSCurrentMedicationSectionCodeP" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__DFhsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__DGv0GaNEe2Mns8sNTkjCw" name="EMSCurrentMedicationSectionTitle" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__DGv0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__DH98GaNEe2Mns8sNTkjCw" name="EMSCurrentMedicationSectionText" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__DH98WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__oqT8GaNEe2Mns8sNTkjCw" name="EMSCurrentMedicationSectionCurrentlyOnMedication" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__oqT8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::CurrentlyOnMedication) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__o16IGaNEe2Mns8sNTkjCw" name="EMSCurrentMedicationSectionCurrentMedication" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__o2hMGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(emspcr::CurrentMedication) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_cWgjMIcnEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__oqT8maNEe2Mns8sNTkjCw" name="getCurrentlyOnMedication" bodyCondition="__oqT9WaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__oqT9WaNEe2Mns8sNTkjCw" name="body" constrainedElement="__oqT8maNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__oqT9maNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CurrentlyOnMedication))->asSequence()->any(true).oclAsType(emspcr::CurrentlyOnMedication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__oqT82aNEe2Mns8sNTkjCw" type="_sUm-oIcnEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__oqT9GaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__o2hMWaNEe2Mns8sNTkjCw" name="getCurrentMedications" bodyCondition="__o2hNGaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__o2hNGaNEe2Mns8sNTkjCw" name="body" constrainedElement="__o2hMWaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__o2hNWaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(emspcr::CurrentMedication)).oclAsType(emspcr::CurrentMedication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__o2hMmaNEe2Mns8sNTkjCw" type="_mwn8MIcoEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__o2hM2aNEe2Mns8sNTkjCw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_1XH7YIziEeGnhceUMXltng" name="EMSSocialHistorySection">
      <ownedComment xmi:id="_nF9UcC0AEeO0H9tywllqaQ">
        <body>Information about the patient's social environment</body>
      </ownedComment>
      <ownedRule xmi:id="__EUQwGaNEe2Mns8sNTkjCw" name="EMSSocialHistorySectionTemplateId" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__EUQwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.22' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__EU30GaNEe2Mns8sNTkjCw" name="EMSSocialHistorySectionCode" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__EU30WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67843-3' and value.codeSystem = '2.16.840.1.113883.6.1'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__EWF8GaNEe2Mns8sNTkjCw" name="EMSSocialHistorySectionCodeP" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__EWF8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.code.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__EXUEGaNEe2Mns8sNTkjCw" name="EMSSocialHistorySectionTitle" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__EXUEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__EYiMGaNEe2Mns8sNTkjCw" name="EMSSocialHistorySectionText" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__EYiMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__lkjsGaNEe2Mns8sNTkjCw" name="EMSSocialHistorySectionExistenceOfDrugUseIndication" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__lkjsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ExistenceOfDrugUseIndication) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__lsfgGaNEe2Mns8sNTkjCw" name="EMSSocialHistorySectionDrugUseIndication" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ltGkGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::DrugUseIndication) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1XIicIziEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__lkjsmaNEe2Mns8sNTkjCw" name="getExistenceOfDrugUseIndication" bodyCondition="__lkjtWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__lkjtWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__lkjsmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__lkjtmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ExistenceOfDrugUseIndication))->asSequence()->any(true).oclAsType(emspcr::ExistenceOfDrugUseIndication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__lkjs2aNEe2Mns8sNTkjCw" type="_Mr964IzjEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__lkjtGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__ltGkWaNEe2Mns8sNTkjCw" name="getDrugUseIndication" bodyCondition="__ltGlGaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__ltGlGaNEe2Mns8sNTkjCw" name="body" constrainedElement="__ltGkWaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__ltGlWaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::DrugUseIndication))->asSequence()->any(true).oclAsType(emspcr::DrugUseIndication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__ltGkmaNEe2Mns8sNTkjCw" type="_oJHzkIzjEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__ltGk2aNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_jCzkkIzkEeGnhceUMXltng" name="EMSVitalSignsSection">
      <ownedComment xmi:id="_6jIiAC0EEeO0H9tywllqaQ">
        <body>Collection of vital signs and other observations about the patient's status</body>
      </ownedComment>
      <ownedRule xmi:id="__EhsIGaNEe2Mns8sNTkjCw" name="EMSVitalSignsSectionTemplateId" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__EhsIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.23' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__EiTMGaNEe2Mns8sNTkjCw" name="EMSVitalSignsSectionCode" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__EiTMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '8716-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__EkIYGaNEe2Mns8sNTkjCw" name="EMSVitalSignsSectionCodeP" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__EkIYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ElWgGaNEe2Mns8sNTkjCw" name="EMSVitalSignsSectionTitle" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ElWgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__El9kGaNEe2Mns8sNTkjCw" name="EMSVitalSignsSectionText" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__EmkoGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZU3cGaNEe2Mns8sNTkjCw" name="EMSVitalSignsSectionVitalSignsOrganizer" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZU3cWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::VitalSignsOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_jC0LoIzkEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__ZU3cmaNEe2Mns8sNTkjCw" name="getVitalSignsOrganizers" bodyCondition="__ZU3dWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__ZU3dWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__ZU3cmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZU3dmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::VitalSignsOrganizer)).oclAsType(emspcr::VitalSignsOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__ZU3c2aNEe2Mns8sNTkjCw" type="_JnfD8IzoEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__ZU3dGaNEe2Mns8sNTkjCw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_6223oJohEeG_FLcaRgAa7g" name="EMSPhysicalAssessmentSection">
      <ownedComment xmi:id="_Jd_okCwlEeOaIuM51LdlNw">
        <body>A collection of qualitative assessments of the patient's physical condition and other facts</body>
      </ownedComment>
      <ownedRule xmi:id="__EnLsGaNEe2Mns8sNTkjCw" name="EMSPhysicalAssessmentSectionTemplateId" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__EnLsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.20' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__EnywGaNEe2Mns8sNTkjCw" name="EMSPhysicalAssessmentSectionCode" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__EnywWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '29545-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__EpA4GaNEe2Mns8sNTkjCw" name="EMSPhysicalAssessmentSectionCodeP" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__EpA4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__EqPAGaNEe2Mns8sNTkjCw" name="EMSPhysicalAssessmentSectionTitle" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__EqPAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ErdIGaNEe2Mns8sNTkjCw" name="EMSPhysicalAssessmentSectionText" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ErdIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__pWQcGaNEe2Mns8sNTkjCw" name="EMSPhysicalAssessmentSectionPhysicalAssessmentOrganizer" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__pWQcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::PhysicalAssessmentOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__pgogGaNEe2Mns8sNTkjCw" name="EMSPhysicalAssessmentSectionPatientPregnancy" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__pgogWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientPregnancy) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__qAXwGaNEe2Mns8sNTkjCw" name="EMSPhysicalAssessmentSectionLastOralIntake" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__qAXwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::LastOralIntake) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__qOaMGaNEe2Mns8sNTkjCw" name="EMSPhysicalAssessmentSectionPatientAge" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__qPBQGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientAge) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__qgHAGaNEe2Mns8sNTkjCw" name="EMSPhysicalAssessmentSectionThrombolyticContraindications" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__qgHAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ThrombolyticContraindications) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__rFV0GaNEe2Mns8sNTkjCw" name="EMSPhysicalAssessmentSectionBarriersToPatientCare" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__rFV0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::BarriersToPatientCare) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ADufUGaOEe2Mns8sNTkjCw" name="EMSPhysicalAssessmentSectionBodyWeight" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ADufUWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.oclIsUndefined() and entry.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AD5ecGaOEe2Mns8sNTkjCw" name="EMSPhysicalAssessmentSectionLengthBasedBodyWeight" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AD5ecWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.oclIsUndefined() and entry.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_CzqWIJoiEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__pWQcmaNEe2Mns8sNTkjCw" name="getPhysicalAssessmentOrganizers" bodyCondition="__pWQdWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__pWQdWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__pWQcmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__pWQdmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::PhysicalAssessmentOrganizer)).oclAsType(emspcr::PhysicalAssessmentOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__pWQc2aNEe2Mns8sNTkjCw" type="_zbYvIJoiEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__pWQdGaNEe2Mns8sNTkjCw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__pgogmaNEe2Mns8sNTkjCw" name="getPatientPregnancy" bodyCondition="__pgohWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__pgohWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__pgogmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__pgohmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientPregnancy))->asSequence()->any(true).oclAsType(emspcr::PatientPregnancy)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__pgog2aNEe2Mns8sNTkjCw" type="_sW8QcJosEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__pgohGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__qAXwmaNEe2Mns8sNTkjCw" name="getLastOralIntake" bodyCondition="__qAXxWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__qAXxWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__qAXwmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__qAXxmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::LastOralIntake))->asSequence()->any(true).oclAsType(emspcr::LastOralIntake)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__qAXw2aNEe2Mns8sNTkjCw" type="_S1I0sJotEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__qAXxGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__qPBQWaNEe2Mns8sNTkjCw" name="getPatientAge" bodyCondition="__qPBRGaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__qPBRGaNEe2Mns8sNTkjCw" name="body" constrainedElement="__qPBQWaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__qPBRWaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientAge))->asSequence()->any(true).oclAsType(emspcr::PatientAge)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__qPBQmaNEe2Mns8sNTkjCw" type="_rhjrIJotEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__qPBQ2aNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__qgHAmaNEe2Mns8sNTkjCw" name="getThrombolyticContraindications" bodyCondition="__qgHBWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__qgHBWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__qgHAmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__qgHBmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ThrombolyticContraindications))->asSequence()->any(true).oclAsType(emspcr::ThrombolyticContraindications)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__qgHA2aNEe2Mns8sNTkjCw" type="_HuCH8JouEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__qgHBGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__rFV0maNEe2Mns8sNTkjCw" name="getBarriersToPatientCare" bodyCondition="__rFV1WaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__rFV1WaNEe2Mns8sNTkjCw" name="body" constrainedElement="__rFV0maNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__rFV1maNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::BarriersToPatientCare))->asSequence()->any(true).oclAsType(emspcr::BarriersToPatientCare)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__rFV02aNEe2Mns8sNTkjCw" type="_qlUP4JouEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__rFV1GaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_c7crcJovEeG_FLcaRgAa7g" name="EMSMedicationsAdministeredSection">
      <ownedComment xmi:id="_X8kYsCwqEeOaIuM51LdlNw">
        <body>Collection of information regarding the administration of medications</body>
      </ownedComment>
      <ownedRule xmi:id="__E0nEGaNEe2Mns8sNTkjCw" name="EMSMedicationsAdministeredSectionTemplateId" constrainedElement="_c7crcJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__E0nEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.18' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__E1OIGaNEe2Mns8sNTkjCw" name="EMSMedicationsAdministeredSectionCode" constrainedElement="_c7crcJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__E1OIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67849-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__E2cQGaNEe2Mns8sNTkjCw" name="EMSMedicationsAdministeredSectionCodeP" constrainedElement="_c7crcJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__E2cQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__E3qYGaNEe2Mns8sNTkjCw" name="EMSMedicationsAdministeredSectionTitle" constrainedElement="_c7crcJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__E3qYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__E44gGaNEe2Mns8sNTkjCw" name="EMSMedicationsAdministeredSectionText" constrainedElement="_c7crcJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__E44gWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__mMOwGaNEe2Mns8sNTkjCw" name="EMSMedicationsAdministeredSectionMedicationAdministered" constrainedElement="_c7crcJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__mMOwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(emspcr::MedicationAdministered) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_d57s8JovEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__mMOwmaNEe2Mns8sNTkjCw" name="getMedicationAdministereds" bodyCondition="__mMOxWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__mMOxWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__mMOwmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__mMOxmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(emspcr::MedicationAdministered)).oclAsType(emspcr::MedicationAdministered)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__mMOw2aNEe2Mns8sNTkjCw" type="_5JQlAJovEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__mMOxGaNEe2Mns8sNTkjCw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4QFw8JumEeGzXI65shd6Fw" name="EMSProceduresPerformedSection">
      <ownedComment xmi:id="_UKGrQCz8EeO0H9tywllqaQ">
        <body>Information regarding procedures performed by the EMS personnel or by others prior to EMS unit arrival</body>
      </ownedComment>
      <ownedRule xmi:id="__HEp1WaNEe2Mns8sNTkjCw" name="EMSProceduresPerformedSectionTemplateId" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__HEp1maNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.21' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__HFQ4GaNEe2Mns8sNTkjCw" name="EMSProceduresPerformedSectionCode" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__HFQ4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '29554-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__HGfAGaNEe2Mns8sNTkjCw" name="EMSProceduresPerformedSectionCodeP" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__HGfAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__HHtIGaNEe2Mns8sNTkjCw" name="EMSProceduresPerformedSectionTitle" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__HHtIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__HI7QGaNEe2Mns8sNTkjCw" name="EMSProceduresPerformedSectionText" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__HI7QWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__YJLsGaNEe2Mns8sNTkjCw" name="EMSProceduresPerformedSectionProcedureActivityProcedure1" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YJLsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(emspcr::Procedure))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4mzn0JumEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__YJLsmaNEe2Mns8sNTkjCw" name="getProcedureActivityProcedure1s" bodyCondition="__YJLtWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__YJLtWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__YJLsmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__YJLtmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(emspcr::Procedure)).oclAsType(emspcr::Procedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__YJLs2aNEe2Mns8sNTkjCw" type="_K8JK8JuoEeGzXI65shd6Fw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__YJLtGaNEe2Mns8sNTkjCw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iDmQYJ9mEeGw9ZRnaFfEZQ" name="EMSPatientCareNarrativeSection">
      <ownedComment xmi:id="_eq61ICwsEeOaIuM51LdlNw">
        <body>A narrative description of the EMS encounter</body>
      </ownedComment>
      <ownedRule xmi:id="__JuVMGaNEe2Mns8sNTkjCw" name="EMSPatientCareNarrativeSectionTemplateId" constrainedElement="_iDmQYJ9mEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__JuVMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.1' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Ju8QGaNEe2Mns8sNTkjCw" name="EMSPatientCareNarrativeSectionCode" constrainedElement="_iDmQYJ9mEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Ju8QWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67781-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__JwKYGaNEe2Mns8sNTkjCw" name="EMSPatientCareNarrativeSectionCodeP" constrainedElement="_iDmQYJ9mEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__JwKYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__JxYgGaNEe2Mns8sNTkjCw" name="EMSPatientCareNarrativeSectionTitle" constrainedElement="_iDmQYJ9mEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__JxYgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__JymoGaNEe2Mns8sNTkjCw" name="EMSPatientCareNarrativeSectionText" constrainedElement="_iDmQYJ9mEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__JymoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ioK9EJ9mEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_OV4TIJ9nEeGw9ZRnaFfEZQ" name="EMSDispatchSection">
      <ownedComment xmi:id="_h4oSMCUkEeOEaIF_MBGm_A">
        <body>Information regarding the dispatch process</body>
      </ownedComment>
      <ownedRule xmi:id="__J7wl2aNEe2Mns8sNTkjCw" name="EMSDispatchSectionTemplateId" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__J7wmGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.2' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__J8-sGaNEe2Mns8sNTkjCw" name="EMSDispatchSectionCode" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__J8-sWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67660-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__J-M0GaNEe2Mns8sNTkjCw" name="EMSDispatchSectionCodeP" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__J-M0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__J_a8GaNEe2Mns8sNTkjCw" name="EMSDispatchSectionTitle" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__J_a8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__KApEGaNEe2Mns8sNTkjCw" name="EMSDispatchSectionText" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__KApEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__nyxQGaNEe2Mns8sNTkjCw" name="EMSDispatchSectionEmergencyMedicalDispatchObservation" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__nyxQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::EmergencyMedicalDispatchObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__oPdMGaNEe2Mns8sNTkjCw" name="EMSDispatchSectionComplaintReportedByDispatch" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__oPdMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::DispatchReason) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PS8YUJ9nEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__nyxQmaNEe2Mns8sNTkjCw" name="getEmergencyMedicalDispatchObservation" bodyCondition="__nyxRWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__nyxRWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__nyxQmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__nyxRmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::EmergencyMedicalDispatchObservation))->asSequence()->any(true).oclAsType(emspcr::EmergencyMedicalDispatchObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__nyxQ2aNEe2Mns8sNTkjCw" type="_46UUAJ9nEeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__nyxRGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__oPdMmaNEe2Mns8sNTkjCw" name="getComplaintReportedByDispatch" bodyCondition="__oPdNWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__oPdNWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__oPdMmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__oPdNmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::DispatchReason))->asSequence()->any(true).oclAsType(emspcr::DispatchReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__oPdM2aNEe2Mns8sNTkjCw" type="__LltsJ97EeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__oPdNGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_LI7M8J99EeGw9ZRnaFfEZQ" name="EMSResponseSection">
      <ownedComment xmi:id="_Ag0QICz_EeO0H9tywllqaQ">
        <body>Information regarding the EMS crew's response to dispatch</body>
      </ownedComment>
      <ownedRule xmi:id="__KBQIGaNEe2Mns8sNTkjCw" name="EMSResponseSectionTemplateId" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__KBQIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.3' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__KCeQGaNEe2Mns8sNTkjCw" name="EMSResponseSectionCode" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__KCeQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67664-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__KDsYGaNEe2Mns8sNTkjCw" name="EMSResponseSectionCodeP" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__KDsYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__KE6gGaNEe2Mns8sNTkjCw" name="EMSResponseSectionTitle" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__KE6gWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__KGIoGaNEe2Mns8sNTkjCw" name="EMSResponseSectionText" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__KGIoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__vHhQGaNEe2Mns8sNTkjCw" name="EMSResponseSectionDelayOrganizer" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__vIIUGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::DelayOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__vR5UGaNEe2Mns8sNTkjCw" name="EMSResponseSectionDispatchLocationOrganizer" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__vR5UWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::DispatchLocationOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__vc4cGaNEe2Mns8sNTkjCw" name="EMSResponseSectionResponseOdometerReadingOrganizer" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__vc4cWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::ResponseOdometerReadingOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__vmCYGaNEe2Mns8sNTkjCw" name="EMSResponseSectionResponseModeToScene" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__vmCYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ResponseModeToScene) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_M0JYoJ99EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__vIIUWaNEe2Mns8sNTkjCw" name="getDelayOrganizer" bodyCondition="__vIIVGaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__vIIVGaNEe2Mns8sNTkjCw" name="body" constrainedElement="__vIIUWaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__vIIVWaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::DelayOrganizer))->asSequence()->any(true).oclAsType(emspcr::DelayOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__vIIUmaNEe2Mns8sNTkjCw" type="_0padgJ99EeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__vIIU2aNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__vR5UmaNEe2Mns8sNTkjCw" name="getDispatchLocationOrganizer" bodyCondition="__vR5VWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__vR5VWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__vR5UmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__vR5VmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::DispatchLocationOrganizer))->asSequence()->any(true).oclAsType(emspcr::DispatchLocationOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__vR5U2aNEe2Mns8sNTkjCw" type="_MiN-UJ-BEeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__vR5VGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__vc4cmaNEe2Mns8sNTkjCw" name="getResponseOdometerReadingOrganizer" bodyCondition="__vc4dWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__vc4dWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__vc4cmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__vc4dmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::ResponseOdometerReadingOrganizer))->asSequence()->any(true).oclAsType(emspcr::ResponseOdometerReadingOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__vc4c2aNEe2Mns8sNTkjCw" type="_yVviAJ-OEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__vc4dGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__vmCYmaNEe2Mns8sNTkjCw" name="getResponseModeToScene" bodyCondition="__vmCZWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__vmCZWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__vmCYmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__vmCZmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ResponseModeToScene))->asSequence()->any(true).oclAsType(emspcr::ResponseModeToScene)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__vmCY2aNEe2Mns8sNTkjCw" type="_l_V6IJ-bEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__vmCZGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_i-lM8J-dEeGorI3CPDW2ww" name="EMSDispositionSection">
      <ownedComment xmi:id="_juoxkCUkEeOEaIF_MBGm_A">
        <body>Information regarding the disposition of the patient</body>
      </ownedComment>
      <ownedRule xmi:id="__MxCIWaNEe2Mns8sNTkjCw" name="EMSDispositionSectionTemplateId" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__MxCImaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.4' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__MxpMGaNEe2Mns8sNTkjCw" name="EMSDispositionSectionCode" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__MxpMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67661-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__My3UGaNEe2Mns8sNTkjCw" name="EMSDispositionSectionCodeP" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__My3UWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__M0FcGaNEe2Mns8sNTkjCw" name="EMSDispositionSectionTitle" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__M0FcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Disposition')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__M1TkGaNEe2Mns8sNTkjCw" name="EMSDispositionSectionText" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__M1TkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZlWIGaNEe2Mns8sNTkjCw" name="EMSDispositionSectionNumberOfPatientsObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Zl9MGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::NumberOfPatientsTransportedObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZzYkGaNEe2Mns8sNTkjCw" name="EMSDispositionSectionTransportModeObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZzYkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::TransportModeObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aVkEGaNEe2Mns8sNTkjCw" name="EMSDispositionSectionTransportMethodObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aVkEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::TransportMethodObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ay3EGaNEe2Mns8sNTkjCw" name="EMSDispositionSectionReasonForChoosingDestinationObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ay3EWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ReasonForChoosingDestinationObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bR_QGaNEe2Mns8sNTkjCw" name="EMSDispositionSectionPrearrivalActivationObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bR_QWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PrearrivalActivationObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bxHcGaNEe2Mns8sNTkjCw" name="EMSDispositionSectionPatientConditionChangeAtDestinationObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bxHcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientConditionAtDestinationObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AGT5QGaOEe2Mns8sNTkjCw" name="EMSDispositionSectionPrimaryDestinationHospitalCapability" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AGUgUGaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::DestinationHospitalCapability) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AG02oGaOEe2Mns8sNTkjCw" name="EMSDispositionSectionDestinationWard" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AG02oWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::DestinationWard) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AKa9MGaOEe2Mns8sNTkjCw" name="EMSDispositionSectionUnitDisposition" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AKa9MWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitDisposition) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ALLLIGaOEe2Mns8sNTkjCw" name="EMSDispositionSectionPatientEngagement" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ALLLIWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientEngagement) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ALTG8GaOEe2Mns8sNTkjCw" name="EMSDispositionSectionCrewDisposition" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ALTG8WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::CrewDisposition) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ALabsGaOEe2Mns8sNTkjCw" name="EMSDispositionSectionTransportDisposition" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ALabsWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::TransportDisposition) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_kGvu4J-dEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__Zl9MWaNEe2Mns8sNTkjCw" name="getNumberOfPatientsObservation" bodyCondition="__Zl9NGaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__Zl9NGaNEe2Mns8sNTkjCw" name="body" constrainedElement="__Zl9MWaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__Zl9NWaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::NumberOfPatientsTransportedObservation))->asSequence()->any(true).oclAsType(emspcr::NumberOfPatientsTransportedObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__Zl9MmaNEe2Mns8sNTkjCw" type="_Dfaa4J-eEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__Zl9M2aNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__ZzYkmaNEe2Mns8sNTkjCw" name="getTransportModeObservation" bodyCondition="__ZzYlWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__ZzYlWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__ZzYkmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZzYlmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::TransportModeObservation))->asSequence()->any(true).oclAsType(emspcr::TransportModeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__ZzYk2aNEe2Mns8sNTkjCw" type="_nv-0gp-fEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__ZzYlGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__aWLIGaNEe2Mns8sNTkjCw" name="getTransportMethodObservation" bodyCondition="__aWLI2aNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__aWLI2aNEe2Mns8sNTkjCw" name="body" constrainedElement="__aWLIGaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__aWLJGaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::TransportMethodObservation))->asSequence()->any(true).oclAsType(emspcr::TransportMethodObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__aWLIWaNEe2Mns8sNTkjCw" type="_EagUtZ-fEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__aWLImaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__azeIGaNEe2Mns8sNTkjCw" name="getReasonForChoosingDestinationObservation" bodyCondition="__azeI2aNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__azeI2aNEe2Mns8sNTkjCw" name="body" constrainedElement="__azeIGaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__azeJGaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ReasonForChoosingDestinationObservation))->asSequence()->any(true).oclAsType(emspcr::ReasonForChoosingDestinationObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__azeIWaNEe2Mns8sNTkjCw" type="_cm1D5Z-hEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__azeImaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__bR_QmaNEe2Mns8sNTkjCw" name="getPrearrivalActivationObservations" bodyCondition="__bR_RWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__bR_RWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__bR_QmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__bR_RmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PrearrivalActivationObservation)).oclAsType(emspcr::PrearrivalActivationObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__bR_Q2aNEe2Mns8sNTkjCw" type="_083apZ-hEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__bR_RGaNEe2Mns8sNTkjCw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__bxHcmaNEe2Mns8sNTkjCw" name="getPatientConditionChangeAtDestinationObservation" bodyCondition="__bxHdWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__bxHdWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__bxHcmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__bxHdmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientConditionAtDestinationObservation))->asSequence()->any(true).oclAsType(emspcr::PatientConditionAtDestinationObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__bxHc2aNEe2Mns8sNTkjCw" type="_Q4zL9Z-gEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__bxHdGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_AGUgUWaOEe2Mns8sNTkjCw" name="getPrimaryDestinationHospitalCapability" bodyCondition="_AGUgVGaOEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="_AGUgVGaOEe2Mns8sNTkjCw" name="body" constrainedElement="_AGUgUWaOEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_AGUgVWaOEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::DestinationHospitalCapability))->asSequence()->any(true).oclAsType(emspcr::DestinationHospitalCapability)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_AGUgUmaOEe2Mns8sNTkjCw" type="_Eb5OsMxCEeSOI6Ao2VuoSQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AGUgU2aOEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_AG1dsGaOEe2Mns8sNTkjCw" name="getDestinationWard" bodyCondition="_AG1ds2aOEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="_AG1ds2aOEe2Mns8sNTkjCw" name="body" constrainedElement="_AG1dsGaOEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_AG1dtGaOEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::DestinationWard))->asSequence()->any(true).oclAsType(emspcr::DestinationWard)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_AG1dsWaOEe2Mns8sNTkjCw" type="_oKeDoMxFEeSOI6Ao2VuoSQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AG1dsmaOEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_AKbkQGaOEe2Mns8sNTkjCw" name="getUnitDisposition" bodyCondition="_AKbkQ2aOEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="_AKbkQ2aOEe2Mns8sNTkjCw" name="body" constrainedElement="_AKbkQGaOEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_AKbkRGaOEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitDisposition))->asSequence()->any(true).oclAsType(emspcr::UnitDisposition)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_AKbkQWaOEe2Mns8sNTkjCw" type="_uSA4MDKiEeyOwtfRawW6Qw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AKbkQmaOEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ALLLImaOEe2Mns8sNTkjCw" name="getPatientEngagement" bodyCondition="_ALLLJWaOEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="_ALLLJWaOEe2Mns8sNTkjCw" name="body" constrainedElement="_ALLLImaOEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ALLLJmaOEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientEngagement))->asSequence()->any(true).oclAsType(emspcr::PatientEngagement)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ALLLI2aOEe2Mns8sNTkjCw" type="_2BpygDKkEeyOwtfRawW6Qw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ALLLJGaOEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ALTG8maOEe2Mns8sNTkjCw" name="getCrewDisposition" bodyCondition="_ALTG9WaOEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="_ALTG9WaOEe2Mns8sNTkjCw" name="body" constrainedElement="_ALTG8maOEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ALTG9maOEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CrewDisposition))->asSequence()->any(true).oclAsType(emspcr::CrewDisposition)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ALTG82aOEe2Mns8sNTkjCw" type="_PFi4UDKmEeyOwtfRawW6Qw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ALTG9GaOEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ALbCwGaOEe2Mns8sNTkjCw" name="getTransportDisposition" bodyCondition="_ALbCw2aOEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="_ALbCw2aOEe2Mns8sNTkjCw" name="body" constrainedElement="_ALbCwGaOEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ALbCxGaOEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::TransportDisposition))->asSequence()->any(true).oclAsType(emspcr::TransportDisposition)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ALbCwWaOEe2Mns8sNTkjCw" type="_Kp-OcDKyEeyOwtfRawW6Qw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ALbCwmaOEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_GGotEJ-kEeGorI3CPDW2ww" name="EMSPersonnelAdverseEventSection">
      <ownedComment xmi:id="_MbR_cCwtEeOaIuM51LdlNw">
        <body>Information regarding adverse events affecting EMS personnel</body>
      </ownedComment>
      <ownedRule xmi:id="__M2hsGaNEe2Mns8sNTkjCw" name="EMSPersonnelAdverseEventSectionTemplateId" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__M2hsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.6' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__M3IwGaNEe2Mns8sNTkjCw" name="EMSPersonnelAdverseEventSectionCode" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__M3IwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67658-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__M4W4GaNEe2Mns8sNTkjCw" name="EMSPersonnelAdverseEventSectionCodeP" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__M4W4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__M5lAGaNEe2Mns8sNTkjCw" name="EMSPersonnelAdverseEventSectionTitle" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__M5lAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__M6zIGaNEe2Mns8sNTkjCw" name="EMSPersonnelAdverseEventSectionText" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__M6zIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__svisGaNEe2Mns8sNTkjCw" name="EMSPersonnelAdverseEventSectionAdverseEventIndicator" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__svisWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::AdverseEventIndicator) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__s8-EGaNEe2Mns8sNTkjCw" name="EMSPersonnelAdverseEventSectionAdverseEventTypeObservation" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__s8-EWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::AdverseEventTypeObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_GrtJAJ-kEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__svismaNEe2Mns8sNTkjCw" name="getAdverseEventIndicator" bodyCondition="__svitWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__svitWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__svismaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__svitmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::AdverseEventIndicator))->asSequence()->any(true).oclAsType(emspcr::AdverseEventIndicator)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__svis2aNEe2Mns8sNTkjCw" type="_p4XEAJ-kEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__svitGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__s8-EmaNEe2Mns8sNTkjCw" name="getAdverseEventTypeObservation" bodyCondition="__s9lImaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__s9lImaNEe2Mns8sNTkjCw" name="body" constrainedElement="__s8-EmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__s9lI2aNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::AdverseEventTypeObservation))->asSequence()->any(true).oclAsType(emspcr::AdverseEventTypeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__s9lIGaNEe2Mns8sNTkjCw" type="_gU4tMJ-lEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__s9lIWaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aK7P4J-mEeGorI3CPDW2ww" name="EMSProtocolSection">
      <ownedComment xmi:id="_kDY4ICz8EeO0H9tywllqaQ">
        <body>Information about the protocol used by EMS personnel to direct the clinical care of the patient</body>
      </ownedComment>
      <ownedRule xmi:id="__M7aMGaNEe2Mns8sNTkjCw" name="EMSProtocolSectionTemplateId" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__M7aMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.7' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__M8BQWaNEe2Mns8sNTkjCw" name="EMSProtocolSectionCode" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__M8BQmaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67663-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__M9PYGaNEe2Mns8sNTkjCw" name="EMSProtocolSectionCodeP" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__M9PYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__M_EkGaNEe2Mns8sNTkjCw" name="EMSProtocolSectionTitle" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__M_EkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__NASsGaNEe2Mns8sNTkjCw" name="EMSProtocolSectionText" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__NASsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__uLGEGaNEe2Mns8sNTkjCw" name="EMSProtocolSectionProtocolObservation" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__uLGEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ProtocolObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__uqOQGaNEe2Mns8sNTkjCw" name="EMSProtocolSectionCandidatePatientRegistryType" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__uqOQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::CandidatePatientRegistryType) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_a15fgJ-mEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__uLGEmaNEe2Mns8sNTkjCw" name="getProtocolObservations" bodyCondition="__uLGFWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__uLGFWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__uLGEmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__uLGFmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ProtocolObservation)).oclAsType(emspcr::ProtocolObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__uLGE2aNEe2Mns8sNTkjCw" type="_rDpggp-mEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__uLGFGaNEe2Mns8sNTkjCw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__uqOQmaNEe2Mns8sNTkjCw" name="getCandidatePatientRegistryType" bodyCondition="__uqORWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__uqORWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__uqOQmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__uqORmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CandidatePatientRegistryType))->asSequence()->any(true).oclAsType(emspcr::CandidatePatientRegistryType)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__uqOQ2aNEe2Mns8sNTkjCw" type="_n-zaBZ-nEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__uqORGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_h3A8IKK3EeGOxth0BgV-QA" name="EMSSceneSection">
      <ownedComment xmi:id="_dKMO4C0AEeO0H9tywllqaQ">
        <body>Information about the environment in which the patient is found</body>
      </ownedComment>
      <ownedRule xmi:id="__NBg0GaNEe2Mns8sNTkjCw" name="EMSSceneSectionTemplateId" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__NBg0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.8' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__NCH4GaNEe2Mns8sNTkjCw" name="EMSSceneSectionCode" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__NCH4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67665-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__NDWAGaNEe2Mns8sNTkjCw" name="EMSSceneSectionCodeP" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__NDWAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__NEkIGaNEe2Mns8sNTkjCw" name="EMSSceneSectionTitle" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__NEkIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__NFLMGaNEe2Mns8sNTkjCw" name="EMSSceneSectionText" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__NFLMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__rlFEGaNEe2Mns8sNTkjCw" name="EMSSceneSectionFirstUnitIndicator" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__rlFEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::FirstUnitIndicator) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__r08sGaNEe2Mns8sNTkjCw" name="EMSSceneSectionScenePatientCount" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__r08sWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ScenePatientCount) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__r9fkGaNEe2Mns8sNTkjCw" name="EMSSceneSectionMassCasualtyIndicator" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__r9fkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::MassCasualtyIndicator) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__siHUGaNEe2Mns8sNTkjCw" name="EMSSceneSectionLocationTypeObservation" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__siHUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::LocationTypeObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_in9Q4KK3EeGOxth0BgV-QA">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__rlFEmaNEe2Mns8sNTkjCw" name="getFirstUnitIndicator" bodyCondition="__rlFFWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__rlFFWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__rlFEmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__rlFFmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::FirstUnitIndicator))->asSequence()->any(true).oclAsType(emspcr::FirstUnitIndicator)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__rlFE2aNEe2Mns8sNTkjCw" type="_Ox86UKK4EeGOxth0BgV-QA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__rlFFGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__r08smaNEe2Mns8sNTkjCw" name="getScenePatientCount" bodyCondition="__r08tWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__r08tWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__r08smaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__r08tmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ScenePatientCount))->asSequence()->any(true).oclAsType(emspcr::ScenePatientCount)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__r08s2aNEe2Mns8sNTkjCw" type="_wPLCkKK5EeGOxth0BgV-QA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__r08tGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__r9fkmaNEe2Mns8sNTkjCw" name="getMassCasualtyIndicator" bodyCondition="__r9flWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__r9flWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__r9fkmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__r9flmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::MassCasualtyIndicator))->asSequence()->any(true).oclAsType(emspcr::MassCasualtyIndicator)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__r9fk2aNEe2Mns8sNTkjCw" type="_E-SEAKK8EeGOxth0BgV-QA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__r9flGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__siHUmaNEe2Mns8sNTkjCw" name="getLocationTypeObservation" bodyCondition="__siHVWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__siHVWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__siHUmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__siHVmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::LocationTypeObservation))->asSequence()->any(true).oclAsType(emspcr::LocationTypeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__siHU2aNEe2Mns8sNTkjCw" type="_ayUKMMk3EeK2gbjCtOEivw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__siHVGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_olqMIKK8EeGOxth0BgV-QA" name="EMSSituationSection">
      <ownedComment xmi:id="_iWUVgC0AEeO0H9tywllqaQ">
        <body>Information about patient symptoms and complaints</body>
      </ownedComment>
      <ownedRule xmi:id="__NNuFGaNEe2Mns8sNTkjCw" name="EMSSituationSectionTemplateId" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__NNuFWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.9' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__NOVIGaNEe2Mns8sNTkjCw" name="EMSSituationSectionCode" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__NOVIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67666-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__NPjQGaNEe2Mns8sNTkjCw" name="EMSSituationSectionCodeP" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__NPjQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__NQxYGaNEe2Mns8sNTkjCw" name="EMSSituationSectionTitle" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__NQxYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__NRYcGaNEe2Mns8sNTkjCw" name="EMSSituationSectionText" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__NRYcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__jZZcGaNEe2Mns8sNTkjCw" name="EMSSituationSectionComplaint" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__jZZcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::Complaint) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__j7k8GaNEe2Mns8sNTkjCw" name="EMSSituationSectionPossibleInjury" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__j7k8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PossibleInjury) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__kKOcGaNEe2Mns8sNTkjCw" name="EMSSituationSectionProviderPrimaryImpression" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__kKOcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ProviderPrimaryImpression) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__kZfAGaNEe2Mns8sNTkjCw" name="EMSSituationSectionPrimarySymptom" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__kZfAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PrimarySymptom) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__kpWoGaNEe2Mns8sNTkjCw" name="EMSSituationSectionOtherSymptoms" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__kpWoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::OtherSymptoms) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__k4nMGaNEe2Mns8sNTkjCw" name="EMSSituationSectionProviderSecondaryImpressions" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__k4nMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ProviderSecondaryImpressions) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__lGCkGaNEe2Mns8sNTkjCw" name="EMSSituationSectionInitialPatientAcuity" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__lGCkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::InitialPatientAcuity) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pG54AKK8EeGOxth0BgV-QA">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__jaAgGaNEe2Mns8sNTkjCw" name="getComplaints" bodyCondition="__jaAg2aNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__jaAg2aNEe2Mns8sNTkjCw" name="body" constrainedElement="__jaAgGaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__jaAhGaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::Complaint)).oclAsType(emspcr::Complaint)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__jaAgWaNEe2Mns8sNTkjCw" type="_KEZzkKg-EeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__jaAgmaNEe2Mns8sNTkjCw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__j7k8maNEe2Mns8sNTkjCw" name="getPossibleInjury" bodyCondition="__j7k9WaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__j7k9WaNEe2Mns8sNTkjCw" name="body" constrainedElement="__j7k8maNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__j7k9maNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PossibleInjury))->asSequence()->any(true).oclAsType(emspcr::PossibleInjury)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__j7k82aNEe2Mns8sNTkjCw" type="_7nP0MKhCEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__j7k9GaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__kKOcmaNEe2Mns8sNTkjCw" name="getProviderPrimaryImpression" bodyCondition="__kKOdWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__kKOdWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__kKOcmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__kKOdmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ProviderPrimaryImpression))->asSequence()->any(true).oclAsType(emspcr::ProviderPrimaryImpression)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__kKOc2aNEe2Mns8sNTkjCw" type="_0C-8EKhDEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__kKOdGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__kZfAmaNEe2Mns8sNTkjCw" name="getPrimarySymptom" bodyCondition="__kZfBWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__kZfBWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__kZfAmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__kZfBmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PrimarySymptom))->asSequence()->any(true).oclAsType(emspcr::PrimarySymptom)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__kZfA2aNEe2Mns8sNTkjCw" type="_KOxo0KhEEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__kZfBGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__kpWomaNEe2Mns8sNTkjCw" name="getOtherSymptoms" bodyCondition="__kpWpWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__kpWpWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__kpWomaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__kpWpmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::OtherSymptoms))->asSequence()->any(true).oclAsType(emspcr::OtherSymptoms)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__kpWo2aNEe2Mns8sNTkjCw" type="_g5iJgKhEEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__kpWpGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__k4nMmaNEe2Mns8sNTkjCw" name="getProviderSecondaryImpressions" bodyCondition="__k4nNWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__k4nNWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__k4nMmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__k4nNmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ProviderSecondaryImpressions))->asSequence()->any(true).oclAsType(emspcr::ProviderSecondaryImpressions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__k4nM2aNEe2Mns8sNTkjCw" type="_0mPksKhEEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__k4nNGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__lGCkmaNEe2Mns8sNTkjCw" name="getInitialPatientAcuity" bodyCondition="__lGClWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__lGClWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__lGCkmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__lGClmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::InitialPatientAcuity))->asSequence()->any(true).oclAsType(emspcr::InitialPatientAcuity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__lGCk2aNEe2Mns8sNTkjCw" type="_NZgqAKhFEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__lGClGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ClVY0KxCEeGLnrdLmr5TaQ" name="EMSTimesSection">
      <ownedComment xmi:id="_Ba_AEC0EEeO0H9tywllqaQ">
        <body>Set of times for defined events in the EMS trip</body>
      </ownedComment>
      <ownedRule xmi:id="__N7fwWaNEe2Mns8sNTkjCw" name="EMSTimesSectionTemplateId" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__N7fwmaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.10' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__N8G0GaNEe2Mns8sNTkjCw" name="EMSTimesSectionCode" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__N8G0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67667-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__N9U8GaNEe2Mns8sNTkjCw" name="EMSTimesSectionCodeP" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__N9U8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__N-jEGaNEe2Mns8sNTkjCw" name="EMSTimesSectionTitle" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__N-jEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__N_KIGaNEe2Mns8sNTkjCw" name="EMSTimesSectionText" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__N_KIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__cLXIGaNEe2Mns8sNTkjCw" name="EMSTimesSectionCallTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__cLXIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::CallTime) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__cSr4GaNEe2Mns8sNTkjCw" name="EMSTimesSectionUnitNotifiedTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__cSr4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitNotifiedTime) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__cZZkGaNEe2Mns8sNTkjCw" name="EMSTimesSectionUnitEnRouteTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__cZZkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitEnRouteTime) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__cguUGaNEe2Mns8sNTkjCw" name="EMSTimesSectionUnitOnSceneTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__cguUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitOnSceneTime) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__coDEGaNEe2Mns8sNTkjCw" name="EMSTimesSectionUnitAtPatienttTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__coDEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitAtPatientTime) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__cwl8GaNEe2Mns8sNTkjCw" name="EMSTimesSectionUnitLeftSceneTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__cwl8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitLeftSceneTime) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__c5I0GaNEe2Mns8sNTkjCw" name="EMSTimesSectionPatientArrivedAtDestinationTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__c5I0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientArrivedAtDestinationTime) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dBEoGaNEe2Mns8sNTkjCw" name="EMSTimesSectionUnitBackInServiceTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dBEoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitBackInServiceTime) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dIZYGaNEe2Mns8sNTkjCw" name="EMSTimesSectionDispatchNotifiedTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dIZYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::DispatchNotifiedTime) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_DaW8UKxCEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="__cLXImaNEe2Mns8sNTkjCw" name="getCallTime" bodyCondition="__cLXJWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__cLXJWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__cLXImaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__cLXJmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CallTime))->asSequence()->any(true).oclAsType(emspcr::CallTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__cLXI2aNEe2Mns8sNTkjCw" type="_1u74sKxCEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__cLXJGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__cSr4maNEe2Mns8sNTkjCw" name="getUnitNotifiedTime" bodyCondition="__cSr5WaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__cSr5WaNEe2Mns8sNTkjCw" name="body" constrainedElement="__cSr4maNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__cSr5maNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitNotifiedTime))->asSequence()->any(true).oclAsType(emspcr::UnitNotifiedTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__cSr42aNEe2Mns8sNTkjCw" type="_JKerYKxDEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__cSr5GaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__caAoGaNEe2Mns8sNTkjCw" name="getUnitEnRouteTime" bodyCondition="__caAo2aNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__caAo2aNEe2Mns8sNTkjCw" name="body" constrainedElement="__caAoGaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__caApGaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitEnRouteTime))->asSequence()->any(true).oclAsType(emspcr::UnitEnRouteTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__caAoWaNEe2Mns8sNTkjCw" type="_UyaX0KxDEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__caAomaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__chVYGaNEe2Mns8sNTkjCw" name="getUnitOnSceneTime" bodyCondition="__chVY2aNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__chVY2aNEe2Mns8sNTkjCw" name="body" constrainedElement="__chVYGaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__chVZGaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitOnSceneTime))->asSequence()->any(true).oclAsType(emspcr::UnitOnSceneTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__chVYWaNEe2Mns8sNTkjCw" type="_iGh5QKxDEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__chVYmaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__coDEmaNEe2Mns8sNTkjCw" name="getUnitAtPatienttTime" bodyCondition="__coDFWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__coDFWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__coDEmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__coDFmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitAtPatientTime))->asSequence()->any(true).oclAsType(emspcr::UnitAtPatientTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__coDE2aNEe2Mns8sNTkjCw" type="_yt7JUKxDEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__coDFGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__cxNAGaNEe2Mns8sNTkjCw" name="getUnitLeftSceneTime" bodyCondition="__cxNA2aNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__cxNA2aNEe2Mns8sNTkjCw" name="body" constrainedElement="__cxNAGaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__cxNBGaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitLeftSceneTime))->asSequence()->any(true).oclAsType(emspcr::UnitLeftSceneTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__cxNAWaNEe2Mns8sNTkjCw" type="_6w124KxDEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__cxNAmaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__c5I0maNEe2Mns8sNTkjCw" name="getPatientArrivedAtDestinationTime" bodyCondition="__c5I1WaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__c5I1WaNEe2Mns8sNTkjCw" name="body" constrainedElement="__c5I0maNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__c5I1maNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientArrivedAtDestinationTime))->asSequence()->any(true).oclAsType(emspcr::PatientArrivedAtDestinationTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__c5I02aNEe2Mns8sNTkjCw" type="_DaIA4KxEEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__c5I1GaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__dBEomaNEe2Mns8sNTkjCw" name="getUnitBackInServiceTime" bodyCondition="__dBEpWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__dBEpWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__dBEomaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__dBrsGaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitBackInServiceTime))->asSequence()->any(true).oclAsType(emspcr::UnitBackInServiceTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__dBEo2aNEe2Mns8sNTkjCw" type="_KrhK4KxEEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__dBEpGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__dIZYmaNEe2Mns8sNTkjCw" name="getDispatchNotifiedTime" bodyCondition="__dIZZWaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__dIZZWaNEe2Mns8sNTkjCw" name="body" constrainedElement="__dIZYmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__dIZZmaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::DispatchNotifiedTime))->asSequence()->any(true).oclAsType(emspcr::DispatchNotifiedTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__dIZY2aNEe2Mns8sNTkjCw" type="_UFgZEKxEEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__dIZZGaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_TCM6tZ-bEeGorI3CPDW2ww" name="ResponseEndingOdometerReading">
      <ownedComment xmi:id="_sAY5ACz-EeO0H9tywllqaQ">
        <body>Odometer reading for the EMS vehicle when call is complete</body>
      </ownedComment>
      <ownedRule xmi:id="__PkehWaNEe2Mns8sNTkjCw" name="ResponseEndingOdometerReadingTemplateId" constrainedElement="_TCM6tZ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__PkehmaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.174' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__PmTsGaNEe2Mns8sNTkjCw" name="ResponseEndingOdometerReadingMoodCode" constrainedElement="_TCM6tZ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__PmTsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Pov8GaNEe2Mns8sNTkjCw" name="ResponseEndingOdometerReadingCodeP" constrainedElement="_TCM6tZ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Pov8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Pm6wGaNEe2Mns8sNTkjCw" name="ResponseEndingOdometerReadingCode" constrainedElement="_TCM6tZ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Pm6wWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67487-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Pp-EGaNEe2Mns8sNTkjCw" name="ResponseEndingOdometerReadingValue" constrainedElement="_TCM6tZ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Pp-EWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_TCM6t5-bEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Orea4IzrEeGnhceUMXltng" name="SystolicBloodPressure">
      <ownedComment xmi:id="_0zgpkC0AEeO0H9tywllqaQ">
        <body>Measurement of the patient's systolic blood pressure</body>
      </ownedComment>
      <ownedRule xmi:id="__Qiu4maNEe2Mns8sNTkjCw" name="SystolicBloodPressureTemplateId" constrainedElement="_Orea4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Qiu42aNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.23.1' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Qj9AGaNEe2Mns8sNTkjCw" name="SystolicBloodPressureMoodCode" constrainedElement="_Orea4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Qj9AWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__QnnYGaNEe2Mns8sNTkjCw" name="SystolicBloodPressureCodeP" constrainedElement="_Orea4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__QnnYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__QlLIGaNEe2Mns8sNTkjCw" name="SystolicBloodPressureCode" constrainedElement="_Orea4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__QlLIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '8480-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__QpckGaNEe2Mns8sNTkjCw" name="SystolicBloodPressureEffectiveTime" constrainedElement="_Orea4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__QpckWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__QqqsGaNEe2Mns8sNTkjCw" name="SystolicBloodPressureValue" constrainedElement="_Orea4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__QqqsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Qr40GaNEe2Mns8sNTkjCw" name="SystolicBloodPressureMethodCode" constrainedElement="_Orea4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Qr40WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA24013-7' or value.code = 'LA24012-9' or value.code = 'LA25780-0' or value.code = 'LA25782-6' or value.code = 'LA19771-7' or value.code = 'LA25783-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Q1CwGaNEe2Mns8sNTkjCw" name="SystolicBloodPressureMethodCodeP" constrainedElement="_Orea4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Q1CwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (( not self.methodCode->isEmpty()) )</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PIqGIIzrEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Qlqj8HwGEeGW3cDolvqrTA" name="CardiacArrest">
      <ownedComment xmi:id="_f_M6ICUeEeOPwcQY2yBpiA">
        <body>Characteristics of a patient's cardiac arrest</body>
      </ownedComment>
      <ownedRule xmi:id="__CRpYGaNEe2Mns8sNTkjCw" name="CardiacArrestCardiacArrestCauseRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__CSQcGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__CaMQGaNEe2Mns8sNTkjCw" name="CardiacArrestCardiacArrestInformantParticipation" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__CaMQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.informant->exists(informant : cda::Informant12 | not informant.oclIsUndefined() and informant.oclIsKindOf(cda::Informant12))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Cqq8GaNEe2Mns8sNTkjCw" name="CardiacArrestSpontaneousCirculationRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Cqq8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Cx_sGaNEe2Mns8sNTkjCw" name="CardiacArrestDestinationRhythmRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Cx_sWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Sz_wGaNEe2Mns8sNTkjCw" name="CardiacArrestArrestRhythmRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Sz_wWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Yuah2aNEe2Mns8sNTkjCw" name="CardiacArrestTemplateId" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YuaiGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.27' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__YvooGaNEe2Mns8sNTkjCw" name="CardiacArrestMoodCode" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YvooWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Yw2wGaNEe2Mns8sNTkjCw" name="CardiacArrestCode" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Yw2wWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__YyE4GaNEe2Mns8sNTkjCw" name="CardiacArrestNegationInd" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YyE4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__YzTAGaNEe2Mns8sNTkjCw" name="CardiacArrestEffectiveTime" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YzTAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Y0hIGaNEe2Mns8sNTkjCw" name="CardiacArrestValue" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Y0hIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.code = '410429000' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AC5Y4GaOEe2Mns8sNTkjCw" name="CardiacArrestCardiacArrestTimingRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AC5Y4WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AFBf0GaOEe2Mns8sNTkjCw" name="CardiacArrestCardiacArrestOutcomeRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AFBf0WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_RvtVMHwGEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JnfD8IzoEeGnhceUMXltng" name="VitalSignsOrganizer">
      <ownedComment xmi:id="_WDhRYIzpEeGnhceUMXltng">
        <body>A collection of vital signs observations&#xD;
For any observation within the organizer, if the NEMSIS value is &quot;Refused,&quot; the value SHALL be &quot;NI;&quot; the string &quot;Refused&quot; MAY be recorded in Observation.text.&#xD;
Note that NEMSIS collects times at the vitals cluster level, whereas systems may record them at the observation level. No preference is indicated regarding how close individual observation timestamps must be to allow their inclusion in a cluster or how the cluster effectiveTime is determined. effectiveTime is modeled on the observations to support unanticipated uses and to conform more closely to the Consolidated CDA pattern, though the exclusion of the id property makes it impossible to assert compliance to the Consolidated template in this guide (though it remains possible to do so in an implementation).</body>
      </ownedComment>
      <ownedRule xmi:id="__TulwGaNEe2Mns8sNTkjCw" name="VitalSignsOrganizerSystolicBloodPressureComponent" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__TulwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__T_rgGaNEe2Mns8sNTkjCw" name="VitalSignsOrganizerRespiratoryRateComponent" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__T_rgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__UT0kGaNEe2Mns8sNTkjCw" name="VitalSignsOrganizerBodyTemperatureComponent" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__UT0kWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__U974GaNEe2Mns8sNTkjCw" name="VitalSignsOrganizerOxygenSaturationComponent" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__U974WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZU3d2aNEe2Mns8sNTkjCw" name="VitalSignsOrganizerTemplateId" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZU3eGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.28' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZVegGaNEe2Mns8sNTkjCw" name="VitalSignsOrganizerCode" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZVegWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '46680005' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZWsoGaNEe2Mns8sNTkjCw" name="VitalSignsOrganizerCodeP" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZWsoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZX6wGaNEe2Mns8sNTkjCw" name="VitalSignsOrganizerEffectiveTime" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZX6wWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ALjloGaOEe2Mns8sNTkjCw" name="VitalSignsOrganizerComponent411" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ALjloWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AL2gkGaOEe2Mns8sNTkjCw" name="VitalSignsOrganizerComponent42" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AL2gkWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AQeh4GaOEe2Mns8sNTkjCw" name="VitalSignsOrganizerComponent43" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AQeh4WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KLr9MIzoEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Dq57UIzpEeGnhceUMXltng" name="PriorAidVitals">
      <ownedComment xmi:id="_zSptECz7EeO0H9tywllqaQ">
        <body>Indication of whether this set of vital signs was obtained prior to the documenting EMS unit's care</body>
      </ownedComment>
      <ownedRule xmi:id="__ZZI4GaNEe2Mns8sNTkjCw" name="PriorAidVitalsTemplateId" constrainedElement="_Dq57UIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZZI4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.29' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZaXAGaNEe2Mns8sNTkjCw" name="PriorAidVitalsMoodCode" constrainedElement="_Dq57UIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZaXAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZczQGaNEe2Mns8sNTkjCw" name="PriorAidVitalsCodeP" constrainedElement="_Dq57UIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZczQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZblIGaNEe2Mns8sNTkjCw" name="PriorAidVitalsCode" constrainedElement="_Dq57UIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZblIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67518-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZeBYGaNEe2Mns8sNTkjCw" name="PriorAidVitalsValue" constrainedElement="_Dq57UIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZeBYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EHmeYIzpEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Dfaa4J-eEeGorI3CPDW2ww" name="NumberOfPatientsTransportedObservation">
      <ownedComment xmi:id="_eFOZACwqEeOaIuM51LdlNw">
        <body>The number of patients transported by this EMS crew and unit</body>
      </ownedComment>
      <ownedRule xmi:id="__Zl9NmaNEe2Mns8sNTkjCw" name="NumberOfPatientsTransportedObservationTemplateId" constrainedElement="_Dfaa4J-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Zl9N2aNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.31' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZnLUGaNEe2Mns8sNTkjCw" name="NumberOfPatientsTransportedObservationMoodCode" constrainedElement="_Dfaa4J-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZnLUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZpnkGaNEe2Mns8sNTkjCw" name="NumberOfPatientsTransportedObservationCodeP" constrainedElement="_Dfaa4J-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZpnkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ZoZcGaNEe2Mns8sNTkjCw" name="NumberOfPatientsTransportedObservationCode" constrainedElement="_Dfaa4J-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ZoZcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67547-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Zq1sGaNEe2Mns8sNTkjCw" name="NumberOfPatientsTransportedObservationValue" constrainedElement="_Dfaa4J-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Zq1sWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_D6EWkJ-eEeGorI3CPDW2ww">
        <ownedComment xmi:id="_p4JPUEM8EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: eDisposition.11</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_nv-0gp-fEeGorI3CPDW2ww" name="TransportModeObservation">
      <ownedComment xmi:id="_NBNcUC0EEeO0H9tywllqaQ">
        <body>Indication of whether the transport was emergent or non-emergent</body>
      </ownedComment>
      <ownedRule xmi:id="__Zz_oGaNEe2Mns8sNTkjCw" name="TransportModeObservationTemplateId" constrainedElement="_nv-0gp-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Zz_oWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.33' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Z100GaNEe2Mns8sNTkjCw" name="TransportModeObservationMoodCode" constrainedElement="_nv-0gp-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Z100WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Z4REGaNEe2Mns8sNTkjCw" name="TransportModeObservationCodeP" constrainedElement="_nv-0gp-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Z4REWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Z3C8GaNEe2Mns8sNTkjCw" name="TransportModeObservationCode" constrainedElement="_nv-0gp-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Z3C8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67550-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Z5fMGaNEe2Mns8sNTkjCw" name="TransportModeObservationValue" constrainedElement="_nv-0gp-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Z5fMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17177-9' or value.code = 'LA17178-7' or value.code = 'LA17179-5' or value.code = 'LA17180-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aCpIGaNEe2Mns8sNTkjCw" name="TransportModeObservationValueP" constrainedElement="_nv-0gp-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aCpIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AFjEQGaOEe2Mns8sNTkjCw" name="TransportModeObservationTransportModeQualifierRelationship" constrainedElement="_nv-0gp-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AFjEQWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_nv-0hJ-fEeGorI3CPDW2ww">
        <ownedComment xmi:id="_uDDJgEM8EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: eDisposition.17</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EagUtZ-fEeGorI3CPDW2ww" name="TransportMethodObservation">
      <ownedComment xmi:id="__OmH8C4sEeWuwoPHpwTUeg">
        <body>Vehicle or device used to transport patient</body>
      </ownedComment>
      <ownedRule xmi:id="__aWLJWaNEe2Mns8sNTkjCw" name="TransportMethodObservationTemplateId" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aWLJmaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.34' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aXZQGaNEe2Mns8sNTkjCw" name="TransportMethodObservationMoodCode" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aXZQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aZ1gGaNEe2Mns8sNTkjCw" name="TransportMethodObservationCodeP" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aZ1gWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__aYnYGaNEe2Mns8sNTkjCw" name="TransportMethodObservationCode" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__aYnYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67549-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__abDoGaNEe2Mns8sNTkjCw" name="TransportMethodObservationValue" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__abDoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17168-8' or value.code = 'LA17169-6' or value.code = 'LA17170-4' or value.code = 'LA17171-2' or value.code = 'LA17172-0' or value.code = 'LA17173-8' or value.code = 'LA17174-6' or value.code = 'LA17175-3' or value.code = 'LA17176-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ajmgGaNEe2Mns8sNTkjCw" name="TransportMethodObservationValueP" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ajmgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EagUt5-fEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_cm1D5Z-hEeGorI3CPDW2ww" name="ReasonForChoosingDestinationObservation">
      <ownedComment xmi:id="_OCvZgCz-EeO0H9tywllqaQ">
        <body>The reason the unit chose to deliver the patient to the destination</body>
      </ownedComment>
      <ownedRule xmi:id="__azeJWaNEe2Mns8sNTkjCw" name="ReasonForChoosingDestinationObservationTemplateId" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__azeJmaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.35' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__a0sQGaNEe2Mns8sNTkjCw" name="ReasonForChoosingDestinationObservationMoodCode" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__a0sQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__a3vkGaNEe2Mns8sNTkjCw" name="ReasonForChoosingDestinationObservationCodeP" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__a3vkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__a16YGaNEe2Mns8sNTkjCw" name="ReasonForChoosingDestinationObservationCode" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__a16YWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67552-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__a49sGaNEe2Mns8sNTkjCw" name="ReasonForChoosingDestinationObservationValue" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__a49sWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17182-9' or value.code = 'LA17184-5' or value.code = 'LA17185-2' or value.code = 'LA17186-0' or value.code = 'LA17187-8' or value.code = 'LA17188-6' or value.code = 'LA17189-4' or value.code = 'LA17190-2' or value.code = 'LA17191-0' or value.code = 'LA18301-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bA5gGaNEe2Mns8sNTkjCw" name="ReasonForChoosingDestinationObservationValueP" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bA5gWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_cm1q8Z-hEeGorI3CPDW2ww">
        <ownedComment xmi:id="_xob70EM8EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: eDisposition.20</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_083apZ-hEeGorI3CPDW2ww" name="PrearrivalActivationObservation">
      <ownedComment xmi:id="_f1D3kCwtEeOaIuM51LdlNw">
        <body>Indication of whether destination was activated prior to patient arrival</body>
      </ownedComment>
      <ownedRule xmi:id="__bR_R2aNEe2Mns8sNTkjCw" name="PrearrivalActivationObservationTemplateId" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bSmUGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.36' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bT0cGaNEe2Mns8sNTkjCw" name="PrearrivalActivationObservationMoodCode" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bT0cWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bWQsGaNEe2Mns8sNTkjCw" name="PrearrivalActivationObservationCodeP" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bWQsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bVCkGaNEe2Mns8sNTkjCw" name="PrearrivalActivationObservationCode" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bVCkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69462-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bXe0GaNEe2Mns8sNTkjCw" name="PrearrivalActivationObservationEffectiveTime" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bXe0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bYs8GaNEe2Mns8sNTkjCw" name="PrearrivalActivationObservationValue" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bYs8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18117-4' or value.code = 'LA18118-2' or value.code = 'LA18119-0' or value.code = 'LA18120-8' or value.code = 'LA18121-6' or value.code = 'LA18122-4' or value.code = 'LA18123-2' or value.code = 'LA32-8' or value.code = 'LA32937-7')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bhP0GaNEe2Mns8sNTkjCw" name="PrearrivalActivationObservationValueP" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bhP0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_083ap5-hEeGorI3CPDW2ww">
        <ownedComment xmi:id="_Na520J-iEeGorI3CPDW2ww">
          <body>NEMSIS Trace: eDisposition.24</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Q4zL9Z-gEeGorI3CPDW2ww" name="PatientConditionAtDestinationObservation">
      <ownedComment xmi:id="_tNsiECwsEeOaIuM51LdlNw">
        <body>Whether the patient's condition had changed on arrival at destination</body>
      </ownedComment>
      <ownedRule xmi:id="__bxHd2aNEe2Mns8sNTkjCw" name="PatientConditionAtDestinationObservationTemplateId" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bxHeGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.37' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__by8oGaNEe2Mns8sNTkjCw" name="PatientConditionAtDestinationObservationMoodCode" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__by8oWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__b0x0GaNEe2Mns8sNTkjCw" name="PatientConditionAtDestinationObservationCodeP" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__b0x0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__bzjsGaNEe2Mns8sNTkjCw" name="PatientConditionAtDestinationObservationCode" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__bzjsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '77941-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__b1Y4GaNEe2Mns8sNTkjCw" name="PatientConditionAtDestinationObservationValue" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__b1_8GaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17696-8' or value.code = 'LA17695-0' or value.code = 'LA17694-3' or value.code = 'LA17697-6' or value.code = 'LA32920-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__b9UsGaNEe2Mns8sNTkjCw" name="PatientConditionAtDestinationObservationValueP" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__b9UsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Q4zL95-gEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_1u74sKxCEeGLnrdLmr5TaQ" name="CallTime">
      <ownedComment xmi:id="_njZWQCUcEeOPwcQY2yBpiA">
        <body>Time at which the public safety answering point call center is notified of an emergency</body>
      </ownedComment>
      <ownedRule xmi:id="__dJAcGaNEe2Mns8sNTkjCw" name="CallTimeTemplateId" constrainedElement="_1u74sKxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dJAcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.38' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dKOkGaNEe2Mns8sNTkjCw" name="CallTimeMoodCode" constrainedElement="_1u74sKxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dKOkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dMDwGaNEe2Mns8sNTkjCw" name="CallTimeCodeP" constrainedElement="_1u74sKxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dMDwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dK1oGaNEe2Mns8sNTkjCw" name="CallTimeCode" constrainedElement="_1u74sKxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dK1oWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69469-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dNR4GaNEe2Mns8sNTkjCw" name="CallTimeValue" constrainedElement="_1u74sKxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dNR4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4A3fEKxCEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JKerYKxDEeGLnrdLmr5TaQ" name="UnitNotifiedTime">
      <ownedComment xmi:id="_eaVEQC0EEeO0H9tywllqaQ">
        <body>Time the unit was dispatched</body>
      </ownedComment>
      <ownedRule xmi:id="__dN48GaNEe2Mns8sNTkjCw" name="UnitNotifiedTimeTemplateId" constrainedElement="_JKerYKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dN48WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.39' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dPHEGaNEe2Mns8sNTkjCw" name="UnitNotifiedTimeMoodCode" constrainedElement="_JKerYKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dPHEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dRjUGaNEe2Mns8sNTkjCw" name="UnitNotifiedTimeCodeP" constrainedElement="_JKerYKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dRjUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dQVMGaNEe2Mns8sNTkjCw" name="UnitNotifiedTimeCode" constrainedElement="_JKerYKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dQVMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69471-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dTYgGaNEe2Mns8sNTkjCw" name="UnitNotifiedTimeValue" constrainedElement="_JKerYKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dTYgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_JKerYqxDEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UyaX0KxDEeGLnrdLmr5TaQ" name="UnitEnRouteTime">
      <ownedComment xmi:id="_ZSckcC0EEeO0H9tywllqaQ">
        <body>Time unit begins moving toward the patient</body>
      </ownedComment>
      <ownedRule xmi:id="__dUmoGaNEe2Mns8sNTkjCw" name="UnitEnRouteTimeTemplateId" constrainedElement="_UyaX0KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dUmoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.40' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dV0wGaNEe2Mns8sNTkjCw" name="UnitEnRouteTimeMoodCode" constrainedElement="_UyaX0KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dV0wWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dXp8GaNEe2Mns8sNTkjCw" name="UnitEnRouteTimeCodeP" constrainedElement="_UyaX0KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dXp8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dXC4GaNEe2Mns8sNTkjCw" name="UnitEnRouteTimeCode" constrainedElement="_UyaX0KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dXC4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69472-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dY4EGaNEe2Mns8sNTkjCw" name="UnitEnRouteTimeValue" constrainedElement="_UyaX0KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dY4EWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_UyaX0qxDEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iGh5QKxDEeGLnrdLmr5TaQ" name="UnitOnSceneTime">
      <ownedComment xmi:id="_gdOJEC0EEeO0H9tywllqaQ">
        <body>Time the unit arrived at the incident scene</body>
      </ownedComment>
      <ownedRule xmi:id="__daGMGaNEe2Mns8sNTkjCw" name="UnitOnSceneTimeTemplateId" constrainedElement="_iGh5QKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__daGMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.41' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dbUUGaNEe2Mns8sNTkjCw" name="UnitOnSceneTimeMoodCode" constrainedElement="_iGh5QKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dbUUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ddwkGaNEe2Mns8sNTkjCw" name="UnitOnSceneTimeCodeP" constrainedElement="_iGh5QKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ddwkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dcicGaNEe2Mns8sNTkjCw" name="UnitOnSceneTimeCode" constrainedElement="_iGh5QKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dcicWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69473-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__de-sGaNEe2Mns8sNTkjCw" name="UnitOnSceneTimeValue" constrainedElement="_iGh5QKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__de-sWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_iGh5QqxDEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yt7JUKxDEeGLnrdLmr5TaQ" name="UnitAtPatientTime">
      <ownedComment xmi:id="_V7AukC0EEeO0H9tywllqaQ">
        <body>Time the unit arrived at the patient</body>
      </ownedComment>
      <ownedRule xmi:id="__dflwGaNEe2Mns8sNTkjCw" name="UnitAtPatientTimeTemplateId" constrainedElement="_yt7JUKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dflwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.42' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dgz4GaNEe2Mns8sNTkjCw" name="UnitAtPatientTimeMoodCode" constrainedElement="_yt7JUKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dgz4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dipEGaNEe2Mns8sNTkjCw" name="UnitAtPatientTimeCodeP" constrainedElement="_yt7JUKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dipEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dha8GaNEe2Mns8sNTkjCw" name="UnitAtPatientTimeCode" constrainedElement="_yt7JUKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dha8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69474-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dj3MGaNEe2Mns8sNTkjCw" name="UnitAtPatientTimeValue" constrainedElement="_yt7JUKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dj3MWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_yt7JUqxDEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_6w124KxDEeGLnrdLmr5TaQ" name="UnitLeftSceneTime">
      <ownedComment xmi:id="_bskdgC0EEeO0H9tywllqaQ">
        <body>Time the unit left the incident scene</body>
      </ownedComment>
      <ownedRule xmi:id="__dkeQGaNEe2Mns8sNTkjCw" name="UnitLeftSceneTimeTemplateId" constrainedElement="_6w124KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dkeQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.43' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dlsYGaNEe2Mns8sNTkjCw" name="UnitLeftSceneTimeMoodCode" constrainedElement="_6w124KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dlsYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__doIoGaNEe2Mns8sNTkjCw" name="UnitLeftSceneTimeCodeP" constrainedElement="_6w124KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__doIoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dmTcGaNEe2Mns8sNTkjCw" name="UnitLeftSceneTimeCode" constrainedElement="_6w124KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dmTcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69475-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dovsGaNEe2Mns8sNTkjCw" name="UnitLeftSceneTimeValue" constrainedElement="_6w124KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dovsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_6w124qxDEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_DaIA4KxEEeGLnrdLmr5TaQ" name="PatientArrivedAtDestinationTime">
      <ownedComment xmi:id="_vPjXACwqEeOaIuM51LdlNw">
        <body>The time the EMS crew delivered the patient to the destination</body>
      </ownedComment>
      <ownedRule xmi:id="__dp90GaNEe2Mns8sNTkjCw" name="PatientArrivedAtDestinationTimeTemplateId" constrainedElement="_DaIA4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dp90WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.44' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__drL8GaNEe2Mns8sNTkjCw" name="PatientArrivedAtDestinationTimeMoodCode" constrainedElement="_DaIA4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__drL8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dtBIGaNEe2Mns8sNTkjCw" name="PatientArrivedAtDestinationTimeCodeP" constrainedElement="_DaIA4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dtBIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__drzAGaNEe2Mns8sNTkjCw" name="PatientArrivedAtDestinationTimeCode" constrainedElement="_DaIA4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__drzAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69476-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__duPQGaNEe2Mns8sNTkjCw" name="PatientArrivedAtDestinationTimeValue" constrainedElement="_DaIA4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__duPQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_DaIA4qxEEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KrhK4KxEEeGLnrdLmr5TaQ" name="UnitBackInServiceTime">
      <ownedComment xmi:id="_W6OI0C0EEeO0H9tywllqaQ">
        <body>Time the unit is back in service</body>
      </ownedComment>
      <ownedRule xmi:id="__du2UGaNEe2Mns8sNTkjCw" name="UnitBackInServiceTimeTemplateId" constrainedElement="_KrhK4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__du2UWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.45' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dwEcGaNEe2Mns8sNTkjCw" name="UnitBackInServiceTimeMoodCode" constrainedElement="_KrhK4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dwEcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dygsGaNEe2Mns8sNTkjCw" name="UnitBackInServiceTimeCodeP" constrainedElement="_KrhK4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dygsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dxSkGaNEe2Mns8sNTkjCw" name="UnitBackInServiceTimeCode" constrainedElement="_KrhK4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dxSkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69477-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__dzu0GaNEe2Mns8sNTkjCw" name="UnitBackInServiceTimeValue" constrainedElement="_KrhK4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__dzu0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KrhK4qxEEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UFgZEKxEEeGLnrdLmr5TaQ" name="DispatchNotifiedTime">
      <ownedComment xmi:id="_RMVUACUkEeOEaIF_MBGm_A">
        <body>The time the dispatching organization was notified of an emergency</body>
      </ownedComment>
      <ownedRule xmi:id="__d0V4GaNEe2Mns8sNTkjCw" name="DispatchNotifiedTimeTemplateId" constrainedElement="_UFgZEKxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__d0V4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.46' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__d1kAGaNEe2Mns8sNTkjCw" name="DispatchNotifiedTimeMoodCode" constrainedElement="_UFgZEKxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__d1kAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__d3ZMGaNEe2Mns8sNTkjCw" name="DispatchNotifiedTimeCodeP" constrainedElement="_UFgZEKxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__d4AQGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__d2LEGaNEe2Mns8sNTkjCw" name="DispatchNotifiedTimeCode" constrainedElement="_UFgZEKxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__d2yIGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69470-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__d4nUGaNEe2Mns8sNTkjCw" name="DispatchNotifiedTimeValue" constrainedElement="_UFgZEKxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__d4nUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_UFgZEqxEEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_xCcE0Iy7EeGnhceUMXltng" name="AdvanceDirectiveObservation">
      <ownedComment xmi:id="_i_N0ICSSEeO2bfzIdJE0yg">
        <body>Whether an advance directive exists and how it is expressed</body>
      </ownedComment>
      <ownedRule xmi:id="__eBKMGaNEe2Mns8sNTkjCw" name="AdvanceDirectiveObservationTemplateId" constrainedElement="_xCcE0Iy7EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eBKMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.98' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eBxQGaNEe2Mns8sNTkjCw" name="AdvanceDirectiveObservationMoodCode" constrainedElement="_xCcE0Iy7EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eBxQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eC_YGaNEe2Mns8sNTkjCw" name="AdvanceDirectiveObservationCode" constrainedElement="_xCcE0Iy7EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eC_YWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67516-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eENgGaNEe2Mns8sNTkjCw" name="AdvanceDirectiveObservationValue" constrainedElement="_xCcE0Iy7EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eENgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA137-2' or value.code = 'LA17059-9' or value.code = 'LA17319-7' or value.code = 'LA17320-5' or value.code = 'LA17321-3' or value.code = 'LA17322-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eLiQGaNEe2Mns8sNTkjCw" name="AdvanceDirectiveObservationValueP" constrainedElement="_xCcE0Iy7EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eLiQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_xhZ4wIy7EeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_3C3WwMWqEeK3RfDsHamIUQ" name="DrugAllergy">
      <ownedComment xmi:id="_qKVCoCUkEeOEaIF_MBGm_A">
        <body>An allergy or sensitivity to a drug.&#xD;
This statement follows the pattern of the Consolidated allergy observation, without the intervening &quot;problem act&quot; class.&#xD;
In this observation, as the Consolidated guide specifies, the code is &quot;ASSERTION,&quot; and the value selected from 2.16.840.1.113883.3.88.12.3221.6.2. In this case, the value should be 416098002 (Drug allergy (disorder)), System = SNOMED CT, 2.16.840.1.113883.6.96. &#xD;
The drug, to be placed in the participating product, is encoded in RxNorm.</body>
      </ownedComment>
      <ownedRule xmi:id="__YRHgGaNEe2Mns8sNTkjCw" name="DrugAllergyParticipant1" constrainedElement="_3C3WwMWqEeK3RfDsHamIUQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YRHgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eS3AGaNEe2Mns8sNTkjCw" name="DrugAllergyTemplateId" constrainedElement="_3C3WwMWqEeK3RfDsHamIUQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eS3AWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.48' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eTeEGaNEe2Mns8sNTkjCw" name="DrugAllergyCode" constrainedElement="_3C3WwMWqEeK3RfDsHamIUQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eTeEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eUsMGaNEe2Mns8sNTkjCw" name="DrugAllergyValue" constrainedElement="_3C3WwMWqEeK3RfDsHamIUQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eUsMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.code = '416098002' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eV6UGaNEe2Mns8sNTkjCw" name="DrugAllergyMoodCode" constrainedElement="_3C3WwMWqEeK3RfDsHamIUQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eV6UWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4F12sMWqEeK3RfDsHamIUQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CFApcIzGEeGnhceUMXltng" name="NonDrugAllergyOrganizer">
      <ownedComment xmi:id="_ZC-C4IzaEeGnhceUMXltng">
        <body>Information regarding patient allergies and sensitivities to materials other than drugs</body>
      </ownedComment>
      <ownedRule xmi:id="__D6oIGaNEe2Mns8sNTkjCw" name="NonDrugAllergyOrganizerExistenceOfNonDrugAllergy" constrainedElement="_CFApcIzGEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__D6oIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::ExistenceOfKnownNonDrugAllergy))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__EDLAGaNEe2Mns8sNTkjCw" name="NonDrugAllergyOrganizerNonDrugAllergy" constrainedElement="_CFApcIzGEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__EDLAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::NonDrugAllergy))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__egSYmaNEe2Mns8sNTkjCw" name="NonDrugAllergyOrganizerTemplateId" constrainedElement="_CFApcIzGEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__egSY2aNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.49' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_DFRMkIzGEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="__D7PMGaNEe2Mns8sNTkjCw" name="getExistenceOfNonDrugAllergy" bodyCondition="__D7PM2aNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__D7PM2aNEe2Mns8sNTkjCw" name="body" constrainedElement="__D7PMGaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__D7PNGaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ExistenceOfKnownNonDrugAllergy))->asSequence()->any(true).oclAsType(emspcr::ExistenceOfKnownNonDrugAllergy)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__D7PMWaNEe2Mns8sNTkjCw" type="_t_nG0IzYEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__D7PMmaNEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__EDLAmaNEe2Mns8sNTkjCw" name="getNonDrugAllergies" bodyCondition="__EDyEGaNEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="__EDyEGaNEe2Mns8sNTkjCw" name="body" constrainedElement="__EDLAmaNEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="__EDyEWaNEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::NonDrugAllergy)).oclAsType(emspcr::NonDrugAllergy)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="__EDLA2aNEe2Mns8sNTkjCw" type="_UleZUIzZEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__EDLBGaNEe2Mns8sNTkjCw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KEFo8HSVEeGa4IXs2ghZEw" name="InjuryCauseCategory">
      <ownedComment xmi:id="_p6OYcCwnEeOaIuM51LdlNw">
        <body>The category of the reported/suspected external cause of the injury</body>
      </ownedComment>
      <ownedRule xmi:id="__eoONWaNEe2Mns8sNTkjCw" name="InjuryCauseCategoryTemplateId" constrainedElement="_KEFo8HSVEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eoONmaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.50' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eqDYGaNEe2Mns8sNTkjCw" name="InjuryCauseCategoryMoodCode" constrainedElement="_KEFo8HSVEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eqDYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__esfoGaNEe2Mns8sNTkjCw" name="InjuryCauseCategoryCodeP" constrainedElement="_KEFo8HSVEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__esfoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__erRgGaNEe2Mns8sNTkjCw" name="InjuryCauseCategoryCode" constrainedElement="_KEFo8HSVEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__erRgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69543-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__etGsGaNEe2Mns8sNTkjCw" name="InjuryCauseCategoryValue" constrainedElement="_KEFo8HSVEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__etGsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__eu74GaNEe2Mns8sNTkjCw" name="InjuryCauseCategoryValueP" constrainedElement="_KEFo8HSVEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__eu74WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_N8NKAHSVEeGa4IXs2ghZEw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aS16EHSWEeGa4IXs2ghZEw" name="InjuryMechanism">
      <ownedComment xmi:id="_ztNVcCwnEeOaIuM51LdlNw">
        <body>General classification of physical force causing injury</body>
      </ownedComment>
      <ownedRule xmi:id="__e4F12aNEe2Mns8sNTkjCw" name="InjuryMechanismTemplateId" constrainedElement="_aS16EHSWEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__e4s4GaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.51' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__e5T8GaNEe2Mns8sNTkjCw" name="InjuryMechanismMoodCode" constrainedElement="_aS16EHSWEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__e57AGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__e8-UGaNEe2Mns8sNTkjCw" name="InjuryMechanismCodeP" constrainedElement="_aS16EHSWEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__e8-UWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__e6iEGaNEe2Mns8sNTkjCw" name="InjuryMechanismCode" constrainedElement="_aS16EHSWEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__e6iEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67494-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__e-McGaNEe2Mns8sNTkjCw" name="InjuryMechanismValue" constrainedElement="_aS16EHSWEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__e-McWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17335-3' or value.code = 'LA17336-1' or value.code = 'LA46-8' or value.code = 'LA7318-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fHWYGaNEe2Mns8sNTkjCw" name="InjuryMechanismValueP" constrainedElement="_aS16EHSWEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fHWYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_dAw44HSWEeGa4IXs2ghZEw">
        <ownedComment xmi:id="_8OISsEM9EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: eInjury.02</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lTHsIIcXEeGqF6qfYwLiQw" name="TraumaTriageCriteriaSteps1and2">
      <ownedComment xmi:id="_RvtLwC0EEeO0H9tywllqaQ">
        <body>Field Triage Criteria for transport to a trauma center as defined by the Centers for Disease Control and Prevention and the American College of Surgeons-Committee on Trauma</body>
      </ownedComment>
      <ownedRule xmi:id="__fYcJGaNEe2Mns8sNTkjCw" name="TraumaTriageCriteriaSteps1and2TemplateId" constrainedElement="_lTHsIIcXEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fYcJWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.52' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fZqQGaNEe2Mns8sNTkjCw" name="TraumaTriageCriteriaSteps1and2MoodCode" constrainedElement="_lTHsIIcXEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fZqQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fcGgGaNEe2Mns8sNTkjCw" name="TraumaTriageCriteriaSteps1and2CodeP" constrainedElement="_lTHsIIcXEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fcGgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fa4YGaNEe2Mns8sNTkjCw" name="TraumaTriageCriteriaSteps1and2Code" constrainedElement="_lTHsIIcXEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fa4YWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67495-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__fctkGaNEe2Mns8sNTkjCw" name="TraumaTriageCriteriaSteps1and2Value" constrainedElement="_lTHsIIcXEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__fctkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA23844-6' or value.code = 'LA17338-7' or value.code = 'LA17339-5' or value.code = 'LA17340-3' or value.code = 'LA17341-1' or value.code = 'LA17342-9' or value.code = 'LA17343-7' or value.code = 'LA17344-5' or value.code = 'LA17345-2' or value.code = 'LA17346-0' or value.code = 'LA17347-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__flQcGaNEe2Mns8sNTkjCw" name="TraumaTriageCriteriaSteps1and2ValueP" constrainedElement="_lTHsIIcXEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__flQcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_orogEIcXEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_vuraIIcZEeGqF6qfYwLiQw" name="TraumaTriageCriteriaSteps3and4">
      <ownedComment xmi:id="_37Nm8CwnEeOaIuM51LdlNw">
        <body>Factors predictive of need for trauma center care</body>
      </ownedComment>
      <ownedRule xmi:id="__fz592aNEe2Mns8sNTkjCw" name="TraumaTriageCriteriaSteps3and4TemplateId" constrainedElement="_vuraIIcZEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__f0hAGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.53' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__f1vIGaNEe2Mns8sNTkjCw" name="TraumaTriageCriteriaSteps3and4MoodCode" constrainedElement="_vuraIIcZEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__f1vIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__f3kUGaNEe2Mns8sNTkjCw" name="TraumaTriageCriteriaSteps3and4CodeP" constrainedElement="_vuraIIcZEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__f3kUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__f2WMGaNEe2Mns8sNTkjCw" name="TraumaTriageCriteriaSteps3and4Code" constrainedElement="_vuraIIcZEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__f2WMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67496-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__f4LYGaNEe2Mns8sNTkjCw" name="TraumaTriageCriteriaSteps3and4Value" constrainedElement="_vuraIIcZEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__f4LYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17348-6' or value.code = 'LA17349-4' or value.code = 'LA17350-2' or value.code = 'LA17352-8' or value.code = 'LA17353-6' or value.code = 'LA17357-7' or value.code = 'LA17360-1' or value.code = 'LA18124-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gAHMGaNEe2Mns8sNTkjCw" name="TraumaTriageCriteriaSteps3and4ValueP" constrainedElement="_vuraIIcZEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gAHMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_x1Ee4IcZEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_nvhVwIcaEeGqF6qfYwLiQw" name="VehicleImpactArea">
      <ownedComment xmi:id="_pG2RUC0EEeO0H9tywllqaQ">
        <body>Area of vehicle struck in a vehicle collision</body>
      </ownedComment>
      <ownedRule xmi:id="__gQl52aNEe2Mns8sNTkjCw" name="VehicleImpactAreaTemplateId" constrainedElement="_nvhVwIcaEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gQl6GaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.54' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gR0AGaNEe2Mns8sNTkjCw" name="VehicleImpactAreaMoodCode" constrainedElement="_nvhVwIcaEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gR0AWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gUQQGaNEe2Mns8sNTkjCw" name="VehicleImpactAreaCodeP" constrainedElement="_nvhVwIcaEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gUQQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gTCIGaNEe2Mns8sNTkjCw" name="VehicleImpactAreaCode" constrainedElement="_nvhVwIcaEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gTCIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67497-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gU3UGaNEe2Mns8sNTkjCw" name="VehicleImpactAreaValue" constrainedElement="_nvhVwIcaEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gU3UWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA10137-0' or value.code = 'LA10138-8' or value.code = 'LA10139-6' or value.code = 'LA10140-4' or value.code = 'LA10141-2' or value.code = 'LA13942-0' or value.code = 'LA14557-5' or value.code = 'LA14558-3' or value.code = 'LA6112-2' or value.code = 'LA6113-0' or value.code = 'LA6114-8' or value.code = 'LA6115-5')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__geBQGaNEe2Mns8sNTkjCw" name="VehicleImpactAreaValueP" constrainedElement="_nvhVwIcaEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__geBQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Kp4xcIccEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zMwjMIccEeGqF6qfYwLiQw" name="PatientLocationInVehicle">
      <ownedComment xmi:id="_xAfeQCwsEeOaIuM51LdlNw">
        <body>Patient's location in a vehicle during a vehicle collision</body>
      </ownedComment>
      <ownedRule xmi:id="__gt44GaNEe2Mns8sNTkjCw" name="PatientLocationInVehicleTemplateId" constrainedElement="_zMwjMIccEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gt44WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.55' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gvHAGaNEe2Mns8sNTkjCw" name="PatientLocationInVehicleMoodCode" constrainedElement="_zMwjMIccEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gvHAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gxjQGaNEe2Mns8sNTkjCw" name="PatientLocationInVehicleCodeP" constrainedElement="_zMwjMIccEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gxjQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gwVIGaNEe2Mns8sNTkjCw" name="PatientLocationInVehicleCode" constrainedElement="_zMwjMIccEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gwVIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67498-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__gyKUGaNEe2Mns8sNTkjCw" name="PatientLocationInVehicleValue" constrainedElement="_zMwjMIccEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__gyKUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17361-9' or value.code = 'LA17362-7' or value.code = 'LA17363-5' or value.code = 'LA17364-3' or value.code = 'LA17365-0' or value.code = 'LA17366-8' or value.code = 'LA17367-6' or value.code = 'LA17368-4' or value.code = 'LA17369-2' or value.code = 'LA17370-0' or value.code = 'LA17371-8' or value.code = 'LA17372-6' or value.code = 'LA17373-4' or value.code = 'LA17374-2' or value.code = 'LA4489-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__g6tMGaNEe2Mns8sNTkjCw" name="PatientLocationInVehicleValueP" constrainedElement="_zMwjMIccEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__g6tMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1NY-MIccEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bsVJUIcdEeGqF6qfYwLiQw" name="VehicleOccupantSafetyEquipment">
      <ownedComment xmi:id="_qLhaYC0EEeO0H9tywllqaQ">
        <body>Safety equipment in use by the patient at the time of the injury</body>
      </ownedComment>
      <ownedRule xmi:id="__hJWsGaNEe2Mns8sNTkjCw" name="VehicleOccupantSafetyEquipmentTemplateId" constrainedElement="_bsVJUIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__hJWsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.56' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__hKk0GaNEe2Mns8sNTkjCw" name="VehicleOccupantSafetyEquipmentMoodCode" constrainedElement="_bsVJUIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__hKk0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__hMaAGaNEe2Mns8sNTkjCw" name="VehicleOccupantSafetyEquipmentCodeP" constrainedElement="_bsVJUIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__hMaAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__hLL4GaNEe2Mns8sNTkjCw" name="VehicleOccupantSafetyEquipmentCode" constrainedElement="_bsVJUIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__hLL4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67499-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__hNoIGaNEe2Mns8sNTkjCw" name="VehicleOccupantSafetyEquipmentValue" constrainedElement="_bsVJUIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__hNoIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA137-2' or value.code = 'LA17375-9' or value.code = 'LA17376-7' or value.code = 'LA17377-5' or value.code = 'LA17378-3' or value.code = 'LA17379-1' or value.code = 'LA17380-9' or value.code = 'LA17382-5' or value.code = 'LA46-8' or value.code = 'LA9381-0' or value.code = 'LA9391-9' or value.code = 'LA9392-7' or value.code = 'LA9393-5' or value.code = 'LA11137-9')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__hU84GaNEe2Mns8sNTkjCw" name="VehicleOccupantSafetyEquipmentValueP" constrainedElement="_bsVJUIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__hU84WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_gbauoIcdEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2lRhsIcdEeGqF6qfYwLiQw" name="AirbagDeploymentStatus">
      <ownedComment xmi:id="_8L1NkCSSEeO2bfzIdJE0yg">
        <body>Airbag presence, deployment, and location</body>
      </ownedComment>
      <ownedRule xmi:id="__hkNcGaNEe2Mns8sNTkjCw" name="AirbagDeploymentStatusTemplateId" constrainedElement="_2lRhsIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__hkNcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.57' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__hk0gGaNEe2Mns8sNTkjCw" name="AirbagDeploymentStatusMoodCode" constrainedElement="_2lRhsIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__hlbkGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__hmCoGaNEe2Mns8sNTkjCw" name="AirbagDeploymentStatusCode" constrainedElement="_2lRhsIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__hmCoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67500-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__hn30GaNEe2Mns8sNTkjCw" name="AirbagDeploymentStatusValue" constrainedElement="_2lRhsIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__hn30WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17384-1' or value.code = 'LA17385-8' or value.code = 'LA17386-6' or value.code = 'LA17387-4' or value.code = 'LA17388-2' or value.code = 'LA46-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__hwasGaNEe2Mns8sNTkjCw" name="AirbagDeploymentStatusValueP" constrainedElement="_2lRhsIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__hwasWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4RXQEIcdEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_auKbcIceEeGqF6qfYwLiQw" name="HeightOfFall">
      <ownedComment xmi:id="_07CscCwlEeOaIuM51LdlNw">
        <body>Distance patient fell, if injury is fall-related</body>
      </ownedComment>
      <ownedRule xmi:id="__iA5ZWaNEe2Mns8sNTkjCw" name="HeightOfFallTemplateId" constrainedElement="_auKbcIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__iA5ZmaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.58' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__iCHgGaNEe2Mns8sNTkjCw" name="HeightOfFallMoodCode" constrainedElement="_auKbcIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__iCHgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__iD8sGaNEe2Mns8sNTkjCw" name="HeightOfFallCodeP" constrainedElement="_auKbcIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__iD8sWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__iDVoGaNEe2Mns8sNTkjCw" name="HeightOfFallCode" constrainedElement="_auKbcIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__iDVoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67501-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__iFK0GaNEe2Mns8sNTkjCw" name="HeightOfFallValue" constrainedElement="_auKbcIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__iFK0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_cRczIIceEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_wKL4IIceEeGqF6qfYwLiQw" name="DisasterType">
      <ownedComment xmi:id="_mWXJICUhEeOPwcQY2yBpiA">
        <body>Kind of disaster causing or contributing to the patient's complaint</body>
      </ownedComment>
      <ownedRule xmi:id="__iNGp2aNEe2Mns8sNTkjCw" name="DisasterTypeTemplateId" constrainedElement="_wKL4IIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__iNGqGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.59' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__iO70GaNEe2Mns8sNTkjCw" name="DisasterTypeMoodCode" constrainedElement="_wKL4IIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__iO70WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__iQJ8GaNEe2Mns8sNTkjCw" name="DisasterTypeCode" constrainedElement="_wKL4IIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__iQJ8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69463-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__iR_IGaNEe2Mns8sNTkjCw" name="DisasterTypeValue" constrainedElement="_wKL4IIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__iR_IWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17594-5' or value.code = 'LA18089-5' or value.code = 'LA18090-3' or value.code = 'LA18091-1' or value.code = 'LA18092-9' or value.code = 'LA18093-7' or value.code = 'LA18094-5' or value.code = 'LA18095-2' or value.code = 'LA18096-0' or value.code = 'LA18097-8' or value.code = 'LA18098-6' or value.code = 'LA18099-4' or value.code = 'LA18100-0' or value.code = 'LA18101-8' or value.code = 'LA30039-4' or value.code = 'LA32967-4' or value.code = 'LA32968-2' or value.code = 'LA30042-8' or value.code = 'LA30040-2' or value.code = 'LA30037-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__iaiAGaNEe2Mns8sNTkjCw" name="DisasterTypeValueP" constrainedElement="_wKL4IIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__iaiAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_xljC4IceEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_W_uRYIzdEeGnhceUMXltng" name="ExistenceOfHistoryOfConditionOrSurgery">
      <ownedComment xmi:id="_rMTBsCU_EeOEaIF_MBGm_A">
        <body>Indicator of whether patient has a history of significant medical conditions or procedures</body>
      </ownedComment>
      <ownedRule xmi:id="__izjkWaNEe2Mns8sNTkjCw" name="ExistenceOfHistoryOfConditionOrSurgeryTemplateId" constrainedElement="_W_uRYIzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__izjkmaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.60' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__i0xsGaNEe2Mns8sNTkjCw" name="ExistenceOfHistoryOfConditionOrSurgeryMoodCode" constrainedElement="_W_uRYIzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__i0xsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__i3N8GaNEe2Mns8sNTkjCw" name="ExistenceOfHistoryOfConditionOrSurgeryCodeP" constrainedElement="_W_uRYIzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__i3N8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__i1_0GaNEe2Mns8sNTkjCw" name="ExistenceOfHistoryOfConditionOrSurgeryCode" constrainedElement="_W_uRYIzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__i1_0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67793-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__i4cEGaNEe2Mns8sNTkjCw" name="ExistenceOfHistoryOfConditionOrSurgeryValue" constrainedElement="_W_uRYIzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__i4cEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_XjAkoIzdEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_5XgZ4IzdEeGnhceUMXltng" name="Medical/Surgical History">
      <ownedComment xmi:id="_QAQw0CwnEeOaIuM51LdlNw">
        <body>Medical conditions the patient has or has had</body>
      </ownedComment>
      <ownedRule xmi:id="__i5DIGaNEe2Mns8sNTkjCw" name="Medical/Surgical HistoryTemplateId" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__i5DIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.61' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__i6RQGaNEe2Mns8sNTkjCw" name="Medical/Surgical HistoryMoodCode" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__i6RQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__i9UkGaNEe2Mns8sNTkjCw" name="Medical/Surgical HistoryCodeP" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__i9UkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__i7fYGaNEe2Mns8sNTkjCw" name="Medical/Surgical HistoryCode" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__i7fYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '68487-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__i-isGaNEe2Mns8sNTkjCw" name="Medical/Surgical HistoryValue" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__i-isWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__jHsoGaNEe2Mns8sNTkjCw" name="Medical/Surgical HistoryValueP" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__jHsoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__jQ2kGaNEe2Mns8sNTkjCw" name="Medical/Surgical HistoryNegationInd" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__jQ2kWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_5xr0cIzdEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KEZzkKg-EeG79fAvHk6H4g" name="Complaint">
      <ownedComment xmi:id="_Hj9d0CUfEeOPwcQY2yBpiA">
        <body>Statement of the problem by the patient or provider, including duration, system, and whether it is the chief complaint</body>
      </ownedComment>
      <ownedRule xmi:id="__NmvoGaNEe2Mns8sNTkjCw" name="ComplaintDurationRelationship" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__NmvoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__NtdUGaNEe2Mns8sNTkjCw" name="ComplaintTypeRelationship" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__NtdUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__N64sGaNEe2Mns8sNTkjCw" name="ComplaintOrganSystemRelationship" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__N7fwGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__jaAhWaNEe2Mns8sNTkjCw" name="ComplaintTemplateId" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__jaAhmaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.63' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__jbOoGaNEe2Mns8sNTkjCw" name="ComplaintMoodCode" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__jbOoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__jdq4GaNEe2Mns8sNTkjCw" name="ComplaintCodeP" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__jdq4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__jccwGaNEe2Mns8sNTkjCw" name="ComplaintCode" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__jccwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '10154-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__je5AGaNEe2Mns8sNTkjCw" name="ComplaintEffectiveTime" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__je5AWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__jgHIGaNEe2Mns8sNTkjCw" name="ComplaintValue" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__jgHIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::ST)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__jhVQGaNEe2Mns8sNTkjCw" name="ComplaintTargetSiteCode" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__jhVQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1 and self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA12703-7' or value.code = 'LA12705-2' or value.code = 'LA12706-0' or value.code = 'LA18111-7' or value.code = 'LA18112-5' or value.code = 'LA18113-3' or value.code = 'LA18114-1' or value.code = 'LA18115-8' or value.code = 'LA18116-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__jpREGaNEe2Mns8sNTkjCw" name="ComplaintTargetSiteCodeP" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__jpREWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() =  1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Ke-PsKg-EeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_7nP0MKhCEeG79fAvHk6H4g" name="PossibleInjury">
      <ownedComment xmi:id="_FHsPsKhDEeG79fAvHk6H4g">
        <body>Indicator of whether a patient may have an injury</body>
      </ownedComment>
      <ownedRule xmi:id="__j8MAGaNEe2Mns8sNTkjCw" name="PossibleInjuryTemplateId" constrainedElement="_7nP0MKhCEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__j8MAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.64' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__j9aIGaNEe2Mns8sNTkjCw" name="PossibleInjuryMoodCode" constrainedElement="_7nP0MKhCEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__j9aIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__j_2YGaNEe2Mns8sNTkjCw" name="PossibleInjuryCodeP" constrainedElement="_7nP0MKhCEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__j_2YWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__j-oQGaNEe2Mns8sNTkjCw" name="PossibleInjuryCode" constrainedElement="_7nP0MKhCEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__j-oQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69467-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__kBEgGaNEe2Mns8sNTkjCw" name="PossibleInjuryValue" constrainedElement="_7nP0MKhCEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__kBEgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_72GvkKhCEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0C-8EKhDEeG79fAvHk6H4g" name="ProviderPrimaryImpression">
      <ownedComment xmi:id="_FTlhMKhEEeG79fAvHk6H4g">
        <body>The EMS personnel's impression of the patient's primary problem or most significant condition</body>
      </ownedComment>
      <ownedRule xmi:id="__kKOd2aNEe2Mns8sNTkjCw" name="ProviderPrimaryImpressionTemplateId" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__kKOeGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.65' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__kLckGaNEe2Mns8sNTkjCw" name="ProviderPrimaryImpressionMoodCode" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__kLckWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__kN40GaNEe2Mns8sNTkjCw" name="ProviderPrimaryImpressionCodeP" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__kN40WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__kMqsGaNEe2Mns8sNTkjCw" name="ProviderPrimaryImpressionCode" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__kMqsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67492-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__kPG8GaNEe2Mns8sNTkjCw" name="ProviderPrimaryImpressionValue" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__kPG8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__kQVEGaNEe2Mns8sNTkjCw" name="ProviderPrimaryImpressionValueP" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__kQVEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_0V7GMKhDEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KOxo0KhEEeG79fAvHk6H4g" name="PrimarySymptom">
      <ownedComment xmi:id="__OYq4CwtEeOaIuM51LdlNw">
        <body>The primary symptom present in the patient</body>
      </ownedComment>
      <ownedRule xmi:id="__kZfB2aNEe2Mns8sNTkjCw" name="PrimarySymptomTemplateId" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__kZfCGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.66' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__kb7QGaNEe2Mns8sNTkjCw" name="PrimarySymptomMoodCode" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__kb7QWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__keXgGaNEe2Mns8sNTkjCw" name="PrimarySymptomCodeP" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__keXgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__kdJYGaNEe2Mns8sNTkjCw" name="PrimarySymptomCode" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__kdJYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67774-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ke-kGaNEe2Mns8sNTkjCw" name="PrimarySymptomValue" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ke-kWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__kgzwGaNEe2Mns8sNTkjCw" name="PrimarySymptomValueP" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__kgzwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KfRi8KhEEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_g5iJgKhEEeG79fAvHk6H4g" name="OtherSymptoms">
      <ownedComment xmi:id="_s_xikKhEEeG79fAvHk6H4g">
        <body>Symptoms other than the primary symptom</body>
      </ownedComment>
      <ownedRule xmi:id="__kp9sGaNEe2Mns8sNTkjCw" name="OtherSymptomsTemplateId" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__kp9sWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.67' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__kry4GaNEe2Mns8sNTkjCw" name="OtherSymptomsMoodCode" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__kry4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__kuPIGaNEe2Mns8sNTkjCw" name="OtherSymptomsCodeP" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__kuPIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ktBAGaNEe2Mns8sNTkjCw" name="OtherSymptomsCode" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ktBAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67776-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ku2MGaNEe2Mns8sNTkjCw" name="OtherSymptomsValue" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ku2MWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__kwEUGaNEe2Mns8sNTkjCw" name="OtherSymptomsValueP" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__kwEUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_hM9b0KhEEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0mPksKhEEeG79fAvHk6H4g" name="ProviderSecondaryImpressions">
      <ownedComment xmi:id="_xi9kcKhFEeG79fAvHk6H4g">
        <body>The EMS personnel's impression of the patient's secondary problems or conditions</body>
      </ownedComment>
      <ownedRule xmi:id="__k5OQGaNEe2Mns8sNTkjCw" name="ProviderSecondaryImpressionsTemplateId" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__k5OQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.68' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__k51UGaNEe2Mns8sNTkjCw" name="ProviderSecondaryImpressionsMoodCode" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__k51UWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__k8RkGaNEe2Mns8sNTkjCw" name="ProviderSecondaryImpressionsCodeP" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__k8RkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__k7DcGaNEe2Mns8sNTkjCw" name="ProviderSecondaryImpressionsCode" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__k7DcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69542-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__k84oGaNEe2Mns8sNTkjCw" name="ProviderSecondaryImpressionsValue" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__k84oWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__k-GwGaNEe2Mns8sNTkjCw" name="ProviderSecondaryImpressionsValueP" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__k-GwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_06tY0KhEEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_NZgqAKhFEeG79fAvHk6H4g" name="InitialPatientAcuity">
      <ownedComment xmi:id="_ncS9cCwnEeOaIuM51LdlNw">
        <body>Patient condition indicating urgency of treatment on arrival at patient</body>
      </ownedComment>
      <ownedRule xmi:id="__lGpoGaNEe2Mns8sNTkjCw" name="InitialPatientAcuityTemplateId" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__lGpoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.69' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__lH3wGaNEe2Mns8sNTkjCw" name="InitialPatientAcuityMoodCode" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__lH3wWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__lKUAGaNEe2Mns8sNTkjCw" name="InitialPatientAcuityCodeP" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__lKUAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__lJF4GaNEe2Mns8sNTkjCw" name="InitialPatientAcuityCode" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__lJF4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67493-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__lLiIGaNEe2Mns8sNTkjCw" name="InitialPatientAcuityValue" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__lLiIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17696-8' or value.code = 'LA17695-0' or value.code = 'LA17694-3' or value.code = 'LA17697-6' or value.code = 'LA32920-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__lUsEGaNEe2Mns8sNTkjCw" name="InitialPatientAcuityValueP" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__lUsEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NnQyIKhFEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Mr964IzjEeGnhceUMXltng" name="ExistenceOfDrugUseIndication">
      <ownedComment xmi:id="_nOkn4CU_EeOEaIF_MBGm_A">
        <body>Indicator of whether there are indications of alcohol or illicit drug use</body>
      </ownedComment>
      <ownedRule xmi:id="__ltGlmaNEe2Mns8sNTkjCw" name="ExistenceOfDrugUseIndicationTemplateId" constrainedElement="_Mr964IzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ltGl2aNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.70' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__luUsGaNEe2Mns8sNTkjCw" name="ExistenceOfDrugUseIndicationMoodCode" constrainedElement="_Mr964IzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__luUsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__lww8GaNEe2Mns8sNTkjCw" name="ExistenceOfDrugUseIndicationCodeP" constrainedElement="_Mr964IzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__lww8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__lvi0GaNEe2Mns8sNTkjCw" name="ExistenceOfDrugUseIndicationCode" constrainedElement="_Mr964IzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__lvi0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69757-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__lx_EGaNEe2Mns8sNTkjCw" name="ExistenceOfDrugUseIndicationValue" constrainedElement="_Mr964IzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__lx_EWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NOQvoIzjEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oJHzkIzjEeGnhceUMXltng" name="DrugUseIndication">
      <ownedComment xmi:id="_rAufICUkEeOEaIF_MBGm_A">
        <body>Evidence that a patient has been using alcohol or illicit drugs</body>
      </ownedComment>
      <ownedRule xmi:id="__lymIGaNEe2Mns8sNTkjCw" name="DrugUseIndicationTemplateId" constrainedElement="_oJHzkIzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__lymIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.71' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__lz0QGaNEe2Mns8sNTkjCw" name="DrugUseIndicationMoodCode" constrainedElement="_oJHzkIzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__lz0QWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__l1CYGaNEe2Mns8sNTkjCw" name="DrugUseIndicationCode" constrainedElement="_oJHzkIzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__l1CYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67669-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__l2QgGaNEe2Mns8sNTkjCw" name="DrugUseIndicationValue" constrainedElement="_oJHzkIzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__l2QgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17323-9' or value.code = 'LA17324-7' or value.code = 'LA17325-4' or value.code = 'LA17326-2' or value.code = 'LA17327-0' or value.code = 'LA32962-5')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__l-MUGaNEe2Mns8sNTkjCw" name="DrugUseIndicationValueP" constrainedElement="_oJHzkIzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__l-MUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oiTIkIzjEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_5JQlAJovEeG_FLcaRgAa7g" name="MedicationAdministered">
      <ownedComment xmi:id="_B5uMkCwqEeOaIuM51LdlNw">
        <body>Medications administered in response to the emergency--usually by the EMS crew.</body>
      </ownedComment>
      <ownedRule xmi:id="__FBbYGaNEe2Mns8sNTkjCw" name="MedicationAdministeredMedicationNotAdministeredEntryRelationship" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__FBbYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__FShIGaNEe2Mns8sNTkjCw" name="MedicationAdministeredMedicationConsumable" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__FShIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.consumable->one(consumable : cda::Consumable | not consumable.oclIsUndefined() and consumable.oclIsKindOf(cda::Consumable))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__F9PgGaNEe2Mns8sNTkjCw" name="MedicationAdministeredMedicationAdministeredResponseRelationship" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__F9PgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__GHAgGaNEe2Mns8sNTkjCw" name="MedicationAdministeredMedicationComplicationRelationship" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__GHAgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__GQKcGaNEe2Mns8sNTkjCw" name="MedicationAdministeredMedicationPriorAdministrationRelationship" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__GQKcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__GroQGaNEe2Mns8sNTkjCw" name="MedicationAdministeredMedicationPerformerParticipation" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__GroQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.performer->exists(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__GzkEGaNEe2Mns8sNTkjCw" name="MedicationAdministeredMedicationAuthorizationRelationship" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__G0LIGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__TMaQGaNEe2Mns8sNTkjCw" name="MedicationAdministeredMedicationAdministrationDeviceParticipant" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__TNBUGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__mMOx2aNEe2Mns8sNTkjCw" name="MedicationAdministeredTemplateId" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__mM10GaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.72' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__mOD8GaNEe2Mns8sNTkjCw" name="MedicationAdministeredClassCode" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__mOD8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__mPSEGaNEe2Mns8sNTkjCw" name="MedicationAdministeredNegationInd" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__mPSEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__mQgMGaNEe2Mns8sNTkjCw" name="MedicationAdministeredEffectiveTime" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__mQgMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (( not self.effectiveTime->isEmpty()) )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__mZqIGaNEe2Mns8sNTkjCw" name="MedicationAdministeredRouteCodeP" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__mZqIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__mRuUGaNEe2Mns8sNTkjCw" name="MedicationAdministeredRouteCode" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__mRuUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined() and self.routeCode.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1.1' and (value.code = 'C38208' or value.code = 'C38246' or value.code = 'C38216' or value.code = 'C38222' or value.code = 'C38284' or value.code = 'C28161' or value.code = 'C38255' or value.code = 'C38276' or value.code = 'C38285' or value.code = 'C38287' or value.code = 'C38288' or value.code = 'C38290' or value.code = 'C38192' or value.code = 'C38295' or value.code = 'C38299' or value.code = 'C38300' or value.code = 'C38304' or value.code = 'C38305' or value.code = 'C38271' or value.code = 'C38193' or value.code = 'C38238' or value.code = 'C64987' or value.code = 'C38250' or value.code = 'C38676'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__mhl8GaNEe2Mns8sNTkjCw" name="MedicationAdministeredDoseQuantity" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__mhl8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__mi0EGaNEe2Mns8sNTkjCw" name="MedicationAdministeredRateQuantity" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__mi0EWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.rateQuantity.oclIsUndefined() or self.rateQuantity.isNullFlavorUndefined()) implies (not self.rateQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__mkCMGaNEe2Mns8sNTkjCw" name="MedicationAdministeredApproachSiteCode" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__mkCMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.approachSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '280361007' or value.code = '15562006')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__mslEGaNEe2Mns8sNTkjCw" name="MedicationAdministeredApproachSiteCodeP" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__mslEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (( not self.approachSiteCode->isEmpty()) )</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_6L6U0JovEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_nazskEbuEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_46UUAJ9nEeGw9ZRnaFfEZQ" name="EmergencyMedicalDispatchObservation">
      <ownedComment xmi:id="_4pAdQCUlEeOEaIF_MBGm_A">
        <body>Whether and how emergency medical dispatch was performed</body>
      </ownedComment>
      <ownedRule xmi:id="__nyxR2aNEe2Mns8sNTkjCw" name="EmergencyMedicalDispatchObservationTemplateId" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__nyxSGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.73' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__n0mcGaNEe2Mns8sNTkjCw" name="EmergencyMedicalDispatchObservationMoodCode" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__n0mcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__n3CsGaNEe2Mns8sNTkjCw" name="EmergencyMedicalDispatchObservationCodeP" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__n3CsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__n10kGaNEe2Mns8sNTkjCw" name="EmergencyMedicalDispatchObservationCode" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__n10kWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67488-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__n3pwGaNEe2Mns8sNTkjCw" name="EmergencyMedicalDispatchObservationValue" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__n3pwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17151-4' or value.code = 'LA17152-2' or value.code = 'LA17153-0' or value.code = 'LA32-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__oAzsGaNEe2Mns8sNTkjCw" name="EmergencyMedicalDispatchObservationValueP" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__oAzsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_5cQjcJ9nEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__LltsJ97EeGw9ZRnaFfEZQ" name="DispatchReason">
      <ownedComment xmi:id="_xzPHACUfEeOPwcQY2yBpiA">
        <body>The complaint that dispatch reported to the responding unit</body>
      </ownedComment>
      <ownedRule xmi:id="__oQEQGaNEe2Mns8sNTkjCw" name="DispatchReasonTemplateId" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__oQEQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.74' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__oQrUGaNEe2Mns8sNTkjCw" name="DispatchReasonMoodCode" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__oRSYGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__oTHkGaNEe2Mns8sNTkjCw" name="DispatchReasonCodeP" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__oTHkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__oR5cGaNEe2Mns8sNTkjCw" name="DispatchReasonCode" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__oR5cWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67570-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__oTuoGaNEe2Mns8sNTkjCw" name="DispatchReasonValue" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__oTuoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA23843-8' or value.code = 'LA15903-0' or value.code = 'LA17117-5' or value.code = 'LA17118-3' or value.code = 'LA17119-1' or value.code = 'LA17120-9' or value.code = 'LA17121-7' or value.code = 'LA17122-5' or value.code = 'LA17123-3' or value.code = 'LA17124-1' or value.code = 'LA17125-8' or value.code = 'LA17126-6' or value.code = 'LA17127-4' or value.code = 'LA17128-2' or value.code = 'LA17129-0' or value.code = 'LA17131-6' or value.code = 'LA17132-4' or value.code = 'LA17133-2' or value.code = 'LA17134-0' or value.code = 'LA17135-7' or value.code = 'LA17136-5' or value.code = 'LA17137-3' or value.code = 'LA17138-1' or value.code = 'LA17140-7' or value.code = 'LA17141-5' or value.code = 'LA17142-3' or value.code = 'LA17143-1' or value.code = 'LA17144-9' or value.code = 'LA17145-6' or value.code = 'LA17146-4' or value.code = 'LA17147-2' or value.code = 'LA17148-0' or value.code = 'LA17149-8' or value.code = 'LA17150-6' or value.code = 'LA18093-7' or value.code = 'LA18209-9' or value.code = 'LA18210-7' or value.code = 'LA18211-5' or value.code = 'LA9553-4' or value.code = 'LA9555-9' or value.code = 'LA17130-8' or value.code = 'LA23800-8' or value.code = 'LA17392-4' or value.code = 'LA18716-3' or value.code = 'LA15098-9' or value.code = 'LA15099-7')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__obDYGaNEe2Mns8sNTkjCw" name="DispatchReasonValueP" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__obDYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_BD2P0J98EeGw9ZRnaFfEZQ">
        <ownedComment xmi:id="_efgjIEM8EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: eDispatch.01</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sUm-oIcnEeGqF6qfYwLiQw" name="CurrentlyOnMedication">
      <ownedComment xmi:id="_9n5n4CUfEeOPwcQY2yBpiA">
        <body>Whether a patient is currently taking medication</body>
      </ownedComment>
      <ownedRule xmi:id="__oq7AGaNEe2Mns8sNTkjCw" name="CurrentlyOnMedicationTemplateId" constrainedElement="_sUm-oIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__oq7AWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.75' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__osJIGaNEe2Mns8sNTkjCw" name="CurrentlyOnMedicationMoodCode" constrainedElement="_sUm-oIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__osJIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__oswMGaNEe2Mns8sNTkjCw" name="CurrentlyOnMedicationCode" constrainedElement="_sUm-oIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__oswMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67791-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ot-UGaNEe2Mns8sNTkjCw" name="CurrentlyOnMedicationValue" constrainedElement="_sUm-oIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ot-UWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_wcI0sIcnEeGqF6qfYwLiQw">
        <ownedComment xmi:id="_Hz8KIEM8EeKBoM5tGvrHVQ">
          <body>If eHistory.12 has the value &quot;None Reported,&quot; the value is &quot;False&quot;&#xD;
If eHistory.12 has the value &quot;Refused&quot; or &quot;Unable to Complete,&quot; the value is &quot;NI&quot;; the&#xD;
original value may be recorded in Observation.text.</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_mwn8MIcoEeGqF6qfYwLiQw" name="CurrentMedication">
      <ownedComment xmi:id="__kxkQCUfEeOPwcQY2yBpiA">
        <body>A medication a patient is currently taking</body>
      </ownedComment>
      <ownedRule xmi:id="__RkpoGaNEe2Mns8sNTkjCw" name="CurrentMedicationConsumable" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__RkpoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.consumable->one(consumable : cda::Consumable | not consumable.oclIsUndefined() and consumable.oclIsKindOf(cda::Consumable))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__o2hNmaNEe2Mns8sNTkjCw" name="CurrentMedicationTemplateId" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__o2hN2aNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.77' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__o3vUGaNEe2Mns8sNTkjCw" name="CurrentMedicationNegationInd" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__o3vUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__o49cGaNEe2Mns8sNTkjCw" name="CurrentMedicationNullFlavor" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__o49cWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('nullFlavor')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__o6LkGaNEe2Mns8sNTkjCw" name="CurrentMedicationDoseQuantity" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__o6yoGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__pEjoGaNEe2Mns8sNTkjCw" name="CurrentMedicationRouteCodeP" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__pEjoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__o7ZsGaNEe2Mns8sNTkjCw" name="CurrentMedicationRouteCode" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__o7ZsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined() and self.routeCode.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1.1' and (value.code = 'C38208' or value.code = 'C38246' or value.code = 'C38216' or value.code = 'C38222' or value.code = 'C38284' or value.code = 'C28161' or value.code = 'C38255' or value.code = 'C38276' or value.code = 'C38285' or value.code = 'C38287' or value.code = 'C38288' or value.code = 'C38290' or value.code = 'C38192' or value.code = 'C38295' or value.code = 'C38299' or value.code = 'C38300' or value.code = 'C38304' or value.code = 'C38305' or value.code = 'C38271' or value.code = 'C38193' or value.code = 'C38238' or value.code = 'C64987' or value.code = 'C38250' or value.code = 'C38676'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pv80EIcoEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_nazskEbuEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zbYvIJoiEeG_FLcaRgAa7g" name="PhysicalAssessmentOrganizer">
      <ownedComment xmi:id="_PlnNcCwtEeOaIuM51LdlNw">
        <body>A collection of qualitative assessments of the patient's physical condition</body>
      </ownedComment>
      <ownedRule xmi:id="__VVIQGaNEe2Mns8sNTkjCw" name="PhysicalAssessmentOrganizerComponent3" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__VVIQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__VkY0GaNEe2Mns8sNTkjCw" name="PhysicalAssessmentOrganizerComponent412" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__VkY0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__V03gGaNEe2Mns8sNTkjCw" name="PhysicalAssessmentOrganizerComponent5" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__V03gWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WLc0GaNEe2Mns8sNTkjCw" name="PhysicalAssessmentOrganizerComponent6" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WLc0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Wb7gGaNEe2Mns8sNTkjCw" name="PhysicalAssessmentOrganizerComponent8" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Wb7gWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__WwroGaNEe2Mns8sNTkjCw" name="PhysicalAssessmentOrganizerComponent9" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__WwroWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__XBKUGaNEe2Mns8sNTkjCw" name="PhysicalAssessmentOrganizerComponent10" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__XBKUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__XRpAGaNEe2Mns8sNTkjCw" name="PhysicalAssessmentOrganizerComponent11" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__XRpAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__XiHsGaNEe2Mns8sNTkjCw" name="PhysicalAssessmentOrganizerComponent12" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__XiHsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__XymYGaNEe2Mns8sNTkjCw" name="PhysicalAssessmentOrganizerComponent13" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__XymYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__YBP4GaNEe2Mns8sNTkjCw" name="PhysicalAssessmentOrganizerComponent14" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YBP4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__pWQd2aNEe2Mns8sNTkjCw" name="PhysicalAssessmentOrganizerTemplateId" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__pW3gGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.78' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ADlVYGaOEe2Mns8sNTkjCw" name="PhysicalAssessmentOrganizerComponent15" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ADlVYWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_APwJIGaOEe2Mns8sNTkjCw" name="PhysicalAssessmentOrganizerComponent42" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_APwJIWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AP4sAGaOEe2Mns8sNTkjCw" name="PhysicalAssessmentOrganizerComponent413" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AP4sAWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_0BK8wJoiEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sW8QcJosEeG_FLcaRgAa7g" name="PatientPregnancy">
      <ownedComment xmi:id="_5GTu0CwsEeOaIuM51LdlNw">
        <body>Indication of whether the patient is pregnant</body>
      </ownedComment>
      <ownedRule xmi:id="__phPkGaNEe2Mns8sNTkjCw" name="PatientPregnancyTemplateId" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__phPkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.79' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__pidsGaNEe2Mns8sNTkjCw" name="PatientPregnancyMoodCode" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__pidsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__pkS4GaNEe2Mns8sNTkjCw" name="PatientPregnancyCodeP" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__pk58GaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__pjr0GaNEe2Mns8sNTkjCw" name="PatientPregnancyCode" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__pjr0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67471-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__plhAGaNEe2Mns8sNTkjCw" name="PatientPregnancyValue" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__plhAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17329-6' or value.code = 'LA17330-4' or value.code = 'LA17331-2' or value.code = 'LA17332-0' or value.code = 'LA32-8' or value.code = 'LA24406-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__puq8GaNEe2Mns8sNTkjCw" name="PatientPregnancyValueP" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__puq8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_42mPEJosEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_S1I0sJotEeG_FLcaRgAa7g" name="LastOralIntake">
      <ownedComment xmi:id="_9AUfkCwnEeOaIuM51LdlNw">
        <body>Time of patient's last oral intake</body>
      </ownedComment>
      <ownedRule xmi:id="__qAXx2aNEe2Mns8sNTkjCw" name="LastOralIntakeTemplateId" constrainedElement="_S1I0sJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__qAXyGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.80' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__qBl4GaNEe2Mns8sNTkjCw" name="LastOralIntakeMoodCode" constrainedElement="_S1I0sJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__qBl4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__qECIGaNEe2Mns8sNTkjCw" name="LastOralIntakeCodeP" constrainedElement="_S1I0sJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__qECIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__qC0AGaNEe2Mns8sNTkjCw" name="LastOralIntakeCode" constrainedElement="_S1I0sJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__qC0AWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67517-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__qFQQGaNEe2Mns8sNTkjCw" name="LastOralIntakeValue" constrainedElement="_S1I0sJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__qFQQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_TS5HsJotEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rhjrIJotEeG_FLcaRgAa7g" name="PatientAge">
      <ownedComment xmi:id="_tBPFUCwqEeOaIuM51LdlNw">
        <body>The age of the patient</body>
      </ownedComment>
      <ownedRule xmi:id="__qPBRmaNEe2Mns8sNTkjCw" name="PatientAgeTemplateId" constrainedElement="_rhjrIJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__qPBR2aNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.81' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__qQ2cGaNEe2Mns8sNTkjCw" name="PatientAgeMoodCode" constrainedElement="_rhjrIJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__qQ2cWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__qTSsGaNEe2Mns8sNTkjCw" name="PatientAgeCodeP" constrainedElement="_rhjrIJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__qTSsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__qSEkGaNEe2Mns8sNTkjCw" name="PatientAgeCode" constrainedElement="_rhjrIJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__qSEkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '30525-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__qVH4GaNEe2Mns8sNTkjCw" name="PatientAgeValue" constrainedElement="_rhjrIJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__qVH4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_r9YrgJotEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_HuCH8JouEeG_FLcaRgAa7g" name="ThrombolyticContraindications">
      <ownedComment xmi:id="_58NowC0AEeO0H9tywllqaQ">
        <body>Indicator of contraindications to thrombolytic use</body>
      </ownedComment>
      <ownedRule xmi:id="__qgHB2aNEe2Mns8sNTkjCw" name="ThrombolyticContraindicationsTemplateId" constrainedElement="_HuCH8JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__qguEGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.82' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__qh8MGaNEe2Mns8sNTkjCw" name="ThrombolyticContraindicationsMoodCode" constrainedElement="_HuCH8JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__qh8MWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__qk_gGaNEe2Mns8sNTkjCw" name="ThrombolyticContraindicationsCodeP" constrainedElement="_HuCH8JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__qk_gWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__qjKUGaNEe2Mns8sNTkjCw" name="ThrombolyticContraindicationsCode" constrainedElement="_HuCH8JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__qjKUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67523-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__qmNoGaNEe2Mns8sNTkjCw" name="ThrombolyticContraindicationsValue" constrainedElement="_HuCH8JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__qmNoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17114-2' or value.code = 'LA17115-9' or value.code = 'LA17116-7')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__qxMwGaNEe2Mns8sNTkjCw" name="ThrombolyticContraindicationsValueP" constrainedElement="_HuCH8JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__qxMwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_IFY4AJouEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qlUP4JouEeG_FLcaRgAa7g" name="BarriersToPatientCare">
      <ownedComment xmi:id="_JnimgCUcEeOPwcQY2yBpiA">
        <body>Kinds of circumstances limiting provision of care</body>
      </ownedComment>
      <ownedRule xmi:id="__rFV12aNEe2Mns8sNTkjCw" name="BarriersToPatientCareTemplateId" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__rF84GaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.83' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__rHLAGaNEe2Mns8sNTkjCw" name="BarriersToPatientCareMoodCode" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__rHLAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__rKOUGaNEe2Mns8sNTkjCw" name="BarriersToPatientCareCodeP" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__rKOUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__rIZIGaNEe2Mns8sNTkjCw" name="BarriersToPatientCareCode" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__rIZIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67515-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__rLccGaNEe2Mns8sNTkjCw" name="BarriersToPatientCareValue" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__rLccWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17306-4' or value.code = 'LA17307-2' or value.code = 'LA17308-0' or value.code = 'LA17309-8' or value.code = 'LA17310-6' or value.code = 'LA17311-4' or value.code = 'LA17312-2' or value.code = 'LA17313-0' or value.code = 'LA17314-8' or value.code = 'LA17315-5' or value.code = 'LA17316-3' or value.code = 'LA17317-1' or value.code = 'LA17318-9' or value.code = 'LA17711-5' or value.code = 'LA6301-1' or value.code = 'LA23824-8' or value.code = 'LA32960-9' or value.code = 'LA32961-7')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__rUmYGaNEe2Mns8sNTkjCw" name="BarriersToPatientCareValueP" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__rUmYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_q6vGQJouEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Ox86UKK4EeGOxth0BgV-QA" name="FirstUnitIndicator">
      <ownedComment xmi:id="_biZCICwlEeOaIuM51LdlNw">
        <body>Indicator of whether reporter of PCR is the first unit to arrive at the scene</body>
      </ownedComment>
      <ownedRule xmi:id="__rlsIGaNEe2Mns8sNTkjCw" name="FirstUnitIndicatorTemplateId" constrainedElement="_Ox86UKK4EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__rlsIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.84' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__rm6QGaNEe2Mns8sNTkjCw" name="FirstUnitIndicatorMoodCode" constrainedElement="_Ox86UKK4EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__rm6QWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__rpWgGaNEe2Mns8sNTkjCw" name="FirstUnitIndicatorCodeP" constrainedElement="_Ox86UKK4EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__rpWgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__roIYGaNEe2Mns8sNTkjCw" name="FirstUnitIndicatorCode" constrainedElement="_Ox86UKK4EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__roIYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67481-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__rrywGaNEe2Mns8sNTkjCw" name="FirstUnitIndicatorValue" constrainedElement="_Ox86UKK4EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__rrywWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PFao4KK4EeGOxth0BgV-QA">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_wPLCkKK5EeGOxth0BgV-QA" name="ScenePatientCount">
      <ownedComment xmi:id="_KZ3_8Cz_EeO0H9tywllqaQ">
        <body>How many patients were at the scene</body>
      </ownedComment>
      <ownedRule xmi:id="__r-GoGaNEe2Mns8sNTkjCw" name="ScenePatientCountTemplateId" constrainedElement="_wPLCkKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__r-GoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.86' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__r_UwGaNEe2Mns8sNTkjCw" name="ScenePatientCountMoodCode" constrainedElement="_wPLCkKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__r_UwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__sBxAGaNEe2Mns8sNTkjCw" name="ScenePatientCountCodeP" constrainedElement="_wPLCkKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__sBxAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__sAi4GaNEe2Mns8sNTkjCw" name="ScenePatientCountCode" constrainedElement="_wPLCkKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__sAi4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67489-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__sCYEGaNEe2Mns8sNTkjCw" name="ScenePatientCountValue" constrainedElement="_wPLCkKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__sCYEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17717-2' or value.code = 'LA15382-7' or value.code = 'LA137-2')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__sLiAGaNEe2Mns8sNTkjCw" name="ScenePatientCountValueP" constrainedElement="_wPLCkKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__sMJEGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_wlAvsKK5EeGOxth0BgV-QA">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_E-SEAKK8EeGOxth0BgV-QA" name="MassCasualtyIndicator">
      <ownedComment xmi:id="_AWFPkCwqEeOaIuM51LdlNw">
        <body>Indicator of whether the patient injury is part of a mass casualty event</body>
      </ownedComment>
      <ownedRule xmi:id="__sUE4GaNEe2Mns8sNTkjCw" name="MassCasualtyIndicatorTemplateId" constrainedElement="_E-SEAKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__sUr8GaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.87' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__sV6EGaNEe2Mns8sNTkjCw" name="MassCasualtyIndicatorMoodCode" constrainedElement="_E-SEAKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__sV6EWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__sXvQGaNEe2Mns8sNTkjCw" name="MassCasualtyIndicatorCodeP" constrainedElement="_E-SEAKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__sXvQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__sWhIGaNEe2Mns8sNTkjCw" name="MassCasualtyIndicatorCode" constrainedElement="_E-SEAKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__sWhIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67490-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__sY9YGaNEe2Mns8sNTkjCw" name="MassCasualtyIndicatorValue" constrainedElement="_E-SEAKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__sY9YWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_FW5YUKK8EeGOxth0BgV-QA">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ayUKMMk3EeK2gbjCtOEivw" name="LocationTypeObservation">
      <ownedComment xmi:id="_q9_3sCwpEeOaIuM51LdlNw">
        <body>Kind of location where the incident occurred</body>
      </ownedComment>
      <ownedRule xmi:id="__siHV2aNEe2Mns8sNTkjCw" name="LocationTypeObservationTemplateId" constrainedElement="_ayUKMMk3EeK2gbjCtOEivw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__siuYGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.88' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__slKoGaNEe2Mns8sNTkjCw" name="LocationTypeObservationCodeP" constrainedElement="_ayUKMMk3EeK2gbjCtOEivw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__slKoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__sjVcGaNEe2Mns8sNTkjCw" name="LocationTypeObservationCode" constrainedElement="_ayUKMMk3EeK2gbjCtOEivw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__sjVcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '74496-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__slxsGaNEe2Mns8sNTkjCw" name="LocationTypeObservationValue" constrainedElement="_ayUKMMk3EeK2gbjCtOEivw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__slxsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__sm_0GaNEe2Mns8sNTkjCw" name="LocationTypeObservationValueP" constrainedElement="_ayUKMMk3EeK2gbjCtOEivw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__sm_0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_bblJoMk3EeK2gbjCtOEivw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_p4XEAJ-kEeGorI3CPDW2ww" name="AdverseEventIndicator">
      <ownedComment xmi:id="_zJGBwCSSEeO2bfzIdJE0yg">
        <body>Indication of whether an adverse event occurred involving EMS personnel</body>
      </ownedComment>
      <ownedRule xmi:id="__svit2aNEe2Mns8sNTkjCw" name="AdverseEventIndicatorTemplateId" constrainedElement="_p4XEAJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__swJwGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.89' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__sxX4GaNEe2Mns8sNTkjCw" name="AdverseEventIndicatorMoodCode" constrainedElement="_p4XEAJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__sxX4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__sz0IGaNEe2Mns8sNTkjCw" name="AdverseEventIndicatorCodeP" constrainedElement="_p4XEAJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__sz0IWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__symAGaNEe2Mns8sNTkjCw" name="AdverseEventIndicatorCode" constrainedElement="_p4XEAJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__symAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67554-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__s1CQGaNEe2Mns8sNTkjCw" name="AdverseEventIndicatorValue" constrainedElement="_p4XEAJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__s1CQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_q4E0kJ-kEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gU4tMJ-lEeGorI3CPDW2ww" name="AdverseEventTypeObservation">
      <ownedComment xmi:id="_6aZsMCSSEeO2bfzIdJE0yg">
        <body>Kind of adverse event involving EMS personnel</body>
      </ownedComment>
      <ownedRule xmi:id="__s9lJGaNEe2Mns8sNTkjCw" name="AdverseEventTypeObservationTemplateId" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__s9lJWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.90' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__s-zQGaNEe2Mns8sNTkjCw" name="AdverseEventTypeObservationMoodCode" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__s-zQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__tAocGaNEe2Mns8sNTkjCw" name="AdverseEventTypeObservationCodeP" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__tAocWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__s_aUGaNEe2Mns8sNTkjCw" name="AdverseEventTypeObservationCode" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__s_aUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67555-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__tB2kGaNEe2Mns8sNTkjCw" name="AdverseEventTypeObservationValue" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__tB2kWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA137-2' or value.code = 'LA17059-9' or value.code = 'LA17402-1' or value.code = 'LA17403-9' or value.code = 'LA17404-7' or value.code = 'LA17405-4' or value.code = 'LA17406-2' or value.code = 'LA17407-0' or value.code = 'LA17408-8' or value.code = 'LA17409-6' or value.code = 'LA17410-4' or value.code = 'LA17411-2' or value.code = 'LA17412-0' or value.code = 'LA17413-8' or value.code = 'LA17414-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__tKZcGaNEe2Mns8sNTkjCw" name="AdverseEventTypeObservationValueP" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__tKZcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_gwN-UJ-lEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rNkl4GleEeG4boS-IbG8Zw" name="BillingCondition">
      <ownedComment xmi:id="_QK_FYCUcEeOPwcQY2yBpiA">
        <body>Patient condition classified by billing category</body>
      </ownedComment>
      <ownedRule xmi:id="__tbfN2aNEe2Mns8sNTkjCw" name="BillingConditionTemplateId" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__tbfOGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.91' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__teigGaNEe2Mns8sNTkjCw" name="BillingConditionCodeP" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__teigWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__tctUGaNEe2Mns8sNTkjCw" name="BillingConditionCode" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__tctUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67556-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__tfwoGaNEe2Mns8sNTkjCw" name="BillingConditionValue" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__tfwoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__tg-wGaNEe2Mns8sNTkjCw" name="BillingConditionValueP" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__tg-wWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__tiz8GaNEe2Mns8sNTkjCw" name="BillingConditionMoodCode" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__tiz8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_rNkl4WleEeG4boS-IbG8Zw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_To2-YGleEeG4boS-IbG8Zw" name="LevelOfServiceObservation">
      <ownedComment xmi:id="_MF2UQCwoEeOaIuM51LdlNw">
        <body>CMS classification of service level for billing purposes</body>
      </ownedComment>
      <ownedRule xmi:id="__tr94GaNEe2Mns8sNTkjCw" name="LevelOfServiceObservationTemplateId" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__tr94WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.92' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ttMAGaNEe2Mns8sNTkjCw" name="LevelOfServiceObservationMoodCode" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ttMAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__twPUGaNEe2Mns8sNTkjCw" name="LevelOfServiceObservationCodeP" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__twPUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__tuaIGaNEe2Mns8sNTkjCw" name="LevelOfServiceObservationCode" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__tuaIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69464-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__txdcGaNEe2Mns8sNTkjCw" name="LevelOfServiceObservationValue" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__txdcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18102-6' or value.code = 'LA18103-4' or value.code = 'LA18104-2' or value.code = 'LA18105-9' or value.code = 'LA18106-7' or value.code = 'LA18107-5' or value.code = 'LA18108-3' or value.code = 'LA18109-1' or value.code = 'LA18110-9')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__t6nYGaNEe2Mns8sNTkjCw" name="LevelOfServiceObservationValueP" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__t6nYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_W97cwGleEeG4boS-IbG8Zw">
        <ownedComment xmi:id="_ifpNMEM7EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: ePayment.50</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rDpggp-mEeGorI3CPDW2ww" name="ProtocolObservation">
      <ownedComment xmi:id="_hgBjgCz8EeO0H9tywllqaQ">
        <body>The protocol used by EMS personnel to direct the clinical care of the patient</body>
      </ownedComment>
      <ownedRule xmi:id="__uLtIGaNEe2Mns8sNTkjCw" name="ProtocolObservationTemplateId" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__uLtIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.93' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__uM7QGaNEe2Mns8sNTkjCw" name="ProtocolObservationMoodCode" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__uM7QWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__uP-kGaNEe2Mns8sNTkjCw" name="ProtocolObservationCodeP" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__uP-kWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__uOwcGaNEe2Mns8sNTkjCw" name="ProtocolObservationCode" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__uOwcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67537-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__uRMsGaNEe2Mns8sNTkjCw" name="ProtocolObservationValue" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__uRMsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17398-1' or value.code = 'LA17491-4' or value.code = 'LA17492-2' or value.code = 'LA17494-8' or value.code = 'LA17495-5' or value.code = 'LA17496-3' or value.code = 'LA17497-1' or value.code = 'LA17498-9' or value.code = 'LA17499-7' or value.code = 'LA17500-2' or value.code = 'LA17501-0' or value.code = 'LA17502-8' or value.code = 'LA17503-6' or value.code = 'LA17504-4' or value.code = 'LA17505-1' or value.code = 'LA17506-9' or value.code = 'LA17507-7' or value.code = 'LA17508-5' or value.code = 'LA17509-3' or value.code = 'LA24135-8' or value.code = 'LA17511-9' or value.code = 'LA17512-7' or value.code = 'LA17513-5' or value.code = 'LA17514-3' or value.code = 'LA17515-0' or value.code = 'LA17516-8' or value.code = 'LA17517-6' or value.code = 'LA17518-4' or value.code = 'LA17519-2' or value.code = 'LA17520-0' or value.code = 'LA17521-8' or value.code = 'LA17522-6' or value.code = 'LA17523-4' or value.code = 'LA17524-2' or value.code = 'LA17525-9' or value.code = 'LA17526-7' or value.code = 'LA17527-5' or value.code = 'LA17528-3' or value.code = 'LA17529-1' or value.code = 'LA17530-9' or value.code = 'LA17531-7' or value.code = 'LA17532-5' or value.code = 'LA17533-3' or value.code = 'LA17534-1' or value.code = 'LA17535-8' or value.code = 'LA17536-6' or value.code = 'LA17537-4' or value.code = 'LA17538-2' or value.code = 'LA17539-0' or value.code = 'LA17540-8' or value.code = 'LA17541-6' or value.code = 'LA17542-4' or value.code = 'LA17543-2' or value.code = 'LA17544-0' or value.code = 'LA17545-7' or value.code = 'LA17546-5' or value.code = 'LA17547-3' or value.code = 'LA17548-1' or value.code = 'LA17549-9' or value.code = 'LA17550-7' or value.code = 'LA17551-5' or value.code = 'LA17552-3' or value.code = 'LA17553-1' or value.code = 'LA17554-9' or value.code = 'LA17555-6' or value.code = 'LA17556-4' or value.code = 'LA23845-3' or value.code = 'LA17558-0' or value.code = 'LA17559-8' or value.code = 'LA17560-6' or value.code = 'LA17561-4' or value.code = 'LA17562-2' or value.code = 'LA17563-0' or value.code = 'LA17564-8' or value.code = 'LA17565-5' or value.code = 'LA17566-3' or value.code = 'LA17567-1' or value.code = 'LA17568-9' or value.code = 'LA17569-7' or value.code = 'LA17570-5' or value.code = 'LA18269-3' or value.code = 'LA46-8' or value.code = 'LA23828-9' or value.code = 'LA23829-7' or value.code = 'LA23830-5' or value.code = 'LA23831-3' or value.code = 'LA23832-1' or value.code = 'LA23833-9' or value.code = 'LA23834-7' or value.code = 'LA23835-4' or value.code = 'LA23836-2' or value.code = 'LA23837-0' or value.code = 'LA23838-8' or value.code = 'LA23839-6' or value.code = 'LA24136-6' or value.code = 'LA24137-4' or value.code = 'LA24139-0' or value.code = 'LA24140-8' or value.code = 'LA24141-6' or value.code = 'LA24142-4' or value.code = 'LA24143-2' or value.code = 'LA24144-0' or value.code = 'LA24145-7' or value.code = 'LA24146-5' or value.code = 'LA24147-3' or value.code = 'LA24148-1' or value.code = 'LA24149-9' or value.code = 'LA24150-7' or value.code = 'LA24151-5' or value.code = 'LA23827-1' or value.code = 'LA24138-2')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__uaWoGaNEe2Mns8sNTkjCw" name="ProtocolObservationValueP" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__uaWoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_rDpghJ-mEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_n-zaBZ-nEeGorI3CPDW2ww" name="CandidatePatientRegistryType">
      <ownedComment xmi:id="_-XojECUcEeOPwcQY2yBpiA">
        <body>Kind of patient registry in which it may be appropriate to include the patient</body>
      </ownedComment>
      <ownedRule xmi:id="__uq1UGaNEe2Mns8sNTkjCw" name="CandidatePatientRegistryTypeTemplateId" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__uq1UWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.94' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__usDcGaNEe2Mns8sNTkjCw" name="CandidatePatientRegistryTypeMoodCode" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__usDcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ut4oGaNEe2Mns8sNTkjCw" name="CandidatePatientRegistryTypeCodeP" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ut4oWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__usqgGaNEe2Mns8sNTkjCw" name="CandidatePatientRegistryTypeCode" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__usqgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67553-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__uvGwGaNEe2Mns8sNTkjCw" name="CandidatePatientRegistryTypeValue" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__uvGwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17057-3' or value.code = 'LA17058-1' or value.code = 'LA17059-9' or value.code = 'LA17398-1' or value.code = 'LA17399-9' or value.code = 'LA17400-5' or value.code = 'LA17401-3' or value.code = 'LA7318-4' or value.code = 'LA9535-1' or value.code = 'LA9553-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__u2bgGaNEe2Mns8sNTkjCw" name="CandidatePatientRegistryTypeValueP" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__u2bgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_n-zaB5-nEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0padgJ99EeGw9ZRnaFfEZQ" name="DelayOrganizer">
      <ownedComment xmi:id="_GMgGMCUgEeOPwcQY2yBpiA">
        <body>Kinds of delays experienced by a responder</body>
      </ownedComment>
      <ownedRule xmi:id="__KX1cGaNEe2Mns8sNTkjCw" name="DelayOrganizerDispatchDelayRelationship" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__KX1cWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__KpiQGaNEe2Mns8sNTkjCw" name="DelayOrganizerResponseDelayRelationship" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__KpiQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__K6A8GaNEe2Mns8sNTkjCw" name="DelayOrganizerSceneDelayRelationship" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__K6A8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__LJRgGaNEe2Mns8sNTkjCw" name="DelayOrganizerTransportDelayRelationship" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__LJRgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__LZwMGaNEe2Mns8sNTkjCw" name="DelayOrganizerTurnaoundDelayRelationship" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__LZwMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__vIIVmaNEe2Mns8sNTkjCw" name="DelayOrganizerTemplateId" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__vIvYGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.95' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_17RuAJ99EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_MiN-UJ-BEeGw9ZRnaFfEZQ" name="DispatchLocationOrganizer">
      <ownedComment xmi:id="_zi5J8CUjEeOEaIF_MBGm_A">
        <body>Information about the location of the unit when dispatched</body>
      </ownedComment>
      <ownedRule xmi:id="__LpAwGaNEe2Mns8sNTkjCw" name="DispatchLocationOrganizerDispatchLocationNameRelationship" constrainedElement="_MiN-UJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__LpAwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__L77sGaNEe2Mns8sNTkjCw" name="DispatchLocationOrganizerDispatchLocationLatitudeRelationship" constrainedElement="_MiN-UJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__L77sWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__MD3gGaNEe2Mns8sNTkjCw" name="DispatchLocationOrganizerDispatchLocationLongtudeRelationship" constrainedElement="_MiN-UJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__MD3gWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__vSgYGaNEe2Mns8sNTkjCw" name="DispatchLocationOrganizerTemplateId" constrainedElement="_MiN-UJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__vSgYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.96' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NzmtsJ-BEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yVviAJ-OEeGorI3CPDW2ww" name="ResponseOdometerReadingOrganizer">
      <ownedComment xmi:id="_70pb8Cz-EeO0H9tywllqaQ">
        <body>Collection of odometer readings at various points in an EMS crew's trip</body>
      </ownedComment>
      <ownedRule xmi:id="__MUWMGaNEe2Mns8sNTkjCw" name="ResponseOdometerReadingOrganizerResponseBeginningOdometerReadingRelationship" constrainedElement="_yVviAJ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__MUWMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Mi_sGaNEe2Mns8sNTkjCw" name="ResponseOdometerReadingOrganizerResponseOnSceneOdometerReadingRelationship" constrainedElement="_yVviAJ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Mi_sWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__MwbEGaNEe2Mns8sNTkjCw" name="ResponseOdometerReadingOrganizerResponseDestinationOdometerReadingRelationship" constrainedElement="_yVviAJ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__MxCIGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__OmOIGaNEe2Mns8sNTkjCw" name="ResponseOdometerReadingOrganizerResponseEndingOdometerReadingRelationship" constrainedElement="_yVviAJ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__OmOIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__vc4d2aNEe2Mns8sNTkjCw" name="ResponseOdometerReadingOrganizerTemplateId" constrainedElement="_yVviAJ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__vc4eGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.97' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_yynrQJ-OEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_l_V6IJ-bEeGorI3CPDW2ww" name="ResponseModeToScene">
      <ownedComment xmi:id="_3myUYCz-EeO0H9tywllqaQ">
        <ownedComment xmi:id="_DGeYcC4tEeWuwoPHpwTUeg">
          <body>Indication of whether the response was emergent or non-emergent</body>
        </ownedComment>
        <body>Indication of whether the response was emergent or non-emergent</body>
      </ownedComment>
      <ownedRule xmi:id="__vmCZ2aNEe2Mns8sNTkjCw" name="ResponseModeToSceneTemplateId" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__vmCaGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.182' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__vnQgGaNEe2Mns8sNTkjCw" name="ResponseModeToSceneMoodCode" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__vnQgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__vpswGaNEe2Mns8sNTkjCw" name="ResponseModeToSceneCodeP" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__vpswWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__voeoGaNEe2Mns8sNTkjCw" name="ResponseModeToSceneCode" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__voeoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67482-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__vq64GaNEe2Mns8sNTkjCw" name="ResponseModeToSceneValue" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__vq64WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17177-9' or value.code = 'LA17178-7' or value.code = 'LA17179-5' or value.code = 'LA17180-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__vyPoGaNEe2Mns8sNTkjCw" name="ResponseModeToSceneValueP" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__vyPoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AHXpMGaOEe2Mns8sNTkjCw" name="ResponseModeToSceneResponseModeQualifier" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AHXpMWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(emspcr::ResponseModeQualifier))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_mlNAQJ-bEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_AHXpMmaOEe2Mns8sNTkjCw" name="getResponseModeQualifier" bodyCondition="_AHXpNWaOEe2Mns8sNTkjCw" isQuery="true">
        <ownedRule xmi:id="_AHXpNWaOEe2Mns8sNTkjCw" name="body" constrainedElement="_AHXpMmaOEe2Mns8sNTkjCw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_AHXpNmaOEe2Mns8sNTkjCw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ResponseModeQualifier))->asSequence()->any(true).oclAsType(emspcr::ResponseModeQualifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_AHXpM2aOEe2Mns8sNTkjCw" type="_7PIw4M0VEeSJm6m0rTs9zw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AHXpNGaOEe2Mns8sNTkjCw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_K8JK8JuoEeGzXI65shd6Fw" name="Procedure">
      <ownedComment xmi:id="_B7Mq0Cz8EeO0H9tywllqaQ">
        <body>Procedure performed by EMS unit</body>
      </ownedComment>
      <ownedRule xmi:id="__HaBAGaNEe2Mns8sNTkjCw" name="ProcedureAbandonedProcedureRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__HaBAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__Hrt0GaNEe2Mns8sNTkjCw" name="ProcedurePriorRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__Hrt0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__H7lcGaNEe2Mns8sNTkjCw" name="ProcedureNumberOfAttemptsRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__H7lcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__IRjsGaNEe2Mns8sNTkjCw" name="ProcedureSuccessfulRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__IRjsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__IaGkGaNEe2Mns8sNTkjCw" name="ProcedureComplicationsRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__IaGkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__IzIIGaNEe2Mns8sNTkjCw" name="ProcedurePatientResponseRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__IzIIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__JEN4GaNEe2Mns8sNTkjCw" name="ProcedurePerformer" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__JEN4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.performer->one(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__JVToGaNEe2Mns8sNTkjCw" name="ProcedureAirwayConfirmationRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__JVToWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__U2AEGaNEe2Mns8sNTkjCw" name="ProcedureReasonProcedureNotAttemptedRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__U2AEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__v6LcGaNEe2Mns8sNTkjCw" name="ProcedureTemplateId" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__v6LcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.181' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__v6ygGaNEe2Mns8sNTkjCw" name="ProcedureCode" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__v6ygWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__v8AoGaNEe2Mns8sNTkjCw" name="ProcedureCodeP" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__v8AoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__v9OwGaNEe2Mns8sNTkjCw" name="ProcedureNegationInd" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__v9OwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__v-c4GaNEe2Mns8sNTkjCw" name="ProcedureStatusCode" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__v-c4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__v_D8GaNEe2Mns8sNTkjCw" name="ProcedureEffectiveTime" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__v_D8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__wASEGaNEe2Mns8sNTkjCw" name="ProcedureApproachSiteCode" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__wASEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.approachSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18757-7' or value.code = 'LA18758-5' or value.code = 'LA18790-8' or value.code = 'LA18791-6' or value.code = 'LA18792-4' or value.code = 'LA18793-2' or value.code = 'LA18794-0' or value.code = 'LA18795-7' or value.code = 'LA18796-5' or value.code = 'LA18797-3' or value.code = 'LA18798-1' or value.code = 'LA18799-9' or value.code = 'LA18800-5' or value.code = 'LA18801-3' or value.code = 'LA18802-1' or value.code = 'LA18803-9' or value.code = 'LA18804-7' or value.code = 'LA18805-4' or value.code = 'LA18806-2' or value.code = 'LA18807-0' or value.code = 'LA18808-8' or value.code = 'LA18809-6' or value.code = 'LA18810-4' or value.code = 'LA18811-2' or value.code = 'LA18812-0' or value.code = 'LA18813-8' or value.code = 'LA18814-6' or value.code = 'LA18815-3' or value.code = 'LA18816-1' or value.code = 'LA18817-9' or value.code = 'LA18818-7' or value.code = 'LA18112-5' or value.code = 'LA18113-3' or value.code = 'LA24415-4' or value.code = 'LA24416-2' or value.code = 'LA24417-0' or value.code = 'LA24418-8' or value.code = 'LA24419-6' or value.code = 'LA24420-4' or value.code = 'LA18765-0' or value.code = 'LA18766-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__wIN4GaNEe2Mns8sNTkjCw" name="ProcedureApproachSiteCodeP" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__wIN4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (( not self.approachSiteCode->isEmpty()) )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AIJFQGaOEe2Mns8sNTkjCw" name="ProcedureDeviceParticipation" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AIJFQWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_L0nEAJuoEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_-jiisEbuEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iWVVYIy-EeGnhceUMXltng" name="ExistenceOfKnownDrugAllergyObservation">
      <ownedComment xmi:id="_Zmg2wCU_EeOEaIF_MBGm_A">
        <body>Indicator of whether patient has any allergies or sensitivities to drugs</body>
      </ownedComment>
      <ownedRule xmi:id="__ws1oGaNEe2Mns8sNTkjCw" name="ExistenceOfKnownDrugAllergyObservationTemplateId" constrainedElement="_iWVVYIy-EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ws1oWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.102' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__wuDwGaNEe2Mns8sNTkjCw" name="ExistenceOfKnownDrugAllergyObservationMoodCode" constrainedElement="_iWVVYIy-EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__wuDwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__wwgAGaNEe2Mns8sNTkjCw" name="ExistenceOfKnownDrugAllergyObservationCodeP" constrainedElement="_iWVVYIy-EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__wwgAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__wvR4GaNEe2Mns8sNTkjCw" name="ExistenceOfKnownDrugAllergyObservationCode" constrainedElement="_iWVVYIy-EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__wvR4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67794-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__wxuIGaNEe2Mns8sNTkjCw" name="ExistenceOfKnownDrugAllergyObservationValue" constrainedElement="_iWVVYIy-EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__wxuIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_iumrcIy-EeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_t_nG0IzYEeGnhceUMXltng" name="ExistenceOfKnownNonDrugAllergy">
      <ownedComment xmi:id="_XMDmgCU_EeOEaIF_MBGm_A">
        <body>Indicator of whether patient has any allergies or sensitivities to materials other than drugs</body>
      </ownedComment>
      <ownedRule xmi:id="__wyVMGaNEe2Mns8sNTkjCw" name="ExistenceOfKnownNonDrugAllergyTemplateId" constrainedElement="_t_nG0IzYEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__wyVMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.103' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__wzjUGaNEe2Mns8sNTkjCw" name="ExistenceOfKnownNonDrugAllergyMoodCode" constrainedElement="_t_nG0IzYEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__wzjUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__w1_kGaNEe2Mns8sNTkjCw" name="ExistenceOfKnownNonDrugAllergyCodeP" constrainedElement="_t_nG0IzYEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__w2moGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__w0xcGaNEe2Mns8sNTkjCw" name="ExistenceOfKnownNonDrugAllergyCode" constrainedElement="_t_nG0IzYEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__w0xcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69747-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__w30wGaNEe2Mns8sNTkjCw" name="ExistenceOfKnownNonDrugAllergyValue" constrainedElement="_t_nG0IzYEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__w30wWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_uYpR4IzYEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UleZUIzZEeGnhceUMXltng" name="NonDrugAllergy">
      <ownedComment xmi:id="_UJoXUCU_EeOEaIF_MBGm_A">
        <body>Patient allergies and sensitivities to materials other than drugs</body>
      </ownedComment>
      <ownedRule xmi:id="__w5C4GaNEe2Mns8sNTkjCw" name="NonDrugAllergyTemplateId" constrainedElement="_UleZUIzZEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__w5C4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.104' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__w6RAGaNEe2Mns8sNTkjCw" name="NonDrugAllergyMoodCode" constrainedElement="_UleZUIzZEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__w6RAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__w8GMGaNEe2Mns8sNTkjCw" name="NonDrugAllergyCodeP" constrainedElement="_UleZUIzZEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__w8GMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__w64EGaNEe2Mns8sNTkjCw" name="NonDrugAllergyCode" constrainedElement="_UleZUIzZEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__w64EWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '79151-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__w8tQGaNEe2Mns8sNTkjCw" name="NonDrugAllergyValue" constrainedElement="_UleZUIzZEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__w8tQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__xEpEGaNEe2Mns8sNTkjCw" name="NonDrugAllergyValueP" constrainedElement="_UleZUIzZEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__xEpEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VJHR4IzZEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_E9ekgJoxEeG_FLcaRgAa7g" name="MedicationNotAdministeredReasonObservation">
      <ownedComment xmi:id="_IHxqQCwqEeOaIuM51LdlNw">
        <body>Reason for declining to administer a medication</body>
      </ownedComment>
      <ownedRule xmi:id="__xL90GaNEe2Mns8sNTkjCw" name="MedicationNotAdministeredReasonObservationTemplateId" constrainedElement="_E9ekgJoxEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__xL90WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.105' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__xNL8GaNEe2Mns8sNTkjCw" name="MedicationNotAdministeredReasonObservationMoodCode" constrainedElement="_E9ekgJoxEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__xNL8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__xPBIGaNEe2Mns8sNTkjCw" name="MedicationNotAdministeredReasonObservationCodeP" constrainedElement="_E9ekgJoxEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__xPBIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__xNzAGaNEe2Mns8sNTkjCw" name="MedicationNotAdministeredReasonObservationCode" constrainedElement="_E9ekgJoxEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__xNzAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__xQ2UGaNEe2Mns8sNTkjCw" name="MedicationNotAdministeredReasonObservationValue" constrainedElement="_E9ekgJoxEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__xQ2UWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA15185-4' or value.code = 'LA18921-9' or value.code = 'LA18922-7' or value.code = 'LA18925-0' or value.code = 'LA4216-3' or value.code = 'LA4389-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__xaAQGaNEe2Mns8sNTkjCw" name="MedicationNotAdministeredReasonObservationValueP" constrainedElement="_E9ekgJoxEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__xaAQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_FXzwEJoxEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_j9MusJsmEeGzXI65shd6Fw" name="MedicationResponseObservation">
      <ownedComment xmi:id="_VfFpoCwqEeOaIuM51LdlNw">
        <body>Whether the patients condition improved after medication administration</body>
      </ownedComment>
      <ownedRule xmi:id="__xh8EGaNEe2Mns8sNTkjCw" name="MedicationResponseObservationTemplateId" constrainedElement="_j9MusJsmEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__xh8EWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.106' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__xjKMGaNEe2Mns8sNTkjCw" name="MedicationResponseObservationMoodCode" constrainedElement="_j9MusJsmEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__xjKMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__xlmcGaNEe2Mns8sNTkjCw" name="MedicationResponseObservationCodeP" constrainedElement="_j9MusJsmEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__xlmcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__xkYUGaNEe2Mns8sNTkjCw" name="MedicationResponseObservationCode" constrainedElement="_j9MusJsmEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__xkYUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67540-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__xm0kGaNEe2Mns8sNTkjCw" name="MedicationResponseObservationValue" constrainedElement="_j9MusJsmEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__xm0kWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA65-8' or value.code = 'LA17181-1' or value.code = 'LA11011-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__xuwYGaNEe2Mns8sNTkjCw" name="MedicationResponseObservationValueP" constrainedElement="_j9MusJsmEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__xuwYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_kLrPkJsmEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Qzy_cJsnEeGzXI65shd6Fw" name="MedicationComplicationObservation">
      <ownedComment xmi:id="_F76PoCwqEeOaIuM51LdlNw">
        <body>Complications associated with the administration of a medication</body>
      </ownedComment>
      <ownedRule xmi:id="__x3TQGaNEe2Mns8sNTkjCw" name="MedicationComplicationObservationTemplateId" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__x3TQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.107' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__x4hYGaNEe2Mns8sNTkjCw" name="MedicationComplicationObservationMoodCode" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__x4hYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__x69oGaNEe2Mns8sNTkjCw" name="MedicationComplicationObservationCodeP" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__x69oWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__x5vgGaNEe2Mns8sNTkjCw" name="MedicationComplicationObservationCode" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__x5vgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67541-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__x8LwGaNEe2Mns8sNTkjCw" name="MedicationComplicationObservationValue" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__x8LwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA137-2' or value.code = 'LA15098-9' or value.code = 'LA15099-7' or value.code = 'LA15424-7' or value.code = 'LA17059-9' or value.code = 'LA17392-4' or value.code = 'LA17393-2' or value.code = 'LA17394-0' or value.code = 'LA17396-5' or value.code = 'LA20641-9' or value.code = 'LA17713-1' or value.code = 'LA17714-9' or value.code = 'LA18266-9' or value.code = 'LA18267-7' or value.code = 'LA7418-2' or value.code = 'LA7434-9' or value.code = 'LA7443-0' or value.code = 'LA7444-8' or value.code = 'LA9540-1' or value.code = 'LA9541-9' or value.code = 'LA9548-4' or value.code = 'LA20642-7')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__yEuoGaNEe2Mns8sNTkjCw" name="MedicationComplicationObservationValueP" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__yFVsGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_R0vfEJsnEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_pVW0QJsoEeGzXI65shd6Fw" name="MedicationPriorAdministrationObservation">
      <ownedComment xmi:id="_JEULACwqEeOaIuM51LdlNw">
        <body>Indicator of whether a medication was administered prior to the arrival of the EMS crew</body>
      </ownedComment>
      <ownedRule xmi:id="__yNRgGaNEe2Mns8sNTkjCw" name="MedicationPriorAdministrationObservationTemplateId" constrainedElement="_pVW0QJsoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__yNRgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.108' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__yPGsGaNEe2Mns8sNTkjCw" name="MedicationPriorAdministrationObservationMoodCode" constrainedElement="_pVW0QJsoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__yPGsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__yQ74GaNEe2Mns8sNTkjCw" name="MedicationPriorAdministrationObservationCodeP" constrainedElement="_pVW0QJsoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__yQ74WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__yPtwGaNEe2Mns8sNTkjCw" name="MedicationPriorAdministrationObservationCode" constrainedElement="_pVW0QJsoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__yPtwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67539-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ySKAGaNEe2Mns8sNTkjCw" name="MedicationPriorAdministrationObservationValue" constrainedElement="_pVW0QJsoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ySKAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pxFG8JsoEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_GGe8UJojEeG_FLcaRgAa7g" name="PatientBodyWeight">
      <ownedComment xmi:id="_1YuUsCwqEeOaIuM51LdlNw">
        <body>Patient's body weight</body>
      </ownedComment>
      <ownedRule xmi:id="__yTYIGaNEe2Mns8sNTkjCw" name="PatientBodyWeightTemplateId" constrainedElement="_GGe8UJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__yTYIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.178' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__yUmQGaNEe2Mns8sNTkjCw" name="PatientBodyWeightMoodCode" constrainedElement="_GGe8UJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__yUmQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__yXCgGaNEe2Mns8sNTkjCw" name="PatientBodyWeightCodeP" constrainedElement="_GGe8UJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__yXCgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__yV0YGaNEe2Mns8sNTkjCw" name="PatientBodyWeightCode" constrainedElement="_GGe8UJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__yV0YWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '8335-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__yYQoGaNEe2Mns8sNTkjCw" name="PatientBodyWeightEffectiveTime" constrainedElement="_GGe8UJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__yY3sGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__yaF0GaNEe2Mns8sNTkjCw" name="PatientBodyWeightValue" constrainedElement="_GGe8UJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__yaF0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_GhZ9wJojEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_whTHIJojEeG_FLcaRgAa7g" name="LengthBasedPatientBodyWeightClass">
      <ownedComment xmi:id="_CBf6cCwoEeOaIuM51LdlNw">
        <body>Classification of patient weight based on length</body>
      </ownedComment>
      <ownedRule xmi:id="__yas4GaNEe2Mns8sNTkjCw" name="LengthBasedPatientBodyWeightClassTemplateId" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__yas4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.110' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__yciEGaNEe2Mns8sNTkjCw" name="LengthBasedPatientBodyWeightClassMoodCode" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__yciEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ye-UGaNEe2Mns8sNTkjCw" name="LengthBasedPatientBodyWeightClassCodeP" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ye-UWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__ydJIGaNEe2Mns8sNTkjCw" name="LengthBasedPatientBodyWeightClassCode" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__ydJIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67670-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__yflYGaNEe2Mns8sNTkjCw" name="LengthBasedPatientBodyWeightClassValue" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__yflYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA15553-3' or value.code = 'LA15554-1' or value.code = 'LA15555-8' or value.code = 'LA17192-8' or value.code = 'LA17193-6' or value.code = 'LA17194-4' or value.code = 'LA17195-1' or value.code = 'LA17196-9' or value.code = 'LA4457-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__yovUGaNEe2Mns8sNTkjCw" name="LengthBasedPatientBodyWeightClassValueP" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__yovUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_xRpmAJojEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_QU_s0JolEeG_FLcaRgAa7g" name="FaceAssessment">
      <ownedComment xmi:id="_-I2VQCwkEeOaIuM51LdlNw">
        <body>Qualitative assessment of condition of patient's face</body>
      </ownedComment>
      <ownedRule xmi:id="__yxSMGaNEe2Mns8sNTkjCw" name="FaceAssessmentTemplateId" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__yx5QGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.112' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__yzHYGaNEe2Mns8sNTkjCw" name="FaceAssessmentMoodCode" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__yzHYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__y1joGaNEe2Mns8sNTkjCw" name="FaceAssessmentCodeP" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__y1joWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__y0VgGaNEe2Mns8sNTkjCw" name="FaceAssessmentCode" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__y0VgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67526-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__y2xwGaNEe2Mns8sNTkjCw" name="FaceAssessmentEffectiveTime" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__y2xwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__y3Y0GaNEe2Mns8sNTkjCw" name="FaceAssessmentValue" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__y3Y0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17211-6' or value.code = 'LA17213-2' or value.code = 'LA17214-0' or value.code = 'LA17216-5' or value.code = 'LA17212-4' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA6626-1' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4' or value.code = 'LA7423-2' or value.code = 'LA17229-8' or value.code = 'LA22440-4' or value.code = 'LA17709-9')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__y_7sGaNEe2Mns8sNTkjCw" name="FaceAssessmentValueP" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__y_7sWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_QvxkUJolEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_6VcsUJokEeG_FLcaRgAa7g" name="HeadAssessment">
      <ownedComment xmi:id="__XM-wCwkEeOaIuM51LdlNw">
        <body>Qualitative assessment of condition of patient's head</body>
      </ownedComment>
      <ownedRule xmi:id="__zH3gGaNEe2Mns8sNTkjCw" name="HeadAssessmentTemplateId" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__zH3gWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.113' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__zJFoGaNEe2Mns8sNTkjCw" name="HeadAssessmentMoodCode" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__zJFoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__zLh4GaNEe2Mns8sNTkjCw" name="HeadAssessmentCodeP" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__zLh4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__zKTwGaNEe2Mns8sNTkjCw" name="HeadAssessmentCode" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__zKTwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67525-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__zMwAGaNEe2Mns8sNTkjCw" name="HeadAssessmentEffectiveTime" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__zMwAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__zN-IGaNEe2Mns8sNTkjCw" name="HeadAssessmentValue" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__zN-IWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17210-8' or value.code = 'LA17211-6' or value.code = 'LA17213-2' or value.code = 'LA17214-0' or value.code = 'LA17212-4' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA6626-1' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4' or value.code = 'LA7423-2' or value.code = 'LA17229-8' or value.code = 'LA22440-4' or value.code = 'LA17709-9')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_6p1n8JokEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oE3bcJolEeG_FLcaRgAa7g" name="NeckAssessment">
      <ownedComment xmi:id="_Bw7PMCwlEeOaIuM51LdlNw">
        <body>Qualitative assessment of condition of patient's neck</body>
      </ownedComment>
      <ownedRule xmi:id="__zXIEGaNEe2Mns8sNTkjCw" name="NeckAssessmentTemplateId" constrainedElement="_oE3bcJolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__zXIEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.114' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__zYWMGaNEe2Mns8sNTkjCw" name="NeckAssessmentMoodCode" constrainedElement="_oE3bcJolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__zYWMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__zaycGaNEe2Mns8sNTkjCw" name="NeckAssessmentCodeP" constrainedElement="_oE3bcJolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__zaycWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__zZkUGaNEe2Mns8sNTkjCw" name="NeckAssessmentCode" constrainedElement="_oE3bcJolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__zZkUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67527-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__zcAkGaNEe2Mns8sNTkjCw" name="NeckAssessmentEffectiveTime" constrainedElement="_oE3bcJolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__zcAkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__zdOsGaNEe2Mns8sNTkjCw" name="NeckAssessmentValue" constrainedElement="_oE3bcJolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__zdOsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17210-8' or value.code = 'LA17214-0' or value.code = 'LA17217-3' or value.code = 'LA17219-9' or value.code = 'LA17212-4' or value.code = 'LA17612-5' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18226-3' or value.code = 'LA18227-1' or value.code = 'LA18228-9' or value.code = 'LA6626-1' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4' or value.code = 'LA17229-8' or value.code = 'LA22440-4' or value.code = 'LA7423-2' or value.code = 'LA17709-9' or value.code = 'LA18225-5')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__zlxkGaNEe2Mns8sNTkjCw" name="NeckAssessmentValueP" constrainedElement="_oE3bcJolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__zlxkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_orGVAJolEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Zjp_UJomEeG_FLcaRgAa7g" name="HeartAssessment">
      <ownedComment xmi:id="_AYJeYCwlEeOaIuM51LdlNw">
        <body>Qualitative assessment of condition of patient's heart</body>
      </ownedComment>
      <ownedRule xmi:id="__zuUcGaNEe2Mns8sNTkjCw" name="HeartAssessmentTemplateId" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__zuUcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.116' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__zwJoGaNEe2Mns8sNTkjCw" name="HeartAssessmentMoodCode" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__zwJoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__zx-0GaNEe2Mns8sNTkjCw" name="HeartAssessmentCodeP" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__zx-0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__zwwsGaNEe2Mns8sNTkjCw" name="HeartAssessmentCode" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__zwwsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67529-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__zz0AGaNEe2Mns8sNTkjCw" name="HeartAssessmentEffectiveTime" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__zz0AWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__z0bEGaNEe2Mns8sNTkjCw" name="HeartAssessmentValue" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__z0bEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17239-7' or value.code = 'LA17240-5' or value.code = 'LA17241-3' or value.code = 'LA18241-2' or value.code = 'LA18242-0' or value.code = 'LA18243-8' or value.code = 'LA18244-6' or value.code = 'LA18245-3' or value.code = 'LA18246-1' or value.code = 'LA6626-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__z9lAGaNEe2Mns8sNTkjCw" name="HeartAssessmentValueP" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__z9lAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Z47rwJomEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_WMI_AJooEeG_FLcaRgAa7g" name="AbdomenAssessment">
      <ownedComment xmi:id="_a0PWwCSSEeO2bfzIdJE0yg">
        <body>Qualitative assessment of condition of patient's abdomen</body>
      </ownedComment>
      <ownedRule xmi:id="__0E5wGaNEe2Mns8sNTkjCw" name="AbdomenAssessmentTemplateId" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__0E5wWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.117' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__0GH4GaNEe2Mns8sNTkjCw" name="AbdomenAssessmentMoodCode" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__0GH4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__0Gu8GaNEe2Mns8sNTkjCw" name="AbdomenAssessmentCode" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__0Gu8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67530-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__0H9EGaNEe2Mns8sNTkjCw" name="AbdomenAssessmentEffectiveTime" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__0H9EWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__0JLMGaNEe2Mns8sNTkjCw" name="AbdomenAssessmentValue" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__0JLMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17213-2' or value.code = 'LA17214-0' or value.code = 'LA17242-1' or value.code = 'LA17243-9' or value.code = 'LA17212-4' or value.code = 'LA17246-2' or value.code = 'LA17247-0' or value.code = 'LA17709-9' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18226-3' or value.code = 'LA18247-9' or value.code = 'LA18248-7' or value.code = 'LA6626-1' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4' or value.code = 'LA23814-9' or value.code = 'LA23815-6' or value.code = 'LA17229-8' or value.code = 'LA22440-4' or value.code = 'LA7423-2' or value.code = 'LA18225-5')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__0Qf8GaNEe2Mns8sNTkjCw" name="AbdomenAssessmentValueP" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__0Qf8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__0YbwGaNEe2Mns8sNTkjCw" name="AbdomenAssessmentTargetSiteCode" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__0YbwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA12698-9' or value.code = 'LA18721-3' or value.code = 'LA18722-1' or value.code = 'LA18723-9' or value.code = 'LA18724-7' or value.code = 'LA18725-4' or value.code = 'LA23813-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__0ja4GaNEe2Mns8sNTkjCw" name="AbdomenAssessmentTargetSiteCodeP" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__0ja4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (( not self.targetSiteCode->isEmpty()) )</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_WiwIMJooEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_O7rMoJopEeG_FLcaRgAa7g" name="PelvicAndGenitourinaryAssessment">
      <ownedComment xmi:id="_Gas2sCwlEeOaIuM51LdlNw">
        <body>Qualitative assessment of condition of patient's pelvic and genitourinary region</body>
      </ownedComment>
      <ownedRule xmi:id="__0sk0GaNEe2Mns8sNTkjCw" name="PelvicAndGenitourinaryAssessmentTemplateId" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__0sk0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.118' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__0uaAGaNEe2Mns8sNTkjCw" name="PelvicAndGenitourinaryAssessmentMoodCode" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__0uaAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__0w2QGaNEe2Mns8sNTkjCw" name="PelvicAndGenitourinaryAssessmentCodeP" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__0w2QWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__0voIGaNEe2Mns8sNTkjCw" name="PelvicAndGenitourinaryAssessmentCode" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__0voIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67531-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__0yEYGaNEe2Mns8sNTkjCw" name="PelvicAndGenitourinaryAssessmentEffectiveTime" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__0yEYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__0zSgGaNEe2Mns8sNTkjCw" name="PelvicAndGenitourinaryAssessmentValue" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__0zSgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17213-2' or value.code = 'LA17214-0' or value.code = 'LA17212-4' or value.code = 'LA17248-8' or value.code = 'LA17249-6' or value.code = 'LA17250-4' or value.code = 'LA17251-2' or value.code = 'LA17252-0' or value.code = 'LA17253-8' or value.code = 'LA17254-6' or value.code = 'LA17255-3' or value.code = 'LA17709-9' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA6626-1' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4' or value.code = 'LA17229-8' or value.code = 'LA7423-2' or value.code = 'LA14123-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__08ccGaNEe2Mns8sNTkjCw" name="PelvicAndGenitourinaryAssessmentValueP" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__09DgGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PRiu8JopEeG_FLcaRgAa7g">
        <ownedComment xmi:id="_UFXDQJopEeG_FLcaRgAa7g">
          <body>NEMSIS Trace: eExam.12</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_pgmc0JopEeG_FLcaRgAa7g" name="BackAndSpineAssessment">
      <ownedComment xmi:id="_E0VWMCUcEeOPwcQY2yBpiA">
        <body>Qualitative assessment of condition of patient's back and spine</body>
      </ownedComment>
      <ownedRule xmi:id="__1FmYGaNEe2Mns8sNTkjCw" name="BackAndSpineAssessmentTemplateId" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__1GNcGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.119' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__1HbkGaNEe2Mns8sNTkjCw" name="BackAndSpineAssessmentMoodCode" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__1HbkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__1J30GaNEe2Mns8sNTkjCw" name="BackAndSpineAssessmentCodeP" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__1J30WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__1IpsGaNEe2Mns8sNTkjCw" name="BackAndSpineAssessmentCode" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__1IpsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67532-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__1LF8GaNEe2Mns8sNTkjCw" name="BackAndSpineAssessmentEffectiveTime" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__1LF8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__1MUEGaNEe2Mns8sNTkjCw" name="BackAndSpineAssessmentValue" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__1MUEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17214-0' or value.code = 'LA17212-4' or value.code = 'LA17256-1' or value.code = 'LA17257-9' or value.code = 'LA17258-7' or value.code = 'LA17259-5' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA6626-1' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4' or value.code = 'LA17709-9' or value.code = 'LA17229-8' or value.code = 'LA22440-4' or value.code = 'LA7423-2' or value.code = 'LA17212-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__1WFEGaNEe2Mns8sNTkjCw" name="BackAndSpineAssessmentValueP" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__1WFEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__1fPAGaNEe2Mns8sNTkjCw" name="BackAndSpineAssessmentTargetSiteCode" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__1fPAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18726-2' or value.code = 'LA18727-0' or value.code = 'LA18728-8' or value.code = 'LA18729-6' or value.code = 'LA18730-4' or value.code = 'LA18731-2' or value.code = 'LA18732-0' or value.code = 'LA18733-8' or value.code = 'LA18734-6' or value.code = 'LA18735-3' or value.code = 'LA18736-1' or value.code = 'LA18737-9' or value.code = 'LA18738-7')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__1pAAGaNEe2Mns8sNTkjCw" name="BackAndSpineAssessmentTargetSiteCodeP" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__1pAAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (( not self.targetSiteCode->isEmpty()) )</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_qFpDkJopEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_NK7yUJoqEeG_FLcaRgAa7g" name="ExtremitiesAssessment">
      <ownedComment xmi:id="_81IDkCwkEeOaIuM51LdlNw">
        <body>Qualitative assessment of condition of patient's extremities</body>
      </ownedComment>
      <ownedRule xmi:id="__1yJ8GaNEe2Mns8sNTkjCw" name="ExtremitiesAssessmentTemplateId" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__1yJ8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.120' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__1zYEGaNEe2Mns8sNTkjCw" name="ExtremitiesAssessmentMoodCode" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__1zYEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__110UGaNEe2Mns8sNTkjCw" name="ExtremitiesAssessmentCodeP" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__110UWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__10mMGaNEe2Mns8sNTkjCw" name="ExtremitiesAssessmentCode" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__10mMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67533-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__13pgGaNEe2Mns8sNTkjCw" name="ExtremitiesAssessmentEffectiveTime" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__13pgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__14QkGaNEe2Mns8sNTkjCw" name="ExtremitiesAssessmentValue" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__14QkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17214-0' or value.code = 'LA17229-8' or value.code = 'LA17260-3' or value.code = 'LA17261-1' or value.code = 'LA17262-9' or value.code = 'LA17263-7' or value.code = 'LA17264-5' or value.code = 'LA17265-2' or value.code = 'LA17266-0' or value.code = 'LA17267-8' or value.code = 'LA17268-6' or value.code = 'LA17269-4' or value.code = 'LA17270-2' or value.code = 'LA17271-0' or value.code = 'LA17272-8' or value.code = 'LA17273-6' or value.code = 'LA17274-4' or value.code = 'LA17344-5' or value.code = 'LA17709-9' or value.code = 'LA18220-6' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA18249-5' or value.code = 'LA6626-1' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4' or value.code = 'LA18221-4' or value.code = 'LA23816-4' or value.code = 'LA7423-2' or value.code = 'LA17212-4' or value.code = 'LA22440-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__2CBkGaNEe2Mns8sNTkjCw" name="ExtremitiesAssessmentValueP" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__2CBkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__2LLgGaNEe2Mns8sNTkjCw" name="ExtremitiesAssessmentTargetSiteCode" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__2LLgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18739-5' or value.code = 'LA18740-3' or value.code = 'LA18741-1' or value.code = 'LA18742-9' or value.code = 'LA18743-7' or value.code = 'LA18744-5' or value.code = 'LA18745-2' or value.code = 'LA18746-0' or value.code = 'LA18747-8' or value.code = 'LA18748-6' or value.code = 'LA18749-4' or value.code = 'LA18750-2' or value.code = 'LA18751-0' or value.code = 'LA18752-8' or value.code = 'LA18753-6' or value.code = 'LA18754-4' or value.code = 'LA18755-1' or value.code = 'LA18756-9' or value.code = 'LA18757-7' or value.code = 'LA18758-5' or value.code = 'LA18759-3' or value.code = 'LA18760-1' or value.code = 'LA18761-9' or value.code = 'LA18762-7' or value.code = 'LA18763-5' or value.code = 'LA18764-3' or value.code = 'LA18765-0' or value.code = 'LA18766-8' or value.code = 'LA18767-6' or value.code = 'LA18768-4' or value.code = 'LA18769-2' or value.code = 'LA18770-0' or value.code = 'LA18771-8' or value.code = 'LA18772-6' or value.code = 'LA18773-4' or value.code = 'LA18774-2' or value.code = 'LA18775-9' or value.code = 'LA18776-7' or value.code = 'LA18777-5' or value.code = 'LA18778-3' or value.code = 'LA18779-1' or value.code = 'LA18780-9' or value.code = 'LA18781-7' or value.code = 'LA18782-5' or value.code = 'LA18783-3' or value.code = 'LA18784-1' or value.code = 'LA18785-8' or value.code = 'LA18786-6' or value.code = 'LA32940-1' or value.code = 'LA32939-3' or value.code = 'LA32941-9' or value.code = 'LA32942-7' or value.code = 'LA32938-5' or value.code = 'LA32943-5' or value.code = 'LA32944-3' or value.code = 'LA32945-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__2U8gGaNEe2Mns8sNTkjCw" name="ExtremitiesAssessmentTargetSiteCodeP" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__2U8gWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (( not self.targetSiteCode->isEmpty()) )</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Nd-qIJoqEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rsLuIJoqEeG_FLcaRgAa7g" name="EyeAssessment">
      <ownedComment xmi:id="_9gdfkCwkEeOaIuM51LdlNw">
        <body>Qualitative assessment of condition of patient's eyes</body>
      </ownedComment>
      <ownedRule xmi:id="__2eGcGaNEe2Mns8sNTkjCw" name="EyeAssessmentTemplateId" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__2eGcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.121' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__2f7oGaNEe2Mns8sNTkjCw" name="EyeAssessmentMoodCode" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__2f7oWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__2i-8GaNEe2Mns8sNTkjCw" name="EyeAssessmentCodeP" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__2i-8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__2hw0GaNEe2Mns8sNTkjCw" name="EyeAssessmentCode" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__2hw0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67534-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__2kNEGaNEe2Mns8sNTkjCw" name="EyeAssessmentEffectiveTime" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__2kNEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__2lbMGaNEe2Mns8sNTkjCw" name="EyeAssessmentValue" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__2lbMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA14698-7' or value.code = 'LA15255-5' or value.code = 'LA15256-3' or value.code = 'LA17275-1' or value.code = 'LA17276-9' or value.code = 'LA17277-7' or value.code = 'LA17278-5' or value.code = 'LA17279-3' or value.code = 'LA17280-1' or value.code = 'LA17281-9' or value.code = 'LA17282-7' or value.code = 'LA17283-5' or value.code = 'LA17284-3' or value.code = 'LA17285-0' or value.code = 'LA17710-7' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA18250-3' or value.code = 'LA18251-1' or value.code = 'LA18253-7' or value.code = 'LA18254-5' or value.code = 'LA18255-2' or value.code = 'LA18256-0' or value.code = 'LA18257-8' or value.code = 'LA18258-6' or value.code = 'LA7423-2' or value.code = 'LA18252-9' or value.code = 'LA17283-5' or value.code = 'LA17214-0' or value.code = 'LA22440-4' or value.code = 'LA19576-0' or value.code = 'LA32946-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__2vMMGaNEe2Mns8sNTkjCw" name="EyeAssessmentValueP" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__2vMMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__24WIGaNEe2Mns8sNTkjCw" name="EyeAssessmentTargetSiteCode" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__24WIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18787-4' or value.code = 'LA18788-2' or value.code = 'LA18789-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__3FxgGaNEe2Mns8sNTkjCw" name="EyeAssessmentTargetSiteCodeP" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__3FxgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (( not self.targetSiteCode->isEmpty()) )</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_r7ptgJoqEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EyfEMJorEeG_FLcaRgAa7g" name="MentalStatusAssessment">
      <ownedComment xmi:id="_b43PICwqEeOaIuM51LdlNw">
        <body>Qualitative assessment of condition of patient's mental status</body>
      </ownedComment>
      <ownedRule xmi:id="__3OUYGaNEe2Mns8sNTkjCw" name="MentalStatusAssessmentTemplateId" constrainedElement="_EyfEMJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__3OUYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.122' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__3PigGaNEe2Mns8sNTkjCw" name="MentalStatusAssessmentMoodCode" constrainedElement="_EyfEMJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__3PigWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__3R-wGaNEe2Mns8sNTkjCw" name="MentalStatusAssessmentCodeP" constrainedElement="_EyfEMJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__3R-wWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__3QwoGaNEe2Mns8sNTkjCw" name="MentalStatusAssessmentCode" constrainedElement="_EyfEMJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__3QwoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67535-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__3TM4GaNEe2Mns8sNTkjCw" name="MentalStatusAssessmentEffectiveTime" constrainedElement="_EyfEMJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__3TM4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__3UbAGaNEe2Mns8sNTkjCw" name="MentalStatusAssessmentValue" constrainedElement="_EyfEMJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__3UbAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17286-8' or value.code = 'LA17287-6' or value.code = 'LA17288-4' or value.code = 'LA17289-2' or value.code = 'LA17290-0' or value.code = 'LA18259-4' or value.code = 'LA6560-2' or value.code = 'LA7438-0' or value.code = 'LA9343-0' or value.code = 'LA6150-2' or value.code = 'LA23818-0' or value.code = 'LA17666-1' or value.code = 'LA17313-0' or value.code = 'LA32948-4' or value.code = 'LA17678-6' or value.code = 'LA32951-8' or value.code = 'LA17307-2' or value.code = 'LA32953-4' or value.code = 'LA32950-0' or value.code = 'LA32956-7' or value.code = 'LA17317-1' or value.code = 'LA32955-9' or value.code = 'LA17668-7')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__3dk8GaNEe2Mns8sNTkjCw" name="MentalStatusAssessmentValueP" constrainedElement="_EyfEMJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__3dk8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_FC2bcJorEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_A65pUHwIEeGW3cDolvqrTA" name="CardiacArrestTiming">
      <ownedComment xmi:id="_4tG-UCUeEeOPwcQY2yBpiA">
        <body>Whether a cardiac arrest occurred before or after arrival of EMS crew</body>
      </ownedComment>
      <ownedRule xmi:id="__3mH0GaNEe2Mns8sNTkjCw" name="CardiacArrestTimingTemplateId" constrainedElement="_A65pUHwIEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__3mH0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.123' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__3nV8GaNEe2Mns8sNTkjCw" name="CardiacArrestTimingMoodCode" constrainedElement="_A65pUHwIEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__3nV8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__3pLIGaNEe2Mns8sNTkjCw" name="CardiacArrestTimingCode" constrainedElement="_A65pUHwIEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__3pLIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67502-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__3rAUGaNEe2Mns8sNTkjCw" name="CardiacArrestTimingValue" constrainedElement="_A65pUHwIEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__3rAUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17054-0' or value.code = 'LA17055-7')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_C6NOoHwIEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_tcPw4HwKEeGW3cDolvqrTA" name="CardiacArrestCause">
      <ownedComment xmi:id="_UIoUwCUeEeOPwcQY2yBpiA">
        <body>Kind of event or condition causing cardiac arrest</body>
      </ownedComment>
      <ownedRule xmi:id="__30KQGaNEe2Mns8sNTkjCw" name="CardiacArrestCauseTemplateId" constrainedElement="_tcPw4HwKEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__30KQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.124' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__31YYGaNEe2Mns8sNTkjCw" name="CardiacArrestCauseMoodCode" constrainedElement="_tcPw4HwKEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__31_cGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__33NkGaNEe2Mns8sNTkjCw" name="CardiacArrestCauseCode" constrainedElement="_tcPw4HwKEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__33NkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67503-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__34bsGaNEe2Mns8sNTkjCw" name="CardiacArrestCauseValue" constrainedElement="_tcPw4HwKEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__34bsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17056-5' or value.code = 'LA17058-1' or value.code = 'LA17059-9' or value.code = 'LA17977-2' or value.code = 'LA17978-0' or value.code = 'LA17979-8' or value.code = 'LA17980-6' or value.code = 'LA9539-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__4A-kGaNEe2Mns8sNTkjCw" name="CardiacArrestCauseValueP" constrainedElement="_tcPw4HwKEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__4A-kWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_zBCPIHwKEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Ia0ocHwREeGW3cDolvqrTA" name="ArrestRhythm">
      <ownedComment xmi:id="_pVHA8CUbEeOPwcQY2yBpiA">
        <body>First measurement of cardiac rhythm during or shortly after cardiac arrest</body>
      </ownedComment>
      <ownedRule xmi:id="__4JhcGaNEe2Mns8sNTkjCw" name="ArrestRhythmTemplateId" constrainedElement="_Ia0ocHwREeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__4JhcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.127' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__4KvkGaNEe2Mns8sNTkjCw" name="ArrestRhythmMoodCode" constrainedElement="_Ia0ocHwREeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__4KvkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__4L9sGaNEe2Mns8sNTkjCw" name="ArrestRhythmCode" constrainedElement="_Ia0ocHwREeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__4L9sWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67512-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__4Ny4GaNEe2Mns8sNTkjCw" name="ArrestRhythmValue" constrainedElement="_Ia0ocHwREeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__4Ny4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17068-0' or value.code = 'LA17070-6' or value.code = 'LA17071-4' or value.code = 'LA17072-2' or value.code = 'LA17073-0' or value.code = 'LA17074-8')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KdqC4HwREeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gnLCQHwSEeGW3cDolvqrTA" name="ReturnOfSpontaneousCirculation">
      <ownedComment xmi:id="_EJoJ4Cz_EeO0H9tywllqaQ">
        <body>Indication whether or not there was any return of spontaneous circulation, and if so, when</body>
      </ownedComment>
      <ownedRule xmi:id="__4Xj4GaNEe2Mns8sNTkjCw" name="ReturnOfSpontaneousCirculationTemplateId" constrainedElement="_gnLCQHwSEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__4YK8GaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.128' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__4ZZEGaNEe2Mns8sNTkjCw" name="ReturnOfSpontaneousCirculationMoodCode" constrainedElement="_gnLCQHwSEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__4ZZEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__4b1UGaNEe2Mns8sNTkjCw" name="ReturnOfSpontaneousCirculationCodeP" constrainedElement="_gnLCQHwSEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__4b1UWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__4anMGaNEe2Mns8sNTkjCw" name="ReturnOfSpontaneousCirculationCode" constrainedElement="_gnLCQHwSEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__4anMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '88670-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__4dDcGaNEe2Mns8sNTkjCw" name="ReturnOfSpontaneousCirculationValue" constrainedElement="_gnLCQHwSEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__4dDcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17075-5' or value.code = 'LA17076-3' or value.code = 'LA17077-1' or value.code = 'LA32-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__4mNYGaNEe2Mns8sNTkjCw" name="ReturnOfSpontaneousCirculationValueP" constrainedElement="_gnLCQHwSEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__4mNYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_i9zicHwSEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_khXxgHwTEeGW3cDolvqrTA" name="DestinationRhythm">
      <ownedComment xmi:id="_HnjScCUhEeOPwcQY2yBpiA">
        <body>Patient's cardiac rhythm classification at destination</body>
      </ownedComment>
      <ownedRule xmi:id="__4uwQGaNEe2Mns8sNTkjCw" name="DestinationRhythmTemplateId" constrainedElement="_khXxgHwTEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__4uwQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.129' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__4wlcGaNEe2Mns8sNTkjCw" name="DestinationRhythmMoodCode" constrainedElement="_khXxgHwTEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__4wlcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__4xMgGaNEe2Mns8sNTkjCw" name="DestinationRhythmCode" constrainedElement="_khXxgHwTEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__4xMgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67519-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__4zowGaNEe2Mns8sNTkjCw" name="DestinationRhythmValue" constrainedElement="_khXxgHwTEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__4zowWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA12904-1' or value.code = 'LA17059-9' or value.code = 'LA17068-0' or value.code = 'LA17070-6' or value.code = 'LA17071-4' or value.code = 'LA17072-2' or value.code = 'LA17073-0' or value.code = 'LA17074-8' or value.code = 'LA17083-9' or value.code = 'LA17084-7' or value.code = 'LA17085-4' or value.code = 'LA17086-2' or value.code = 'LA17087-0' or value.code = 'LA17088-8' or value.code = 'LA17089-6' or value.code = 'LA17090-4' or value.code = 'LA17091-2' or value.code = 'LA17093-8' or value.code = 'LA17094-6' or value.code = 'LA17095-3' or value.code = 'LA17096-1' or value.code = 'LA17097-9' or value.code = 'LA17394-0' or value.code = 'LA17099-5' or value.code = 'LA17100-1' or value.code = 'LA17101-9' or value.code = 'LA17703-2' or value.code = 'LA17704-0' or value.code = 'LA17705-7' or value.code = 'LA17706-5' or value.code = 'LA17708-1' or value.code = 'LA17718-0' or value.code = 'LA18205-7' or value.code = 'LA18206-5' or value.code = 'LA18207-3' or value.code = 'LA18208-1' or value.code = 'LA32915-3' or value.code = 'LA32916-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__49ZwGaNEe2Mns8sNTkjCw" name="DestinationRhythmValueP" constrainedElement="_khXxgHwTEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__49ZwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_mh2bgHwTEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_edpw0JuqEeGzXI65shd6Fw" name="AbandonedProcedureReasonObservation">
      <ownedComment xmi:id="_PA_LICSSEeO2bfzIdJE0yg">
        <body>An explanation of why efforts to conduct a procedure were abandoned</body>
      </ownedComment>
      <ownedRule xmi:id="__5F8oGaNEe2Mns8sNTkjCw" name="AbandonedProcedureReasonObservationTemplateId" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__5F8oWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.130' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__5Hx0GaNEe2Mns8sNTkjCw" name="AbandonedProcedureReasonObservationMoodCode" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__5Hx0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__5JnAGaNEe2Mns8sNTkjCw" name="AbandonedProcedureReasonObservationCodeP" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__5JnAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__5IY4GaNEe2Mns8sNTkjCw" name="AbandonedProcedureReasonObservationCode" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__5IY4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__5K1IGaNEe2Mns8sNTkjCw" name="AbandonedProcedureReasonObservationValue" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__5K1IWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17078-9' or value.code = 'LA17079-7' or value.code = 'LA17080-5' or value.code = 'LA17081-3' or value.code = 'LA17082-1' or value.code = 'LA18204-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__5T_EGaNEe2Mns8sNTkjCw" name="AbandonedProcedureReasonObservationValueP" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__5T_EWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_fIxKYJuqEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0IBaIJ0sEeGmCMENP40rhA" name="ProcedurePriorIndicator">
      <ownedComment xmi:id="_P4_bYCz8EeO0H9tywllqaQ">
        <body>Indication of whether a procedure was provided prior to the documenting EMS unit's care</body>
      </ownedComment>
      <ownedRule xmi:id="__5hacGaNEe2Mns8sNTkjCw" name="ProcedurePriorIndicatorTemplateId" constrainedElement="_0IBaIJ0sEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__5hacWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.131' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__5iokGaNEe2Mns8sNTkjCw" name="ProcedurePriorIndicatorMoodCode" constrainedElement="_0IBaIJ0sEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__5iokWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__5lE0GaNEe2Mns8sNTkjCw" name="ProcedurePriorIndicatorCodeP" constrainedElement="_0IBaIJ0sEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__5lE0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__5j2sGaNEe2Mns8sNTkjCw" name="ProcedurePriorIndicatorCode" constrainedElement="_0IBaIJ0sEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__5j2sWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67542-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__5mS8GaNEe2Mns8sNTkjCw" name="ProcedurePriorIndicatorValue" constrainedElement="_0IBaIJ0sEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__5mS8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_0ln8IJ0sEeGmCMENP40rhA">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iZg7kJ0tEeGmCMENP40rhA" name="ProcedureNumberOfAttemptsObservation">
      <ownedComment xmi:id="_LGWLwCz8EeO0H9tywllqaQ">
        <body>How many times the EMS unit attempted a procedure</body>
      </ownedComment>
      <ownedRule xmi:id="__5nhEGaNEe2Mns8sNTkjCw" name="ProcedureNumberOfAttemptsObservationTemplateId" constrainedElement="_iZg7kJ0tEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__5nhEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.132' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__5ovMGaNEe2Mns8sNTkjCw" name="ProcedureNumberOfAttemptsObservationMoodCode" constrainedElement="_iZg7kJ0tEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__5ovMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__5rLcGaNEe2Mns8sNTkjCw" name="ProcedureNumberOfAttemptsObservationCodeP" constrainedElement="_iZg7kJ0tEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__5rLcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__5p9UGaNEe2Mns8sNTkjCw" name="ProcedureNumberOfAttemptsObservationCode" constrainedElement="_iZg7kJ0tEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__5p9UWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67543-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__5tAoGaNEe2Mns8sNTkjCw" name="ProcedureNumberOfAttemptsObservationValue" constrainedElement="_iZg7kJ0tEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__5tAoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_jCIawJ0tEeGmCMENP40rhA">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_D32TkJ0uEeGmCMENP40rhA" name="ProcedureSuccessfulObservation">
      <ownedComment xmi:id="_XB1GUCz8EeO0H9tywllqaQ">
        <body>Indication of whether a procedure was successful</body>
      </ownedComment>
      <ownedRule xmi:id="__5tnsGaNEe2Mns8sNTkjCw" name="ProcedureSuccessfulObservationTemplateId" constrainedElement="_D32TkJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__5tnsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.133' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__5vc4GaNEe2Mns8sNTkjCw" name="ProcedureSuccessfulObservationMoodCode" constrainedElement="_D32TkJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__5vc4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__5zHQGaNEe2Mns8sNTkjCw" name="ProcedureSuccessfulObservationCodeP" constrainedElement="_D32TkJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__5zuUGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__5x5IGaNEe2Mns8sNTkjCw" name="ProcedureSuccessfulObservationCode" constrainedElement="_D32TkJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__5x5IWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67544-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__508cGaNEe2Mns8sNTkjCw" name="ProcedureSuccessfulObservationValue" constrainedElement="_D32TkJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__508cWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EUkEwJ0uEeGmCMENP40rhA">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lVl1sJ0uEeGmCMENP40rhA" name="ProcedureComplicationsObservation">
      <ownedComment xmi:id="_JTGFcCz8EeO0H9tywllqaQ">
        <body>Complications associated with a procedure performed by the EMS unit</body>
      </ownedComment>
      <ownedRule xmi:id="__51jgGaNEe2Mns8sNTkjCw" name="ProcedureComplicationsObservationTemplateId" constrainedElement="_lVl1sJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__51jgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.179' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__52xoGaNEe2Mns8sNTkjCw" name="ProcedureComplicationsObservationMoodCode" constrainedElement="_lVl1sJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__52xoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__54m0GaNEe2Mns8sNTkjCw" name="ProcedureComplicationsObservationCodeP" constrainedElement="_lVl1sJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__54m0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__53_wGaNEe2Mns8sNTkjCw" name="ProcedureComplicationsObservationCode" constrainedElement="_lVl1sJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__53_wWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67545-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__5508GaNEe2Mns8sNTkjCw" name="ProcedureComplicationsObservationValue" constrainedElement="_lVl1sJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__5508WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA137-2' or value.code = 'LA15098-9' or value.code = 'LA15099-7' or value.code = 'LA15424-7' or value.code = 'LA17059-9' or value.code = 'LA17392-4' or value.code = 'LA17393-2' or value.code = 'LA17394-0' or value.code = 'LA17396-5' or value.code = 'LA20641-9' or value.code = 'LA17489-8' or value.code = 'LA17490-6' or value.code = 'LA17713-1' or value.code = 'LA17714-9' or value.code = 'LA18267-7' or value.code = 'LA7418-2' or value.code = 'LA7434-9' or value.code = 'LA7443-0' or value.code = 'LA7444-8' or value.code = 'LA9540-1' or value.code = 'LA9541-9' or value.code = 'LA9548-4' or value.code = 'LA20642-7' or value.code = 'LA18266-9')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__6C-4GaNEe2Mns8sNTkjCw" name="ProcedureComplicationsObservationValueP" constrainedElement="_lVl1sJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__6C-4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_l6VhgJ0uEeGmCMENP40rhA">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Z3nhEJ0vEeGmCMENP40rhA" name="ProcedurePatientResponseObservation">
      <ownedComment xmi:id="_NYqzsCz8EeO0H9tywllqaQ">
        <body>How a patient responded to a procedure</body>
      </ownedComment>
      <ownedRule xmi:id="__6MI0GaNEe2Mns8sNTkjCw" name="ProcedurePatientResponseObservationTemplateId" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__6MI0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.135' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__6NW8GaNEe2Mns8sNTkjCw" name="ProcedurePatientResponseObservationMoodCode" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__6NW8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__6PzMGaNEe2Mns8sNTkjCw" name="ProcedurePatientResponseObservationCodeP" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__6PzMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__6OlEGaNEe2Mns8sNTkjCw" name="ProcedurePatientResponseObservationCode" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__6OlEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67546-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__6QaQGaNEe2Mns8sNTkjCw" name="ProcedurePatientResponseObservationValue" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__6QaQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA65-8' or value.code = 'LA17181-1' or value.code = 'LA11011-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__6YWEGaNEe2Mns8sNTkjCw" name="ProcedurePatientResponseObservationValueP" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__6YWEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_aVz48J0vEeGmCMENP40rhA">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KR_lQJ4aEeGzbp5zEFWdWg" name="AirwayConfirmationObservation">
      <ownedComment xmi:id="_GBedACSTEeO2bfzIdJE0yg">
        <body>Whether airway placement was confirmed, including time and method</body>
      </ownedComment>
      <ownedRule xmi:id="__6fq0GaNEe2Mns8sNTkjCw" name="AirwayConfirmationObservationTemplateId" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__6fq0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.175' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__6g48GaNEe2Mns8sNTkjCw" name="AirwayConfirmationObservationMoodCode" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__6g48WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__6iuIGaNEe2Mns8sNTkjCw" name="AirwayConfirmationObservationCodeP" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__6iuIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__6hgAGaNEe2Mns8sNTkjCw" name="AirwayConfirmationObservationCode" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__6iHEGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '71576-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__6j8QGaNEe2Mns8sNTkjCw" name="AirwayConfirmationObservationEffectiveTime" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__6j8QWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__6lKYGaNEe2Mns8sNTkjCw" name="AirwayConfirmationObservationValue" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__6lKYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__6ttQGaNEe2Mns8sNTkjCw" name="AirwayConfirmationObservationMethodCodeP" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__6ttQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__6lxcGaNEe2Mns8sNTkjCw" name="AirwayConfirmationObservationMethodCode" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__6lxcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18672-8' or value.code = 'LA18673-6' or value.code = 'LA18674-4' or value.code = 'LA18675-1' or value.code = 'LA18676-9' or value.code = 'LA18677-7' or value.code = 'LA18678-5' or value.code = 'LA18680-1' or value.code = 'LA18681-9' or value.code = 'LA18679-3' or value.code = 'LA32909-6')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Kq5NcJ4aEeGzbp5zEFWdWg">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_N8t6kFhWEeK-i8RB1gvLUA" name="ReasonProcedureNotAttemptedObservation">
      <ownedComment xmi:id="_XSkmICz-EeO0H9tywllqaQ">
        <body>Why the EMS crew did not attempt to perform a specific procedure</body>
      </ownedComment>
      <ownedRule xmi:id="__61CAGaNEe2Mns8sNTkjCw" name="ReasonProcedureNotAttemptedObservationTemplateId" constrainedElement="_N8t6kFhWEeK-i8RB1gvLUA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__61CAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.137' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__62QIGaNEe2Mns8sNTkjCw" name="ReasonProcedureNotAttemptedObservationMoodCode" constrainedElement="_N8t6kFhWEeK-i8RB1gvLUA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__62QIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__64FUGaNEe2Mns8sNTkjCw" name="ReasonProcedureNotAttemptedObservationCodeP" constrainedElement="_N8t6kFhWEeK-i8RB1gvLUA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__64FUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__623MGaNEe2Mns8sNTkjCw" name="ReasonProcedureNotAttemptedObservationCode" constrainedElement="_N8t6kFhWEeK-i8RB1gvLUA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__623MWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '72112-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__65TcGaNEe2Mns8sNTkjCw" name="ReasonProcedureNotAttemptedObservationValue" constrainedElement="_N8t6kFhWEeK-i8RB1gvLUA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__65TcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA15185-4' or value.code = 'LA18925-0' or value.code = 'LA4216-3' or value.code = 'LA4389-8' or value.code = 'LA17063-1' or value.code = 'LA17064-9' or value.code = 'LA17065-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__7BPQGaNEe2Mns8sNTkjCw" name="ReasonProcedureNotAttemptedObservationValueP" constrainedElement="_N8t6kFhWEeK-i8RB1gvLUA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__7BPQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_OeTksFhWEeK-i8RB1gvLUA">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4ZsacKg_EeG79fAvHk6H4g" name="ComplaintType">
      <ownedComment xmi:id="_7GW4MCUfEeOPwcQY2yBpiA">
        <body>Whether a complaint is a chief complaint</body>
      </ownedComment>
      <ownedRule xmi:id="__7JyIGaNEe2Mns8sNTkjCw" name="ComplaintTypeTemplateId" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__7JyIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.138' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__7LAQGaNEe2Mns8sNTkjCw" name="ComplaintTypeMoodCode" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__7LAQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__7M1cGaNEe2Mns8sNTkjCw" name="ComplaintTypeCodeP" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__7M1cWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__7LnUGaNEe2Mns8sNTkjCw" name="ComplaintTypeCode" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__7LnUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '72114-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__7ODkGaNEe2Mns8sNTkjCw" name="ComplaintTypeValue" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__7ODkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA18923-5' or value.code = 'LA18924-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__7WmcGaNEe2Mns8sNTkjCw" name="ComplaintTypeValueP" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__7WmcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4uqk4Kg_EeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_g93MsKhAEeG79fAvHk6H4g" name="ComplaintDuration">
      <ownedComment xmi:id="_nY_8wCUfEeOPwcQY2yBpiA">
        <body>How long a complaint has lasted</body>
      </ownedComment>
      <ownedRule xmi:id="__7fJUGaNEe2Mns8sNTkjCw" name="ComplaintDurationTemplateId" constrainedElement="_g93MsKhAEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__7fJUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.139' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__7gXcGaNEe2Mns8sNTkjCw" name="ComplaintDurationMoodCode" constrainedElement="_g93MsKhAEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__7gXcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__7izsGaNEe2Mns8sNTkjCw" name="ComplaintDurationCodeP" constrainedElement="_g93MsKhAEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__7jawGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__7hlkGaNEe2Mns8sNTkjCw" name="ComplaintDurationCode" constrainedElement="_g93MsKhAEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__7hlkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67491-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__7ko4GaNEe2Mns8sNTkjCw" name="ComplaintDurationValue" constrainedElement="_g93MsKhAEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__7ko4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_hRO0oKhAEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_YMy4UKhDEeG79fAvHk6H4g" name="ComplaintOrganSystem">
      <ownedComment xmi:id="_o8qH4CUfEeOPwcQY2yBpiA">
        <body>The system that a complaint seems to affect</body>
      </ownedComment>
      <ownedRule xmi:id="__7lP8GaNEe2Mns8sNTkjCw" name="ComplaintOrganSystemTemplateId" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__7lP8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.140' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__7meEGaNEe2Mns8sNTkjCw" name="ComplaintOrganSystemMoodCode" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__7meEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__7o6UGaNEe2Mns8sNTkjCw" name="ComplaintOrganSystemCodeP" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__7o6UWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__7nsMGaNEe2Mns8sNTkjCw" name="ComplaintOrganSystemCode" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__7nsMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69468-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__7qIcGaNEe2Mns8sNTkjCw" name="ComplaintOrganSystemValue" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__7qIcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA16968-2' or value.code = 'LA18114-1' or value.code = 'LA18277-6' or value.code = 'LA18278-4' or value.code = 'LA18279-2' or value.code = 'LA18281-8' or value.code = 'LA18282-6' or value.code = 'LA18283-4' or value.code = 'LA18284-2' or value.code = 'LA18285-9' or value.code = 'LA9534-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__7yrUGaNEe2Mns8sNTkjCw" name="ComplaintOrganSystemValueP" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__7yrUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_YmnGgKhDEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gBOGYJorEeG_FLcaRgAa7g" name="NeurologicalAssessment">
      <ownedComment xmi:id="_DWs6MCwlEeOaIuM51LdlNw">
        <body>Qualitative assessment of condition of patient's neurological response</body>
      </ownedComment>
      <ownedRule xmi:id="__76AEGaNEe2Mns8sNTkjCw" name="NeurologicalAssessmentTemplateId" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__76AEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.141' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__77OMGaNEe2Mns8sNTkjCw" name="NeurologicalAssessmentMoodCode" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__77OMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__7-4kGaNEe2Mns8sNTkjCw" name="NeurologicalAssessmentCodeP" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__7-4kWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__79DYGaNEe2Mns8sNTkjCw" name="NeurologicalAssessmentCode" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__79DYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67536-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__8AGsGaNEe2Mns8sNTkjCw" name="NeurologicalAssessmentValue" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8AGsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17286-8' or value.code = 'LA17291-8' or value.code = 'LA17292-6' or value.code = 'LA17293-4' or value.code = 'LA17294-2' or value.code = 'LA17295-9' or value.code = 'LA17296-7' or value.code = 'LA17297-5' or value.code = 'LA17298-3' or value.code = 'LA17299-1' or value.code = 'LA17300-7' or value.code = 'LA17301-5' or value.code = 'LA17302-3' or value.code = 'LA17303-1' or value.code = 'LA17304-9' or value.code = 'LA17305-6' or value.code = 'LA18261-0' or value.code = 'LA18262-8' or value.code = 'LA18263-6' or value.code = 'LA18264-4' or value.code = 'LA18265-1' or value.code = 'LA23822-2' or value.code = 'LA23823-0' or value.code = 'LA32958-3' or value.code = 'LA32959-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__8J3sGaNEe2Mns8sNTkjCw" name="NeurologicalAssessmentValueP" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8J3sWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_gR4YkJorEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_l4xA4IzrEeGnhceUMXltng" name="DiastolicBloodPressure">
      <ownedComment xmi:id="_henXECUhEeOPwcQY2yBpiA">
        <body>Patient's diastolic blood pressure</body>
      </ownedComment>
      <ownedRule xmi:id="__8RzgGaNEe2Mns8sNTkjCw" name="DiastolicBloodPressureTemplateId" constrainedElement="_l4xA4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8RzgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.144' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__8TosGaNEe2Mns8sNTkjCw" name="DiastolicBloodPressureMoodCode" constrainedElement="_l4xA4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8TosWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__8UPwGaNEe2Mns8sNTkjCw" name="DiastolicBloodPressureCode" constrainedElement="_l4xA4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8UPwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '8462-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__8WE8GaNEe2Mns8sNTkjCw" name="DiastolicBloodPressureEffectiveTime" constrainedElement="_l4xA4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8WE8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__8XTEGaNEe2Mns8sNTkjCw" name="DiastolicBloodPressureValue" constrainedElement="_l4xA4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8XTEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__8X6IGaNEe2Mns8sNTkjCw" name="DiastolicBloodPressureMethodCode" constrainedElement="_l4xA4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8X6IWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->size() = 1 and self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA24013-7' or value.code = 'LA24012-9' or value.code = 'LA25780-0' or value.code = 'LA25782-6' or value.code = 'LA19771-7' or value.code = 'LA25783-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__8gdAGaNEe2Mns8sNTkjCw" name="DiastolicBloodPressureMethodCodeP" constrainedElement="_l4xA4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8gdAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->size() =  1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_mVKpAIzrEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__qJ7UIzrEeGnhceUMXltng" name="HeartRate">
      <ownedComment xmi:id="_xxZa8CwlEeOaIuM51LdlNw">
        <body>Measurement of rate of heartbeat</body>
      </ownedComment>
      <ownedRule xmi:id="__8nKsGaNEe2Mns8sNTkjCw" name="HeartRateTemplateId" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8nxwGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.145' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__8oY0GaNEe2Mns8sNTkjCw" name="HeartRateMoodCode" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8oY0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__8q1EGaNEe2Mns8sNTkjCw" name="HeartRateCodeP" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8q1EWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__8pm8GaNEe2Mns8sNTkjCw" name="HeartRateCode" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8pm8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '8867-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__8sDMGaNEe2Mns8sNTkjCw" name="HeartRateEffectiveTime" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8sDMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__8sqQGaNEe2Mns8sNTkjCw" name="HeartRateValue" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8sqQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_AA5nYIzsEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Q7VIMIzsEeGnhceUMXltng" name="RespiratoryRate">
      <ownedComment xmi:id="_Z50VMCz-EeO0H9tywllqaQ">
        <body>Patient's rate of respiration</body>
      </ownedComment>
      <ownedRule xmi:id="__8t4YGaNEe2Mns8sNTkjCw" name="RespiratoryRateTemplateId" constrainedElement="_Q7VIMIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8t4YWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.146' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__8ufcGaNEe2Mns8sNTkjCw" name="RespiratoryRateMoodCode" constrainedElement="_Q7VIMIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8ufcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__8w7sGaNEe2Mns8sNTkjCw" name="RespiratoryRateCodeP" constrainedElement="_Q7VIMIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8w7sWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__8vtkGaNEe2Mns8sNTkjCw" name="RespiratoryRateCode" constrainedElement="_Q7VIMIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8vtkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '9279-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__8xiwGaNEe2Mns8sNTkjCw" name="RespiratoryRateEffectiveTime" constrainedElement="_Q7VIMIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8xiwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__8yw4GaNEe2Mns8sNTkjCw" name="RespiratoryRateValue" constrainedElement="_Q7VIMIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8yw4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_RN10gIzsEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_koRz8IzsEeGnhceUMXltng" name="BodyTemperature">
      <ownedComment xmi:id="_f3y8gCUcEeOPwcQY2yBpiA">
        <body>Patient's body temperature</body>
      </ownedComment>
      <ownedRule xmi:id="__8zX8GaNEe2Mns8sNTkjCw" name="BodyTemperatureTemplateId" constrainedElement="_koRz8IzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8zX8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.176' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__80mEGaNEe2Mns8sNTkjCw" name="BodyTemperatureMoodCode" constrainedElement="_koRz8IzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__80mEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__810MGaNEe2Mns8sNTkjCw" name="BodyTemperatureCode" constrainedElement="_koRz8IzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__810MWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '8310-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__82bQGaNEe2Mns8sNTkjCw" name="BodyTemperatureEffectiveTime" constrainedElement="_koRz8IzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__82bQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__83pYGaNEe2Mns8sNTkjCw" name="BodyTemperatureValue" constrainedElement="_koRz8IzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__83pYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_k_CuIIzsEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_01XGkIzsEeGnhceUMXltng" name="OxygenSaturation">
      <ownedComment xmi:id="_lLDzQCwqEeOaIuM51LdlNw">
        <body>Measurement of the patient's arterial blood oxygen saturation</body>
      </ownedComment>
      <ownedRule xmi:id="__84QcGaNEe2Mns8sNTkjCw" name="OxygenSaturationTemplateId" constrainedElement="_01XGkIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__843gGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.177' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__85ekGaNEe2Mns8sNTkjCw" name="OxygenSaturationMoodCode" constrainedElement="_01XGkIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__85ekWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__8760GaNEe2Mns8sNTkjCw" name="OxygenSaturationCodeP" constrainedElement="_01XGkIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8760WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__86ssGaNEe2Mns8sNTkjCw" name="OxygenSaturationCode" constrainedElement="_01XGkIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__86ssWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '2708-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__89I8GaNEe2Mns8sNTkjCw" name="OxygenSaturationEffectiveTime" constrainedElement="_01XGkIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__89I8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__89wAGaNEe2Mns8sNTkjCw" name="OxygenSaturationValue" constrainedElement="_01XGkIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__89wAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1HuB4IzsEeGnhceUMXltng">
        <ownedComment xmi:id="_HYL4YIjvEeKx3P4dlW9OSw">
          <body>NEMSIS Trace: eVitals.01</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_MjD2kJ-nEeGorI3CPDW2ww" name="ProtocolAgeCategory">
      <ownedComment xmi:id="_eQ6jMCz8EeO0H9tywllqaQ">
        <body>Age range for which a protocol is appropriate</body>
      </ownedComment>
      <ownedRule xmi:id="__8--IGaNEe2Mns8sNTkjCw" name="ProtocolAgeCategoryTemplateId" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__8--IWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.149' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__9AMQGaNEe2Mns8sNTkjCw" name="ProtocolAgeCategoryMoodCode" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__9AMQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__9CBcGaNEe2Mns8sNTkjCw" name="ProtocolAgeCategoryCodeP" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__9CBcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__9AzUGaNEe2Mns8sNTkjCw" name="ProtocolAgeCategoryCode" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__9AzUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67538-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__9DPkGaNEe2Mns8sNTkjCw" name="ProtocolAgeCategoryValue" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__9DPkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17571-3' or value.code = 'LA17572-1' or value.code = 'LA17573-9')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__9LycGaNEe2Mns8sNTkjCw" name="ProtocolAgeCategoryValueP" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__9LycWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NEM0wJ-nEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lC10cJ-BEeGw9ZRnaFfEZQ" name="DispatchLocationName">
      <ownedComment xmi:id="_qIr5UCUjEeOEaIF_MBGm_A">
        <body>The name or ID of the dispatch center requesting service from the EMS agency</body>
      </ownedComment>
      <ownedRule xmi:id="__9U8YGaNEe2Mns8sNTkjCw" name="DispatchLocationNameTemplateId" constrainedElement="_lC10cJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__9U8YWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.150' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__9WKgGaNEe2Mns8sNTkjCw" name="DispatchLocationNameMoodCode" constrainedElement="_lC10cJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__9WKgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__9XYoGaNEe2Mns8sNTkjCw" name="DispatchLocationNameCode" constrainedElement="_lC10cJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__9XYoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69466-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__9ZN0GaNEe2Mns8sNTkjCw" name="DispatchLocationNameValue" constrainedElement="_lC10cJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__9ZN0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::ST)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_loHrwJ-BEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sPMP9p-NEeGorI3CPDW2ww" name="DispatchLocationLatitude">
      <ownedComment xmi:id="_8r6O0CUhEeOPwcQY2yBpiA">
        <body>Latitude of the unit when dispatched</body>
      </ownedComment>
      <ownedRule xmi:id="__9Z04GaNEe2Mns8sNTkjCw" name="DispatchLocationLatitudeTemplateId" constrainedElement="_sPMP9p-NEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__9Z04WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.151' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__9bDAGaNEe2Mns8sNTkjCw" name="DispatchLocationLatitudeMoodCode" constrainedElement="_sPMP9p-NEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__9bDAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__9cRIGaNEe2Mns8sNTkjCw" name="DispatchLocationLatitudeCode" constrainedElement="_sPMP9p-NEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__9cRIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69750-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__9dfQGaNEe2Mns8sNTkjCw" name="DispatchLocationLatitudeValue" constrainedElement="_sPMP9p-NEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__9dfQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_sPMP-J-NEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UGLMFZ-OEeGorI3CPDW2ww" name="DispatchLocationLongitude">
      <ownedComment xmi:id="_-ACJICUhEeOPwcQY2yBpiA">
        <body>Longitude of the unit when dispatched</body>
      </ownedComment>
      <ownedRule xmi:id="__9eGUGaNEe2Mns8sNTkjCw" name="DispatchLocationLongitudeTemplateId" constrainedElement="_UGLMFZ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__9eGUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.152' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__9fUcGaNEe2Mns8sNTkjCw" name="DispatchLocationLongitudeMoodCode" constrainedElement="_UGLMFZ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__9fUcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__9gikGaNEe2Mns8sNTkjCw" name="DispatchLocationLongitudeCode" constrainedElement="_UGLMFZ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__9gikWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69465-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__9hwsGaNEe2Mns8sNTkjCw" name="DispatchLocationLongitudeValue" constrainedElement="_UGLMFZ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__9hwsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_UGLMF5-OEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9i0HIJ99EeGw9ZRnaFfEZQ" name="DispatchDelay">
      <ownedComment xmi:id="_tSspICUhEeOPwcQY2yBpiA">
        <body>Causes of delay to the dispatch process</body>
      </ownedComment>
      <ownedRule xmi:id="__9iXwGaNEe2Mns8sNTkjCw" name="DispatchDelayTemplateId" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__9iXwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.153' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__9jl4GaNEe2Mns8sNTkjCw" name="DispatchDelayMoodCode" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__9jl4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__9mCIGaNEe2Mns8sNTkjCw" name="DispatchDelayCodeP" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__9mCIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__9k0AGaNEe2Mns8sNTkjCw" name="DispatchDelayCode" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__9k0AWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67480-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__9nQQGaNEe2Mns8sNTkjCw" name="DispatchDelayValue" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__9nQQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17183-7' or value.code = 'LA17579-6' or value.code = 'LA17580-4' or value.code = 'LA17581-2' or value.code = 'LA17582-0' or value.code = 'LA17584-6' or value.code = 'LA18081-2' or value.code = 'LA7540-3' or value.code = 'LA32992-2' or value.code = 'LA32993-0' or value.code = 'LA32994-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__9vzIGaNEe2Mns8sNTkjCw" name="DispatchDelayValueP" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__9vzIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-MO3kJ99EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_pCK4JZ9-EeGw9ZRnaFfEZQ" name="ResponseDelay">
      <ownedComment xmi:id="_zuEKECUhEeOPwcQY2yBpiA">
        <body>Causes of delay to the response process</body>
      </ownedComment>
      <ownedRule xmi:id="__93u8GaNEe2Mns8sNTkjCw" name="ResponseDelayTemplateId" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__93u8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.154' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__949EGaNEe2Mns8sNTkjCw" name="ResponseDelayMoodCode" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__949EWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__96yQGaNEe2Mns8sNTkjCw" name="ResponseDelayCodeP" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__96yQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__95kIGaNEe2Mns8sNTkjCw" name="ResponseDelayCode" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__95kIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67557-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__98AYGaNEe2Mns8sNTkjCw" name="ResponseDelayValue" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__98AYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17583-8' or value.code = 'LA17585-3' or value.code = 'LA17586-1' or value.code = 'LA17587-9' or value.code = 'LA17588-7' or value.code = 'LA17590-3' or value.code = 'LA17591-1' or value.code = 'LA17592-9' or value.code = 'LA17593-7' or value.code = 'LA17594-5' or value.code = 'LA18081-2' or value.code = 'LA18270-1' or value.code = 'LA18271-9' or value.code = 'LA18301-4' or value.code = 'LA24422-0' or value.code = 'LA24421-2')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__-D8MGaNEe2Mns8sNTkjCw" name="ResponseDelayValueP" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__-D8MWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pCK4J59-EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Vo79JZ9_EeGw9ZRnaFfEZQ" name="SceneDelay">
      <ownedComment xmi:id="_2ucx4CUhEeOPwcQY2yBpiA">
        <body>Causes of delay at the event scene</body>
      </ownedComment>
      <ownedRule xmi:id="__-LQ8GaNEe2Mns8sNTkjCw" name="SceneDelayTemplateId" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__-LQ8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.155' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__-MfEGaNEe2Mns8sNTkjCw" name="SceneDelayMoodCode" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__-MfEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__-O7UGaNEe2Mns8sNTkjCw" name="SceneDelayCodeP" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__-O7UWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__-NtMGaNEe2Mns8sNTkjCw" name="SceneDelayCode" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__-NtMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67558-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__-PiYGaNEe2Mns8sNTkjCw" name="SceneDelayValue" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__-PiYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17585-3' or value.code = 'LA17586-1' or value.code = 'LA17587-9' or value.code = 'LA17588-7' or value.code = 'LA17590-3' or value.code = 'LA17591-1' or value.code = 'LA17592-9' or value.code = 'LA17593-7' or value.code = 'LA17594-5' or value.code = 'LA17595-2' or value.code = 'LA17596-0' or value.code = 'LA17597-8' or value.code = 'LA18081-2' or value.code = 'LA18272-7' or value.code = 'LA18273-5' or value.code = 'LA18275-0' or value.code = 'LA18276-8' or value.code = 'LA7540-3' or value.code = 'LA24421-2')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__-XeMGaNEe2Mns8sNTkjCw" name="SceneDelayValueP" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__-XeMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Vo79J59_EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4qwhJZ9_EeGw9ZRnaFfEZQ" name="TransportDelay">
      <ownedComment xmi:id="_4UTVYCUhEeOPwcQY2yBpiA">
        <body>Causes of delay to the transport process</body>
      </ownedComment>
      <ownedRule xmi:id="__-ey8GaNEe2Mns8sNTkjCw" name="TransportDelayTemplateId" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__-ey8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.156' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__-gBEGaNEe2Mns8sNTkjCw" name="TransportDelayMoodCode" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__-gBEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__-h2QGaNEe2Mns8sNTkjCw" name="TransportDelayCodeP" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__-h2QWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__-goIGaNEe2Mns8sNTkjCw" name="TransportDelayCode" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__-goIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67559-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__-idUGaNEe2Mns8sNTkjCw" name="TransportDelayValue" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__-idUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17585-3' or value.code = 'LA17586-1' or value.code = 'LA17587-9' or value.code = 'LA17588-7' or value.code = 'LA17589-5' or value.code = 'LA17590-3' or value.code = 'LA17591-1' or value.code = 'LA17592-9' or value.code = 'LA17593-7' or value.code = 'LA17594-5' or value.code = 'LA18081-2' or value.code = 'LA18270-1' or value.code = 'LA18271-9' or value.code = 'LA18301-4' or value.code = 'LA24424-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__-pyEGaNEe2Mns8sNTkjCw" name="TransportDelayValueP" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__-pyEWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4qwhJ59_EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_e7LIFZ-AEeGw9ZRnaFfEZQ" name="TurnaroundDelay">
      <ownedComment xmi:id="_UhvOgC0EEeO0H9tywllqaQ">
        <body>Causes of delay to the unit turnaround process</body>
      </ownedComment>
      <ownedRule xmi:id="__-xt4GaNEe2Mns8sNTkjCw" name="TurnaroundDelayTemplateId" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__-xt4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.157' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__-y8AGaNEe2Mns8sNTkjCw" name="TurnaroundDelayMoodCode" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__-y8AWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__-0xMGaNEe2Mns8sNTkjCw" name="TurnaroundDelayCodeP" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__-0xMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__-0KIGaNEe2Mns8sNTkjCw" name="TurnaroundDelayCode" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__-0KIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67560-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__-1_UGaNEe2Mns8sNTkjCw" name="TurnaroundDelayValue" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__-1_UWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17587-9' or value.code = 'LA17590-3' or value.code = 'LA17592-9' or value.code = 'LA17593-7' or value.code = 'LA17594-5' or value.code = 'LA17598-6' or value.code = 'LA17599-4' or value.code = 'LA17600-0' or value.code = 'LA17601-8' or value.code = 'LA17602-6' or value.code = 'LA18081-2' or value.code = 'LA18270-1' or value.code = 'LA18271-9' or value.code = 'LA7497-6' or value.code = 'LA24425-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="__-97IGaNEe2Mns8sNTkjCw" name="TurnaroundDelayValueP" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__-97IWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_e7LIF5-AEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_WduLAIzyEeGnhceUMXltng" name="GlasgowTotal">
      <ownedComment xmi:id="_s_-6YCwlEeOaIuM51LdlNw">
        <body>Total Glasgow Coma score</body>
      </ownedComment>
      <ownedRule xmi:id="___HsIGaNEe2Mns8sNTkjCw" name="GlasgowTotalTemplateId" constrainedElement="_WduLAIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___HsIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.158' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___I6QGaNEe2Mns8sNTkjCw" name="GlasgowTotalMoodCode" constrainedElement="_WduLAIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___I6QWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___LWgGaNEe2Mns8sNTkjCw" name="GlasgowTotalCodeP" constrainedElement="_WduLAIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___LWgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___KIYGaNEe2Mns8sNTkjCw" name="GlasgowTotalCode" constrainedElement="_WduLAIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___KIYWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '9269-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___MkoGaNEe2Mns8sNTkjCw" name="GlasgowTotalValue" constrainedElement="_WduLAIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___MkoWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_W9FnkIzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ZLqX8IzyEeGnhceUMXltng" name="GlasgowQualifier">
      <ownedComment xmi:id="_r3oyQCwlEeOaIuM51LdlNw">
        <body>Qualifier for Glasgow Coma score</body>
      </ownedComment>
      <ownedRule xmi:id="___NLsGaNEe2Mns8sNTkjCw" name="GlasgowQualifierTemplateId" constrainedElement="_ZLqX8IzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___NLsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.159' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___OZ0GaNEe2Mns8sNTkjCw" name="GlasgowQualifierMoodCode" constrainedElement="_ZLqX8IzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___OZ0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___Q2EGaNEe2Mns8sNTkjCw" name="GlasgowQualifierCodeP" constrainedElement="_ZLqX8IzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___Q2EWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___Pn8GaNEe2Mns8sNTkjCw" name="GlasgowQualifierCode" constrainedElement="_ZLqX8IzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___Pn8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '55285-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___SEMGaNEe2Mns8sNTkjCw" name="GlasgowQualifierValue" constrainedElement="_ZLqX8IzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___SEMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17102-7' or value.code = 'LA17103-5' or value.code = 'LA17104-3' or value.code = 'LA17105-0' or value.code = 'LA17106-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___ZY8GaNEe2Mns8sNTkjCw" name="GlasgowQualifierValueP" constrainedElement="_ZLqX8IzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___ZY8WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ZhmywIzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bxS9cIzyEeGnhceUMXltng" name="GlasgowEye">
      <ownedComment xmi:id="_pHDhACwlEeOaIuM51LdlNw">
        <body>Glasgow Coma eye score</body>
      </ownedComment>
      <ownedRule xmi:id="___gtsGaNEe2Mns8sNTkjCw" name="GlasgowEyeTemplateId" constrainedElement="_bxS9cIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___gtsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.160' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___h70GaNEe2Mns8sNTkjCw" name="GlasgowEyeMoodCode" constrainedElement="_bxS9cIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___h70WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___jxAGaNEe2Mns8sNTkjCw" name="GlasgowEyeCodeP" constrainedElement="_bxS9cIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___jxAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___ii4GaNEe2Mns8sNTkjCw" name="GlasgowEyeCode" constrainedElement="_bxS9cIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___ii4WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '9267-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___k_IGaNEe2Mns8sNTkjCw" name="GlasgowEyeValue" constrainedElement="_bxS9cIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___k_IWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_cBadEIzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_eKfCYIzyEeGnhceUMXltng" name="GlasgowMotor">
      <ownedComment xmi:id="_qBPRUCwlEeOaIuM51LdlNw">
        <body>Glasgow Coma motor score</body>
      </ownedComment>
      <ownedRule xmi:id="___lmMGaNEe2Mns8sNTkjCw" name="GlasgowMotorTemplateId" constrainedElement="_eKfCYIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___lmMWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.192' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___m0UGaNEe2Mns8sNTkjCw" name="GlasgowMotorMoodCode" constrainedElement="_eKfCYIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___m0UWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___opgGaNEe2Mns8sNTkjCw" name="GlasgowMotorCodeP" constrainedElement="_eKfCYIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___opgWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___oCcGaNEe2Mns8sNTkjCw" name="GlasgowMotorCode" constrainedElement="_eKfCYIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___oCcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '9268-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___p3oGaNEe2Mns8sNTkjCw" name="GlasgowMotorValue" constrainedElement="_eKfCYIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___p3oWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ee3-AIzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_hLJ-EIzyEeGnhceUMXltng" name="GlasgowVerbal">
      <ownedComment xmi:id="_tuwr8CwlEeOaIuM51LdlNw">
        <body>Glasgow Coma verbal score</body>
      </ownedComment>
      <ownedRule xmi:id="___rFwGaNEe2Mns8sNTkjCw" name="GlasgowVerbalTemplateId" constrainedElement="_hLJ-EIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___rFwWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.162' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___rs0GaNEe2Mns8sNTkjCw" name="GlasgowVerbalMoodCode" constrainedElement="_hLJ-EIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___rs0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___tiAGaNEe2Mns8sNTkjCw" name="GlasgowVerbalCodeP" constrainedElement="_hLJ-EIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___tiAWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___s68GaNEe2Mns8sNTkjCw" name="GlasgowVerbalCode" constrainedElement="_hLJ-EIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___s68WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '9270-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___uwIGaNEe2Mns8sNTkjCw" name="GlasgowVerbalValue" constrainedElement="_hLJ-EIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___uwIWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_hhtc4IzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9koR4IzuEeGnhceUMXltng" name="StrokeScore">
      <ownedComment xmi:id="_s1zzMC0AEeO0H9tywllqaQ">
        <body>Result of a stroke scale instrument</body>
      </ownedComment>
      <ownedRule xmi:id="___vXMGaNEe2Mns8sNTkjCw" name="StrokeScoreTemplateId" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___v-QGaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.163' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___wlUGaNEe2Mns8sNTkjCw" name="StrokeScoreMoodCode" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___wlUWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___zBkGaNEe2Mns8sNTkjCw" name="StrokeScoreCodeP" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___zBkWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___xzcGaNEe2Mns8sNTkjCw" name="StrokeScoreCode" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___xzcWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67520-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___0PsGaNEe2Mns8sNTkjCw" name="StrokeScoreEffectiveTime" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___0PsWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="___02wGaNEe2Mns8sNTkjCw" name="StrokeScoreValue" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="___02wWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17109-2' or value.code = 'LA6576-8' or value.code = 'LA6577-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="____O0GaNEe2Mns8sNTkjCw" name="StrokeScoreValueP" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="____O0WaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AAHKoGaOEe2Mns8sNTkjCw" name="StrokeScoreMethodCode" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AAHKoWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->size() = 1 and self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17110-0' or value.code = 'LA17112-6' or value.code = 'LA17113-4' or value.code = 'LA18300-6' or value.code = 'LA3774-2' or value.code = 'LA24430-3' or value.code = 'LA33001-1' or value.code = 'LA33000-3' or value.code = 'LA32999-7' or value.code = 'LA32998-9' or value.code = 'LA32997-1' or value.code = 'LA33002-9')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AAPGcGaOEe2Mns8sNTkjCw" name="StrokeScoreMethodCodeP" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AAPGcWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->size() =  1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_95ZoAIzuEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lnVLQIzuEeGnhceUMXltng" name="PainScore">
      <ownedComment xmi:id="_pTSM4CwqEeOaIuM51LdlNw">
        <body>Assessment of the patient's level of pain</body>
      </ownedComment>
      <ownedRule xmi:id="_AAXCQGaOEe2Mns8sNTkjCw" name="PainScoreTemplateId" constrainedElement="_lnVLQIzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AAXCQWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.164' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AAYQYGaOEe2Mns8sNTkjCw" name="PainScoreMoodCode" constrainedElement="_lnVLQIzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AAYQYWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AAasoGaOEe2Mns8sNTkjCw" name="PainScoreCodeP" constrainedElement="_lnVLQIzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AAasoWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AAZegGaOEe2Mns8sNTkjCw" name="PainScoreCode" constrainedElement="_lnVLQIzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AAZegWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '56840-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AAb6wGaOEe2Mns8sNTkjCw" name="PainScoreEffectiveTime" constrainedElement="_lnVLQIzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AAb6wWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AAch0GaOEe2Mns8sNTkjCw" name="PainScoreValue" constrainedElement="_lnVLQIzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AAch0WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (true)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_l6CE0IzuEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_xgaHgIztEeGnhceUMXltng" name="LevelOfResponsiveness">
      <ownedComment xmi:id="_F3rh0CwoEeOaIuM51LdlNw">
        <body>Patient's responsiveness</body>
      </ownedComment>
      <ownedRule xmi:id="_AAdv8GaOEe2Mns8sNTkjCw" name="LevelOfResponsivenessTemplateId" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AAdv8WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.165' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AAeXAGaOEe2Mns8sNTkjCw" name="LevelOfResponsivenessMoodCode" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AAeXAWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AAhaUGaOEe2Mns8sNTkjCw" name="LevelOfResponsivenessCodeP" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AAhaUWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AAflIGaOEe2Mns8sNTkjCw" name="LevelOfResponsivenessCode" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AAflIWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67775-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AAiocGaOEe2Mns8sNTkjCw" name="LevelOfResponsivenessEffectiveTime" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AAiocWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AAj2kGaOEe2Mns8sNTkjCw" name="LevelOfResponsivenessValue" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AAj2kWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17107-6' or value.code = 'LA17108-4' or value.code = 'LA9340-6' or value.code = 'LA9343-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AAtAgGaOEe2Mns8sNTkjCw" name="LevelOfResponsivenessValueP" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AAtAgWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_x_aXsIztEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_jmDsgIztEeGnhceUMXltng" name="BloodGlucose">
      <ownedComment xmi:id="_eQx7YCUcEeOPwcQY2yBpiA">
        <body>Patient blood glucose measured as a mass concentration</body>
      </ownedComment>
      <ownedRule xmi:id="_AA1jYGaOEe2Mns8sNTkjCw" name="BloodGlucoseTemplateId" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AA1jYWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.166' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AA2xgGaOEe2Mns8sNTkjCw" name="BloodGlucoseMoodCode" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AA2xgWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AA500GaOEe2Mns8sNTkjCw" name="BloodGlucoseCodeP" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AA500WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AA3_oGaOEe2Mns8sNTkjCw" name="BloodGlucoseCode" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AA3_oWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '2339-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AA7C8GaOEe2Mns8sNTkjCw" name="BloodGlucoseEffectiveTime" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AA7C8WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AA8REGaOEe2Mns8sNTkjCw" name="BloodGlucoseValue" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AA8REWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_j7fJ8IztEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_WFit0IztEeGnhceUMXltng" name="CarbonMonoxide">
      <ownedComment xmi:id="_QoenwCUeEeOPwcQY2yBpiA">
        <body>Measurement of carbon monoxide in patient's bloodstream</body>
      </ownedComment>
      <ownedRule xmi:id="_AA84IGaOEe2Mns8sNTkjCw" name="CarbonMonoxideTemplateId" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AA9fMGaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.167' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AA-tUGaOEe2Mns8sNTkjCw" name="CarbonMonoxideMoodCode" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AA-tUWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ABBJkGaOEe2Mns8sNTkjCw" name="CarbonMonoxideCodeP" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ABBJkWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AA_UYGaOEe2Mns8sNTkjCw" name="CarbonMonoxideCode" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AA_7cGaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '20563-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ABCXsGaOEe2Mns8sNTkjCw" name="CarbonMonoxideEffectiveTime" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ABCXsWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ABDl0GaOEe2Mns8sNTkjCw" name="CarbonMonoxideValue" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ABDl0WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_WP_qUIztEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_IU2lIIztEeGnhceUMXltng" name="CarbonDioxide">
      <ownedComment xmi:id="_AsUigCUdEeOPwcQY2yBpiA">
        <body>Measurement of end tidal carbon dioxide</body>
      </ownedComment>
      <ownedRule xmi:id="_ABEM4GaOEe2Mns8sNTkjCw" name="CarbonDioxideTemplateId" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ABEM4WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.168' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ABFbAGaOEe2Mns8sNTkjCw" name="CarbonDioxideMoodCode" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ABFbAWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ABH3QGaOEe2Mns8sNTkjCw" name="CarbonDioxideCodeP" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ABH3QWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ABGpIGaOEe2Mns8sNTkjCw" name="CarbonDioxideCode" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ABGpIWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '19889-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ABJFYGaOEe2Mns8sNTkjCw" name="CarbonDioxideEffectiveTime" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ABJFYWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ABKTgGaOEe2Mns8sNTkjCw" name="CarbonDioxideValue" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ABKTgWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_I1iQUIztEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_uMxJUIzpEeGnhceUMXltng" name="CardiacRhythm">
      <ownedComment xmi:id="_7qXZoCUeEeOPwcQY2yBpiA">
        <body>Patient's cardiac rhythm classification</body>
      </ownedComment>
      <ownedRule xmi:id="__YYcQGaNEe2Mns8sNTkjCw" name="CardiacRhythmParticipant1" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__YYcQWaNEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ABK6kGaOEe2Mns8sNTkjCw" name="CardiacRhythmTemplateId" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ABLhoGaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.169' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ABMIsGaOEe2Mns8sNTkjCw" name="CardiacRhythmMoodCode" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ABMIsWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ABOk8GaOEe2Mns8sNTkjCw" name="CardiacRhythmCodeP" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ABOk8WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ABNW0GaOEe2Mns8sNTkjCw" name="CardiacRhythmCode" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ABNW0WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67519-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ABPzEGaOEe2Mns8sNTkjCw" name="CardiacRhythmEffectiveTime" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ABPzEWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ABRBMGaOEe2Mns8sNTkjCw" name="CardiacRhythmValue" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ABRBMWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA12904-1' or value.code = 'LA17059-9' or value.code = 'LA17068-0' or value.code = 'LA17070-6' or value.code = 'LA17071-4' or value.code = 'LA17072-2' or value.code = 'LA17073-0' or value.code = 'LA17074-8' or value.code = 'LA17083-9' or value.code = 'LA17084-7' or value.code = 'LA17085-4' or value.code = 'LA17086-2' or value.code = 'LA17087-0' or value.code = 'LA17088-8' or value.code = 'LA17089-6' or value.code = 'LA17090-4' or value.code = 'LA17091-2' or value.code = 'LA17093-8' or value.code = 'LA17094-6' or value.code = 'LA17095-3' or value.code = 'LA17096-1' or value.code = 'LA17097-9' or value.code = 'LA17394-0' or value.code = 'LA17099-5' or value.code = 'LA17100-1' or value.code = 'LA17101-9' or value.code = 'LA17703-2' or value.code = 'LA17704-0' or value.code = 'LA17705-7' or value.code = 'LA17706-5' or value.code = 'LA17708-1' or value.code = 'LA17718-0' or value.code = 'LA18205-7' or value.code = 'LA18206-5' or value.code = 'LA18207-3' or value.code = 'LA18208-1' or value.code = 'LA32915-3' or value.code = 'LA32916-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ABcAUGaOEe2Mns8sNTkjCw" name="CardiacRhythmValueP" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ABcAUWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ABlKQGaOEe2Mns8sNTkjCw" name="CardiacRhythmMethodCode" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ABlKQWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty() and self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18682-7' or value.code = 'LA18683-5' or value.code = 'LA18684-3' or value.code = 'LA18685-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ABuUMGaOEe2Mns8sNTkjCw" name="CardiacRhythmMethodCodeP" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ABuUMWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (( not self.methodCode->isEmpty()) )</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_unG78IzpEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_RNfAcIzyEeGnhceUMXltng" name="GlasgowComaScoreOrganizer">
      <ownedComment xmi:id="_nTuiMCwlEeOaIuM51LdlNw">
        <body>Collection of Glasgow Coma Score observations</body>
      </ownedComment>
      <ownedRule xmi:id="_ACMOQWaOEe2Mns8sNTkjCw" name="GlasgowComaScoreOrganizerTemplateId" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ACM1UGaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.170' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ACNcYGaOEe2Mns8sNTkjCw" name="GlasgowComaScoreOrganizerEffectiveTime" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ACNcYWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AOUlwGaOEe2Mns8sNTkjCw" name="GlasgowComaScoreOrganizerComponent414" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AOUlwWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AObTcGaOEe2Mns8sNTkjCw" name="GlasgowComaScoreOrganizerComponent42" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AObTcWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AOiBIGaOEe2Mns8sNTkjCw" name="GlasgowComaScoreOrganizerComponent43" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AOiBIWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AOou0GaOEe2Mns8sNTkjCw" name="GlasgowComaScoreOrganizerComponent44" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AOou0WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AOvcgGaOEe2Mns8sNTkjCw" name="GlasgowComaScoreOrganizerComponent45" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AOvcgWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_SdkvUIzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_k-cIsJ-ZEeGorI3CPDW2ww" name="ResponseBeginningOdometerReading">
      <ownedComment xmi:id="_cuI28Cz-EeO0H9tywllqaQ">
        <body>Odometer reading for the EMS vehicle when dispatched</body>
      </ownedComment>
      <ownedRule xmi:id="_ACPRkGaOEe2Mns8sNTkjCw" name="ResponseBeginningOdometerReadingTemplateId" constrainedElement="_k-cIsJ-ZEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ACPRkWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.171' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ACRGwGaOEe2Mns8sNTkjCw" name="ResponseBeginningOdometerReadingMoodCode" constrainedElement="_k-cIsJ-ZEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ACRGwWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ACS78GaOEe2Mns8sNTkjCw" name="ResponseBeginningOdometerReadingCodeP" constrainedElement="_k-cIsJ-ZEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ACS78WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ACRt0GaOEe2Mns8sNTkjCw" name="ResponseBeginningOdometerReadingCode" constrainedElement="_k-cIsJ-ZEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ACRt0WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67484-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ACV_QGaOEe2Mns8sNTkjCw" name="ResponseBeginningOdometerReadingValue" constrainedElement="_k-cIsJ-ZEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ACWmUGaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_lfuQ0J-ZEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ib1zpZ-aEeGorI3CPDW2ww" name="ResponseOnSceneOdometerReading">
      <ownedComment xmi:id="_-NJkYCz-EeO0H9tywllqaQ">
        <body>Odometer reading for the EMS vehicle when the unit arrives at the patient</body>
      </ownedComment>
      <ownedRule xmi:id="_ACX0cGaOEe2Mns8sNTkjCw" name="ResponseOnSceneOdometerReadingTemplateId" constrainedElement="_ib1zpZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ACX0cWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.172' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ACZpoGaOEe2Mns8sNTkjCw" name="ResponseOnSceneOdometerReadingMoodCode" constrainedElement="_ib1zpZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ACZpoWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ACdUAGaOEe2Mns8sNTkjCw" name="ResponseOnSceneOdometerReadingCodeP" constrainedElement="_ib1zpZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ACdUAWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ACbe0GaOEe2Mns8sNTkjCw" name="ResponseOnSceneOdometerReadingCode" constrainedElement="_ib1zpZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ACbe0WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67485-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ACfwQGaOEe2Mns8sNTkjCw" name="ResponseOnSceneOdometerReadingValue" constrainedElement="_ib1zpZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ACfwQWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ib1zp5-aEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_7kghNZ-aEeGorI3CPDW2ww" name="ResponseDestinationOdometerReading">
      <ownedComment xmi:id="_ozRcwCz-EeO0H9tywllqaQ">
        <body>Odometer reading for the EMS vehicle at patient destination</body>
      </ownedComment>
      <ownedRule xmi:id="_ACg-YGaOEe2Mns8sNTkjCw" name="ResponseDestinationOdometerReadingTemplateId" constrainedElement="_7kghNZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ACg-YWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.173' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ACizkGaOEe2Mns8sNTkjCw" name="ResponseDestinationOdometerReadingMoodCode" constrainedElement="_7kghNZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ACizkWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ACmd8GaOEe2Mns8sNTkjCw" name="ResponseDestinationOdometerReadingCodeP" constrainedElement="_7kghNZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ACmd8WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ACkowGaOEe2Mns8sNTkjCw" name="ResponseDestinationOdometerReadingCode" constrainedElement="_7kghNZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ACkowWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67486-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ACnsEGaOEe2Mns8sNTkjCw" name="ResponseDestinationOdometerReadingValue" constrainedElement="_7kghNZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ACnsEWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_7kghN5-aEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JHDCEK9UEeO6uquZyO0R2Q" name="DrugAllergyOrganizer">
      <ownedComment xmi:id="_6b2X0BLnEeWNDqETRUui8w">
        <body>This organizer contains a set of discrete drug allergy observations or an assertion that there are no such allergies.</body>
      </ownedComment>
      <ownedRule xmi:id="_ADJ3l2aOEe2Mns8sNTkjCw" name="DrugAllergyOrganizerTemplateId" constrainedElement="_JHDCEK9UEeO6uquZyO0R2Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ADJ3mGaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.183' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AMHmUGaOEe2Mns8sNTkjCw" name="DrugAllergyOrganizerComponent415" constrainedElement="_JHDCEK9UEeO6uquZyO0R2Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AMHmUWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AMXd8GaOEe2Mns8sNTkjCw" name="DrugAllergyOrganizerComponent42" constrainedElement="_JHDCEK9UEeO6uquZyO0R2Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AMXd8WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KNE2AK9UEeO6uquZyO0R2Q">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iIDnYMtXEeSbT7e8VE5niQ" name="CardiacArrestOutcome">
      <ownedComment xmi:id="_1oS6kM3NEeSDodsZ26-KBg">
        <body>How the arrest was resolved in the experience of the EMS crew</body>
      </ownedComment>
      <ownedRule xmi:id="_AEX_kmaOEe2Mns8sNTkjCw" name="CardiacArrestOutcomeTemplateId" constrainedElement="_iIDnYMtXEeSbT7e8VE5niQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AEYmoGaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.184' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AEbC4GaOEe2Mns8sNTkjCw" name="CardiacArrestOutcomeCodeP" constrainedElement="_iIDnYMtXEeSbT7e8VE5niQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AEbC4WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AEZNsGaOEe2Mns8sNTkjCw" name="CardiacArrestOutcomeCode" constrainedElement="_iIDnYMtXEeSbT7e8VE5niQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AEZNsWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '77152-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AEc4EGaOEe2Mns8sNTkjCw" name="CardiacArrestOutcomeMoodCode" constrainedElement="_iIDnYMtXEeSbT7e8VE5niQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AEc4EWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AEeGMGaOEe2Mns8sNTkjCw" name="CardiacArrestOutcomeValue" constrainedElement="_iIDnYMtXEeSbT7e8VE5niQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AEeGMWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA22792-8' or value.code = 'LA22793-6' or value.code = 'LA22794-4' or value.code = 'LA22795-1' or value.code = 'LA22796-9' or value.code = 'LA22797-7')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AEoeQGaOEe2Mns8sNTkjCw" name="CardiacArrestOutcomeValueP" constrainedElement="_iIDnYMtXEeSbT7e8VE5niQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AEoeQWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_iIIf4MtXEeSbT7e8VE5niQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_8rap8MtaEeSbT7e8VE5niQ" name="TransportModeQualifier">
      <ownedComment xmi:id="_mTak4M0VEeSJm6m0rTs9zw">
        <body>Characteristics of the transport mode</body>
      </ownedComment>
      <ownedRule xmi:id="_AFCG4GaOEe2Mns8sNTkjCw" name="TransportModeQualifierTemplateId" constrainedElement="_8rap8MtaEeSbT7e8VE5niQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AFCG4WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.193' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AFDVAGaOEe2Mns8sNTkjCw" name="TransportModeQualifierClassCode" constrainedElement="_8rap8MtaEeSbT7e8VE5niQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AFDVAWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AFFxQGaOEe2Mns8sNTkjCw" name="TransportModeQualifierCodeP" constrainedElement="_8rap8MtaEeSbT7e8VE5niQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AFFxQWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AFEjIGaOEe2Mns8sNTkjCw" name="TransportModeQualifierCode" constrainedElement="_8rap8MtaEeSbT7e8VE5niQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AFEjIWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '77153-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AFG_YGaOEe2Mns8sNTkjCw" name="TransportModeQualifierMoodCode" constrainedElement="_8rap8MtaEeSbT7e8VE5niQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AFG_YWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AFINgGaOEe2Mns8sNTkjCw" name="TransportModeQualifierValue" constrainedElement="_8rap8MtaEeSbT7e8VE5niQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AFINgWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA22798-5' or value.code = 'LA22799-3' or value.code = 'LA22800-9' or value.code = 'LA22801-7' or value.code = 'LA22802-5' or value.code = 'LA22803-3' or value.code = 'LA22804-1' or value.code = 'LA22805-8' or value.code = 'LA22807-4' or value.code = 'LA22806-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AFR-gGaOEe2Mns8sNTkjCw" name="TransportModeQualifierValueP" constrainedElement="_8rap8MtaEeSbT7e8VE5niQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AFR-gWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_8rap8ctaEeSbT7e8VE5niQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Eb5OsMxCEeSOI6Ao2VuoSQ" name="DestinationHospitalCapability">
      <ownedComment xmi:id="_4m0PQM3PEeSDodsZ26-KBg">
        <body>The primary hospital capability associated with the patient's condition for this transport</body>
      </ownedComment>
      <ownedRule xmi:id="_AFuqcGaOEe2Mns8sNTkjCw" name="DestinationHospitalCapabilityTemplateId" constrainedElement="_Eb5OsMxCEeSOI6Ao2VuoSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AFuqcWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.104' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AFyU0GaOEe2Mns8sNTkjCw" name="DestinationHospitalCapabilityClassCode" constrainedElement="_Eb5OsMxCEeSOI6Ao2VuoSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AFyU0WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AF1_MGaOEe2Mns8sNTkjCw" name="DestinationHospitalCapabilityCodeP" constrainedElement="_Eb5OsMxCEeSOI6Ao2VuoSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AF1_MWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AF0KAGaOEe2Mns8sNTkjCw" name="DestinationHospitalCapabilityCode" constrainedElement="_Eb5OsMxCEeSOI6Ao2VuoSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AF0KAWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '77155-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AF30YGaOEe2Mns8sNTkjCw" name="DestinationHospitalCapabilityMoodCode" constrainedElement="_Eb5OsMxCEeSOI6Ao2VuoSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AF30YWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AF5CgGaOEe2Mns8sNTkjCw" name="DestinationHospitalCapabilityValue" constrainedElement="_Eb5OsMxCEeSOI6Ao2VuoSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AF5CgWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA22833-0' or value.code = 'LA22834-8' or value.code = 'LA22835-5' or value.code = 'LA22836-3' or value.code = 'LA22837-1' or value.code = 'LA22838-9' or value.code = 'LA22842-1' or value.code = 'LA22843-9' or value.code = 'LA22844-7' or value.code = 'LA22845-4' or value.code = 'LA22846-2' or value.code = 'LA22847-0' or value.code = 'LA22848-8' or value.code = 'LA22849-6' or value.code = 'LA22850-4' or value.code = 'LA32931-0' or value.code = 'LA32934-4' or value.code = 'LA32935-1' or value.code = 'LA32936-9' or value.code = 'LA32933-6' or value.code = 'LA20786-2')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AGCzgGaOEe2Mns8sNTkjCw" name="DestinationHospitalCapabilityValueP" constrainedElement="_Eb5OsMxCEeSOI6Ao2VuoSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AGCzgWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EcPM8MxCEeSOI6Ao2VuoSQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oKeDoMxFEeSOI6Ao2VuoSQ" name="DestinationWard">
      <ownedComment xmi:id="_Ih6aAM3QEeSDodsZ26-KBg">
        <body>The location within the hospital that the patient was taken directly by EMS</body>
      </ownedComment>
      <ownedRule xmi:id="_AGUgVmaOEe2Mns8sNTkjCw" name="DestinationWardTemplateId" constrainedElement="_oKeDoMxFEeSOI6Ao2VuoSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AGUgV2aOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.186' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AGWVgGaOEe2Mns8sNTkjCw" name="DestinationWardClassCode" constrainedElement="_oKeDoMxFEeSOI6Ao2VuoSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AGWVgWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AGYxwGaOEe2Mns8sNTkjCw" name="DestinationWardCodeP" constrainedElement="_oKeDoMxFEeSOI6Ao2VuoSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AGYxwWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AGXjoGaOEe2Mns8sNTkjCw" name="DestinationWardCode" constrainedElement="_oKeDoMxFEeSOI6Ao2VuoSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AGXjoWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '77154-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AGZ_4GaOEe2Mns8sNTkjCw" name="DestinationWardMoodCode" constrainedElement="_oKeDoMxFEeSOI6Ao2VuoSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AGZ_4WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AGbOAGaOEe2Mns8sNTkjCw" name="DestinationWardValue" constrainedElement="_oKeDoMxFEeSOI6Ao2VuoSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AGbOAWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA22808-2' or value.code = 'LA22809-0' or value.code = 'LA22810-8' or value.code = 'LA22824-9' or value.code = 'LA22811-6' or value.code = 'LA22812-4' or value.code = 'LA22813-2' or value.code = 'LA22814-0' or value.code = 'LA22815-7' or value.code = 'LA22816-5' or value.code = 'LA22817-3' or value.code = 'LA22818-1' or value.code = 'LA22819-9' or value.code = 'LA22820-7' or value.code = 'LA22821-5' or value.code = 'LA22822-3' or value.code = 'LA22823-1' or value.code = 'LA22825-6' or value.code = 'LA22826-4' or value.code = 'LA22827-2' or value.code = 'LA22828-0' or value.code = 'LA22829-8' or value.code = 'LA22830-6' or value.code = 'LA22831-4' or value.code = 'LA22832-2' or value.code = 'LA24394-1' or value.code = 'LA24395-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AGkX8GaOEe2Mns8sNTkjCw" name="DestinationWardValueP" constrainedElement="_oKeDoMxFEeSOI6Ao2VuoSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AGkX8WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oKeqsMxFEeSOI6Ao2VuoSQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_7PIw4M0VEeSJm6m0rTs9zw" name="ResponseModeQualifier">
      <ownedComment xmi:id="_4iuO4M3OEeSDodsZ26-KBg">
        <body>Characteristics of the response mode</body>
      </ownedComment>
      <ownedRule xmi:id="_AG1dtWaOEe2Mns8sNTkjCw" name="ResponseModeQualifierTemplateId" constrainedElement="_7PIw4M0VEeSJm6m0rTs9zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AG1dtmaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.191' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AG2r0GaOEe2Mns8sNTkjCw" name="ResponseModeQualifierClassCode" constrainedElement="_7PIw4M0VEeSJm6m0rTs9zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AG2r0WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AG5vIGaOEe2Mns8sNTkjCw" name="ResponseModeQualifierCodeP" constrainedElement="_7PIw4M0VEeSJm6m0rTs9zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AG5vIWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AG358GaOEe2Mns8sNTkjCw" name="ResponseModeQualifierCode" constrainedElement="_7PIw4M0VEeSJm6m0rTs9zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AG358WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '77157-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AG7kUGaOEe2Mns8sNTkjCw" name="ResponseModeQualifierMoodCode" constrainedElement="_7PIw4M0VEeSJm6m0rTs9zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AG7kUWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AG8ycGaOEe2Mns8sNTkjCw" name="ResponseModeQualifierValue" constrainedElement="_7PIw4M0VEeSJm6m0rTs9zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AG8ycWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA22798-5' or value.code = 'LA22799-3' or value.code = 'LA22800-9' or value.code = 'LA22801-7' or value.code = 'LA22802-5' or value.code = 'LA22803-3' or value.code = 'LA22804-1' or value.code = 'LA22805-8' or value.code = 'LA22806-6' or value.code = 'LA22807-4' or value.code = 'LA22869-4' or value.code = 'LA22866-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AHGjcGaOEe2Mns8sNTkjCw" name="ResponseModeQualifierValueP" constrainedElement="_7PIw4M0VEeSJm6m0rTs9zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AHGjcWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_7PJ_AM0VEeSJm6m0rTs9zw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bFfQYJokEeG_FLcaRgAa7g" name="SkinAssessment">
      <ownedComment xmi:id="_NCbYoCwlEeOaIuM51LdlNw">
        <body>Qualitative assessment of condition of patient's skin</body>
      </ownedComment>
      <ownedRule xmi:id="_AHgME2aOEe2Mns8sNTkjCw" name="SkinAssessmentTemplateId" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AHgMFGaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.180' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AHhaMGaOEe2Mns8sNTkjCw" name="SkinAssessmentMoodCode" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AHhaMWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AHkdgGaOEe2Mns8sNTkjCw" name="SkinAssessmentCodeP" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AHkdgWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AHioUGaOEe2Mns8sNTkjCw" name="SkinAssessmentCode" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AHioUWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67524-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AHlroGaOEe2Mns8sNTkjCw" name="SkinAssessmentEffectiveTime" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AHlroWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AHm5wGaOEe2Mns8sNTkjCw" name="SkinAssessmentValue" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AHm5wWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA15475-9' or value.code = 'LA17197-7' or value.code = 'LA17198-5' or value.code = 'LA17199-3' or value.code = 'LA17200-9' or value.code = 'LA17201-7' or value.code = 'LA17202-5' or value.code = 'LA17203-3' or value.code = 'LA17204-1' or value.code = 'LA17205-8' or value.code = 'LA17206-6' or value.code = 'LA17207-4' or value.code = 'LA18217-2' or value.code = 'LA18218-0' or value.code = 'LA18219-8' or value.code = 'LA6626-1' or value.code = 'LA23806-5' or value.code = 'LA23807-3' or value.code = 'LA23808-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AHvcoGaOEe2Mns8sNTkjCw" name="SkinAssessmentValueP" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AHvcoWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_baeB4JokEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_F-GKoLMNEeKNbt70lHd2Eg" name="AdditionalVitalSignsOrganizer">
      <ownedComment xmi:id="_9LwoQCSMEeO2bfzIdJE0yg">
        <body>Common observations regarding the state of the patient that are not typically included in strict definitions of vital signs.</body>
      </ownedComment>
      <ownedRule xmi:id="_AIJsUGaOEe2Mns8sNTkjCw" name="AdditionalVitalSignsOrganizerTemplateId" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AIJsUWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.30' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AIK6cGaOEe2Mns8sNTkjCw" name="AdditionalVitalSignsOrganizerMoodCode" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AIK6cWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AIMIkGaOEe2Mns8sNTkjCw" name="AdditionalVitalSignsOrganizerEffectiveTime" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AIMIkWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AMnVkGaOEe2Mns8sNTkjCw" name="AdditionalVitalSignsOrganizerComponent416" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AMnVkWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AMuqUGaOEe2Mns8sNTkjCw" name="AdditionalVitalSignsOrganizerComponent42" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AMuqUWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AM1YAGaOEe2Mns8sNTkjCw" name="AdditionalVitalSignsOrganizerComponent43" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AM1YAWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AM9T0GaOEe2Mns8sNTkjCw" name="AdditionalVitalSignsOrganizerComponent44" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AM964GaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ANGdwGaOEe2Mns8sNTkjCw" name="AdditionalVitalSignsOrganizerComponent45" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ANGdwWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ANPAoGaOEe2Mns8sNTkjCw" name="AdditionalVitalSignsOrganizerComponent46" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ANPAoWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ANYKkGaOEe2Mns8sNTkjCw" name="AdditionalVitalSignsOrganizerComponent47" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ANYKkWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AQP4YGaOEe2Mns8sNTkjCw" name="AdditionalVitalSignsOrganizerComponent48" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AQP4YWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_HOxvYLMNEeKNbt70lHd2Eg">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gTzdICVKEeyHwdMImhiDzQ" name="LungAssessment">
      <ownedRule xmi:id="_AIWgoGaOEe2Mns8sNTkjCw" name="LungAssessmentTemplateId" constrainedElement="_gTzdICVKEeyHwdMImhiDzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AIWgoWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.194' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AIY84GaOEe2Mns8sNTkjCw" name="LungAssessmentCodeP" constrainedElement="_gTzdICVKEeyHwdMImhiDzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AIY84WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AIXHsGaOEe2Mns8sNTkjCw" name="LungAssessmentCode" constrainedElement="_gTzdICVKEeyHwdMImhiDzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AIXHsWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '32449-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AIZj8GaOEe2Mns8sNTkjCw" name="LungAssessmentValue" constrainedElement="_gTzdICVKEeyHwdMImhiDzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AIZj8WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA33360-1' or value.code = 'LA33354-4' or value.code = 'LA6626-1' or value.code = 'LA18402-0' or value.code = 'LA33362-7' or value.code = 'LA17232-2' or value.code = 'LA33365-0' or value.code = 'LA18226-3' or value.code = 'LA7460-4' or value.code = 'LA33356-9' or value.code = 'LA33355-1' or value.code = 'LA33363-5' or value.code = 'LA17612-5' or value.code = 'LA33364-3' or value.code = 'LA17236-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AIit4GaOEe2Mns8sNTkjCw" name="LungAssessmentValueP" constrainedElement="_gTzdICVKEeyHwdMImhiDzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AIit4WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AIr30GaOEe2Mns8sNTkjCw" name="LungAssessmentTargetSiteCode" constrainedElement="_gTzdICVKEeyHwdMImhiDzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AIr30WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA4306-2' or value.code = 'LA4585-1' or value.code = 'LA25377-5')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AI1BwGaOEe2Mns8sNTkjCw" name="LungAssessmentTargetSiteCodeP" constrainedElement="_gTzdICVKEeyHwdMImhiDzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AI1o0GaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (( not self.targetSiteCode->isEmpty()) )</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_gTzdISVKEeyHwdMImhiDzQ">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_uSA4MDKiEeyOwtfRawW6Qw" name="UnitDisposition">
      <ownedComment xmi:id="_OG9QgDKjEeyOwtfRawW6Qw">
        <body>The patient disposition for an EMS event identifying whether patient contact was made.</body>
      </ownedComment>
      <ownedRule xmi:id="_AI-LsGaOEe2Mns8sNTkjCw" name="UnitDispositionTemplateId" constrainedElement="_uSA4MDKiEeyOwtfRawW6Qw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AI-LsWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.196' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AJAn8GaOEe2Mns8sNTkjCw" name="UnitDispositionCodeP" constrainedElement="_uSA4MDKiEeyOwtfRawW6Qw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AJAn8WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AI_Z0GaOEe2Mns8sNTkjCw" name="UnitDispositionCode" constrainedElement="_uSA4MDKiEeyOwtfRawW6Qw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AI_Z0WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '100037-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AJB2EGaOEe2Mns8sNTkjCw" name="UnitDispositionValue" constrainedElement="_uSA4MDKiEeyOwtfRawW6Qw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AJB2EWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA33304-9' or value.code = 'LA33305-6' or value.code = 'LA33306-4' or value.code = 'LA33307-2' or value.code = 'LA33308-0' or value.code = 'LA33303-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AJLAAGaOEe2Mns8sNTkjCw" name="UnitDispositionValueP" constrainedElement="_uSA4MDKiEeyOwtfRawW6Qw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AJLAAWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_uSA4MTKiEeyOwtfRawW6Qw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2BpygDKkEeyOwtfRawW6Qw" name="PatientEngagement">
      <ownedComment xmi:id="_fQBFYDKyEeyOwtfRawW6Qw">
        <body>The patient disposition for an EMS event identifying whether a patient was evaluated and care or services were provided.</body>
      </ownedComment>
      <ownedRule xmi:id="_AJUJ8GaOEe2Mns8sNTkjCw" name="PatientEngagementTemplateId" constrainedElement="_2BpygDKkEeyOwtfRawW6Qw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AJUJ8WaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.197' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AJWmMGaOEe2Mns8sNTkjCw" name="PatientEngagementCodeP" constrainedElement="_2BpygDKkEeyOwtfRawW6Qw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AJWmMWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AJUxAGaOEe2Mns8sNTkjCw" name="PatientEngagementCode" constrainedElement="_2BpygDKkEeyOwtfRawW6Qw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AJUxAWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '100038-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AJX0UGaOEe2Mns8sNTkjCw" name="PatientEngagementValue" constrainedElement="_2BpygDKkEeyOwtfRawW6Qw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AJX0UWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA33311-4' or value.code = 'LA33312-2' or value.code = 'LA33310-6' or value.code = 'LA33309-8' or value.code = 'LA33313-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AJg-QGaOEe2Mns8sNTkjCw" name="PatientEngagementValueP" constrainedElement="_2BpygDKkEeyOwtfRawW6Qw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AJg-QWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2BpygTKkEeyOwtfRawW6Qw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_PFi4UDKmEeyOwtfRawW6Qw" name="CrewDisposition">
      <ownedComment xmi:id="_fq_noDKmEeyOwtfRawW6Qw">
        <body>The crew disposition for this EMS event identifying which crew provided primary patient care or whether support services were required.</body>
      </ownedComment>
      <ownedRule xmi:id="_AJo6EGaOEe2Mns8sNTkjCw" name="CrewDispositionTemplateId" constrainedElement="_PFi4UDKmEeyOwtfRawW6Qw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AJphIGaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.198' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AJqIMGaOEe2Mns8sNTkjCw" name="CrewDispositionCode" constrainedElement="_PFi4UDKmEeyOwtfRawW6Qw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AJqIMWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '100039-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AJr9YGaOEe2Mns8sNTkjCw" name="CrewDispositionValue" constrainedElement="_PFi4UDKmEeyOwtfRawW6Qw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AJr9YWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA33320-5' or value.code = 'LA33319-7' or value.code = 'LA33318-9' or value.code = 'LA33317-1' or value.code = 'LA33316-3' or value.code = 'LA33315-5' or value.code = 'LA33314-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AJ0gQGaOEe2Mns8sNTkjCw" name="CrewDispositionValueP" constrainedElement="_PFi4UDKmEeyOwtfRawW6Qw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AJ0gQWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PFi4UTKmEeyOwtfRawW6Qw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Kp-OcDKyEeyOwtfRawW6Qw" name="TransportDisposition">
      <ownedComment xmi:id="_vXF2oDKyEeyOwtfRawW6Qw">
        <body>The transport disposition for an EMS event identifying whether a transport occurred and by which unit.</body>
      </ownedComment>
      <ownedRule xmi:id="_AJ9DIGaOEe2Mns8sNTkjCw" name="TransportDispositionTemplateId" constrainedElement="_Kp-OcDKyEeyOwtfRawW6Qw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AJ9DIWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.199' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AJ_fYGaOEe2Mns8sNTkjCw" name="TransportDispositionCodeP" constrainedElement="_Kp-OcDKyEeyOwtfRawW6Qw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AJ_fYWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AJ-RQGaOEe2Mns8sNTkjCw" name="TransportDispositionCode" constrainedElement="_Kp-OcDKyEeyOwtfRawW6Qw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AJ-RQWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '100040-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AKAtgGaOEe2Mns8sNTkjCw" name="TransportDispositionValue" constrainedElement="_Kp-OcDKyEeyOwtfRawW6Qw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AKAtgWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA33327-0' or value.code = 'LA33326-2' or value.code = 'LA29248-4' or value.code = 'LA33324-7' or value.code = 'LA33323-9' or value.code = 'LA33322-1' or value.code = 'LA33321-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AKJ3cGaOEe2Mns8sNTkjCw" name="TransportDispositionValueP" constrainedElement="_Kp-OcDKyEeyOwtfRawW6Qw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AKJ3cWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() =  1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Kp-OcTKyEeyOwtfRawW6Qw">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Y9KOgEHMEeyzA5MgFxuJFA" name="ChestAssessment">
      <ownedComment xmi:id="_dfGIoEHMEeyzA5MgFxuJFA">
        <body>The assessment findings associated with the patient's chest.</body>
      </ownedComment>
      <ownedRule xmi:id="_AKbkRWaOEe2Mns8sNTkjCw" name="ChestAssessmentTemplateId" constrainedElement="_Y9KOgEHMEeyzA5MgFxuJFA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AKbkRmaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.195' and id.extension = '2022-01-01')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AKeAgGaOEe2Mns8sNTkjCw" name="ChestAssessmentCodeP" constrainedElement="_Y9KOgEHMEeyzA5MgFxuJFA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AKeAgWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AKcyYGaOEe2Mns8sNTkjCw" name="ChestAssessmentCode" constrainedElement="_Y9KOgEHMEeyzA5MgFxuJFA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AKcyYWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '11422-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AKfOoGaOEe2Mns8sNTkjCw" name="ChestAssessmentValue" constrainedElement="_Y9KOgEHMEeyzA5MgFxuJFA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AKfOoWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA18236-2' or value.code = 'LA7452-1' or value.code = 'LA6626-1' or value.code = 'LA7423-2' or value.code = 'LA18225-5' or value.code = 'LA23810-7' or value.code = 'LA17229-8' or value.code = 'LA33345-2' or value.code = 'LA33353-6' or value.code = 'LA33346-0' or value.code = 'LA33342-9' or value.code = 'LA17209-0' or value.code = 'LA17222-3' or value.code = 'LA18220-6' or value.code = 'LA7410-9' or value.code = 'LA7460-4' or value.code = 'LA33332-0' or value.code = 'LA17214-0' or value.code = 'LA18231-3' or value.code = 'LA17709-9' or value.code = 'LA17212-4' or value.code = 'LA22440-4' or value.code = 'LA33338-7')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AKoYkGaOEe2Mns8sNTkjCw" name="ChestAssessmentValueP" constrainedElement="_Y9KOgEHMEeyzA5MgFxuJFA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AKoYkWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (( not self.value->isEmpty())  and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AKxigGaOEe2Mns8sNTkjCw" name="ChestAssessmentTargetSiteCode" constrainedElement="_Y9KOgEHMEeyzA5MgFxuJFA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AKxigWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA33302-3' or value.code = 'LA33301-5' or value.code = 'LA33300-7' or value.code = 'LA33299-1' or value.code = 'LA33297-5' or value.code = 'LA33296-7' or value.code = 'LA33298-3' or value.code = 'LA33295-9')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AK7TgGaOEe2Mns8sNTkjCw" name="ChestAssessmentTargetSiteCodeP" constrainedElement="_Y9KOgEHMEeyzA5MgFxuJFA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AK7TgWaOEe2Mns8sNTkjCw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (( not self.targetSiteCode->isEmpty()) )</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Y9KOgUHMEeyzA5MgFxuJFA">
        <general xmi:type="uml:Class" href="pathmap://CDA_MODEL/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <profileApplication xmi:id="_xpUkQ2eQEeGtXKebdWh3hg">
      <eAnnotations xmi:id="_xpUkRGeQEeGtXKebdWh3hg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.openhealthtools.org/mdht/schemas/cda/4#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://CDA_PROFILES/CDA.profile.uml#_cxOJEIEVEd6H8o-hO3-B4Q"/>
    </profileApplication>
    <profileApplication xmi:id="_-87PUGaNEe2Mns8sNTkjCw">
      <eAnnotations xmi:id="_-87PUWaNEe2Mns8sNTkjCw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <CDA:CodegenSupport xmi:id="_xs1LQGeQEeGtXKebdWh3hg" basePackage="org.openhealthtools.mdht.uml.cda" nsPrefix="emspcr" nsURI="http://www.openhealthtools.org/mdht/uml/cda/emspcr" packageName="emspcr" prefix="emspcr" base_Namespace="_xpUkQGeQEeGtXKebdWh3hg"/>
  <CDA:CDATemplate xmi:id="_xs3ngGeQEeGtXKebdWh3hg" base_Class="_xs1LQWeQEeGtXKebdWh3hg" templateId="2.16.840.1.1133883.17.3.10.2" assigningAuthorityName="" templateVersion="2022-01-01">
    <ruleId>CONF:11388</ruleId>
  </CDA:CDATemplate>
  <CDA:PropertyValidation xmi:id="_0IF3U2eREeGtXKebdWh3hg">
    <ruleId>CONF:5261</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_0pgRkGetEeGtXKebdWh3hg"/>
  <CDA:PropertyValidation xmi:id="_NkgWkGeuEeGtXKebdWh3hg"/>
  <CDA:PropertyValidation xmi:id="_iLBHkGeuEeGtXKebdWh3hg"/>
  <CDA:PropertyValidation xmi:id="_TAlPsGlZEeG4boS-IbG8Zw"/>
  <CDA:PropertyValidation xmi:id="_TblwsGlZEeG4boS-IbG8Zw"/>
  <CDA:PropertyValidation xmi:id="_x7o9MGlaEeG4boS-IbG8Zw"/>
  <CDA:AssociationValidation xmi:id="_j-FAsGlbEeG4boS-IbG8Zw">
    <ruleId>CONF:10078</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_QfqDsGlcEeG4boS-IbG8Zw">
    <ruleId>CONF:10079</ruleId>
  </CDA:AssociationValidation>
  <CDA:CDATemplate xmi:id="_WJI_QGldEeG4boS-IbG8Zw" base_Class="_S-YTcGldEeG4boS-IbG8Zw" templateId="2.16.840.1.1133883.17.3.10.1.5" templateVersion="2022-01-01">
    <ruleId>CONF:11392</ruleId>
  </CDA:CDATemplate>
  <CDA:ValueSetConstraint xmi:id="_-lMo8HSCEeGa4IXs2ghZEw" identifier="2.16.840.1.113883.1.11.1" name="HL7 AdministrativeGenderCode"/>
  <CDA:CDATemplate xmi:id="_EFDesHSVEeGa4IXs2ghZEw" base_Class="_3dRe0HSUEeGa4IXs2ghZEw" templateId="2.16.840.1.1133883.17.3.10.1.17" templateVersion="2022-01-01">
    <ruleId>CONF:11393</ruleId>
  </CDA:CDATemplate>
  <CDA:PropertyValidation xmi:id="_djjwEns9EeGs2I-Db78R9w">
    <ruleId>CONF:5372</ruleId>
  </CDA:PropertyValidation>
  <CDA:ValueSetConstraint xmi:id="_djk-MHs9EeGs2I-Db78R9w">
    <reference href="pathmap://CONSOL_MODEL/consol-vocab.uml#_2SbZNRSVEeGGzu7fmW9pXw"/>
  </CDA:ValueSetConstraint>
  <CDA:PropertyValidation xmi:id="_-DZQw3tDEeGs2I-Db78R9w">
    <ruleId>CONF:9406</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_uyNtAHwEEeGW3cDolvqrTA" base_Class="_pIikMHwDEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.14" templateVersion="2022-01-01">
    <ruleId>CONF:11394</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_19lEcH9aEeGht55Sz1eBOw" base_Class="_i4C-AH9aEeGht55Sz1eBOw" templateId="2.16.840.1.1133883.17.3.10.1.12" templateVersion="2022-01-01">
    <ruleId>CONF:11395</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_vwwq8H9cEeGht55Sz1eBOw" base_Class="_nSjIgH9cEeGht55Sz1eBOw" templateId="2.16.840.1.1133883.17.3.10.1.13" templateVersion="2022-01-01">
    <ruleId>CONF:11396</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_1HUMgIzcEeGnhceUMXltng" base_Class="_VtMvAIzcEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.19" templateVersion="2022-01-01">
    <ruleId>CONF:11391</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_9vjNoIzcEeGnhceUMXltng" base_Class="_aDO5AIcnEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.15" templateVersion="2022-01-01">
    <ruleId>CONF:11397</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_4-4sQIziEeGnhceUMXltng" base_Class="_1XH7YIziEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.22" templateVersion="2022-01-01">
    <ruleId>CONF:11398</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_LBR30JoiEeG_FLcaRgAa7g" base_Class="_6223oJohEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.20" templateVersion="2022-01-01">
    <ruleId>CONF:11400</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_pLL-wJovEeG_FLcaRgAa7g" base_Class="_c7crcJovEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.18" templateVersion="2022-01-01">
    <ruleId>CONF:11403</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_i8pMAJunEeGzXI65shd6Fw" base_Class="_4QFw8JumEeGzXI65shd6Fw" templateId="2.16.840.1.1133883.17.3.10.1.21" templateVersion="2022-01-01">
    <ruleId>CONF:11404</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_bIdNwJ9nEeGw9ZRnaFfEZQ" base_Class="_OV4TIJ9nEeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.2" templateVersion="2022-01-01">
    <ruleId>CONF:11406</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_YpfO8J99EeGw9ZRnaFfEZQ" base_Class="_LI7M8J99EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.3" templateVersion="2022-01-01">
    <ruleId>CONF:11407</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_uS5Z0J-dEeGorI3CPDW2ww" base_Class="_i-lM8J-dEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.4" templateVersion="2022-01-01">
    <ruleId>CONF:11408</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_7_pEYJ-iEeGorI3CPDW2ww" base_Class="_iDmQYJ9mEeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.1" templateVersion="2022-01-01">
    <ruleId>CONF:11405</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_BeU6oJ-jEeGorI3CPDW2ww" base_Class="_jCzkkIzkEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.23" templateVersion="2022-01-01">
    <ruleId>CONF:11399</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_UM3A4J-kEeGorI3CPDW2ww" base_Class="_GGotEJ-kEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.6" templateVersion="2022-01-01">
    <ruleId>CONF:11413</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_eW46AJ-mEeGorI3CPDW2ww" base_Class="_aK7P4J-mEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.7" templateVersion="2022-01-01">
    <ruleId>CONF:11414</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_oGeIAKK3EeGOxth0BgV-QA" base_Class="_h3A8IKK3EeGOxth0BgV-QA" templateId="2.16.840.1.1133883.17.3.10.1.8" templateVersion="2022-01-01">
    <ruleId>CONF:11415</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_34FNUKK8EeGOxth0BgV-QA" base_Class="_olqMIKK8EeGOxth0BgV-QA" templateId="2.16.840.1.1133883.17.3.10.1.9" templateVersion="2022-01-01">
    <ruleId>CONF:11416</ruleId>
  </CDA:CDATemplate>
  <CDA:PropertyValidation xmi:id="_0bvFMKhBEeG79fAvHk6H4g" severity="WARNING"/>
  <CDA:CDATemplate xmi:id="_HtwEIKxCEeGLnrdLmr5TaQ" base_Class="_ClVY0KxCEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.10" templateVersion="2022-01-01">
    <ruleId>CONF:11417</ruleId>
  </CDA:CDATemplate>
  <CDA:PropertyValidation xmi:id="_pu1gUMHtEeGOXu0EprM3pw">
    <ruleId>CONF:10869</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_yQRV4MHtEeGOXu0EprM3pw" templateId="2.16.840.1.1133883.17.3.10.1.24" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01"/>
  <CDA:AssociationValidation xmi:id="_ZLZtwMHuEeGOXu0EprM3pw">
    <ruleId>CONF:10083</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_ZndXoMHuEeGOXu0EprM3pw">
    <ruleId>CONF:10089</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_oEqchcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10256</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2iuzIMH5EeGOXu0EprM3pw">
    <ruleId>CONF:10833</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_GV2tpcH6EeGOXu0EprM3pw">
    <ruleId>CONF:10246</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_hEsHwMH6EeGOXu0EprM3pw">
    <ruleId>CONF:10791</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_iyCaZcH6EeGOXu0EprM3pw">
    <ruleId>CONF:10800</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_k-MI5cH6EeGOXu0EprM3pw">
    <ruleId>CONF:10815</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_p0Fg1cH6EeGOXu0EprM3pw">
    <ruleId>CONF:10795</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_sW_idcH6EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10767</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_yFAYtMH7EeGOXu0EprM3pw">
    <ruleId>CONF:10137</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_LJi0NMH8EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10562</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_MDkMdMH8EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10567</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_kuzXJcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10663</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_lnVhpcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10667</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_m84YRcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10672</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_rkQzFcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10682</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_tSqOlcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10692</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_wESotcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10687</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_08REQMH8EeGOXu0EprM3pw">
    <ruleId>CONF:10677</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Tk-dhMH-EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10444</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_fgB6RcH-EeGOXu0EprM3pw">
    <ruleId>CONF:10704</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_gGtfxcH-EeGOXu0EprM3pw">
    <ruleId>CONF:10708</ruleId>
  </CDA:AssociationValidation>
  <CDA:ConformsTo xmi:id="_-U6TQMF7EeGgQc6fI_Esjg" base_Generalization="_17RuAJ99EeGw9ZRnaFfEZQ">
    <ruleId>CONF:10582</ruleId>
  </CDA:ConformsTo>
  <CDA:AssociationValidation xmi:id="_cFsE5cH_EeGOXu0EprM3pw">
    <ruleId>CONF:10581</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_eZ3uBcH_EeGOXu0EprM3pw">
    <ruleId>CONF:10625</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_fnFIBcH_EeGOXu0EprM3pw">
    <ruleId>CONF:10646</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Dcu8tcIAEeGOXu0EprM3pw">
    <ruleId>CONF:10740</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Fkaa4MIAEeGOXu0EprM3pw">
    <ruleId>CONF:10748</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Q0x74MIAEeGOXu0EprM3pw">
    <ruleId>CONF:10717</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_SsZk1cIAEeGOXu0EprM3pw">
    <ruleId>CONF:10727</ruleId>
  </CDA:AssociationValidation>
  <CDA:PropertyValidation xmi:id="_3PX-IJoiEeG_FLcaRgAa7g">
    <ruleId>CONF:10347</ruleId>
  </CDA:PropertyValidation>
  <CDA:AssociationValidation xmi:id="_kFhMxcIAEeGOXu0EprM3pw">
    <ruleId>CONF:10346</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_lAJB8MIAEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10417</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_mH2Q4MIAEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10422</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_nimXpcIAEeGOXu0EprM3pw">
    <ruleId>CONF:10426</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_oaiFNMIAEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10430</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_pZK3tcIAEeGOXu0EprM3pw">
    <ruleId>CONF:10434</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_1xTAQMcJEeGjDJAyT0XW9Q">
    <ruleId>CONF:10211</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_o9Dm0McLEeGjDJAyT0XW9Q">
    <ruleId>CONF:10223</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_1ws4cMcLEeGjDJAyT0XW9Q">
    <ruleId>CONF:10226</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_AzzZgMcMEeGjDJAyT0XW9Q" severity="INFO">
    <ruleId>CONF:10229</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_oGU2UMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10105</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_rbYtoMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10113</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_tClU8McPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10116</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_vkEaQMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10119</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_xmj2cMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10122</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_y7-xQMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10125</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_0eLj0McPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10128</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2uXdwMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10131</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_SD3AgMcWEeGjDJAyT0XW9Q">
    <ruleId>CONF:10805</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_XSxVYMcWEeGjDJAyT0XW9Q" severity="INFO">
    <ruleId>CONF:10810</ruleId>
  </CDA:AssociationValidation>
  <CDA:CDATemplate xmi:id="_HAbYwClBEeKLlLf58wNPLQ" base_Class="_xCcE0Iy7EeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.98" templateVersion="2022-01-01">
    <ruleId>CONF:11439</ruleId>
  </CDA:CDATemplate>
  <CDA:AssociationValidation xmi:id="_JU580ClBEeKLlLf58wNPLQ"/>
  <CDA:AssociationValidation xmi:id="_o4WhUCpFEeK1vdrMJapHMg"/>
  <CDA:AssociationValidation xmi:id="_qbdS0CpFEeK1vdrMJapHMg"/>
  <CDA:AssociationValidation xmi:id="_blUNsDZpEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_oLbZoDZpEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_ZlnNgDZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_abZmADZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_cDm58DZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_dpWIsDZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_eTpp8DZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_e_yXMDZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_fpGZ8DZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_gTy8wDZuEeKLbZOfNmD-hA"/>
  <CDA:PropertyValidation xmi:id="_V_r_YEJFEeK3I6jW34aYTg" severity="INFO">
    <ruleId>CONF:11180</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_v3VFQETWEeKEm6ZghGGtvw" base_Class="_Orea4IzrEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.23.1" templateVersion="2022-01-01">
    <ruleId>CONF:11419</ruleId>
  </CDA:CDATemplate>
  <CDA:AssociationValidation xmi:id="_oj1QMETbEeKEm6ZghGGtvw" severity="INFO"/>
  <CDA:AssociationValidation xmi:id="_l9si8Fg4EeK-i8RB1gvLUA" severity="INFO"/>
  <CDA:PropertyValidation xmi:id="_vXaGAMcJEeGjDJAyT0XW9Q">
    <ruleId>CONF:10205</ruleId>
  </CDA:PropertyValidation>
  <CDA:CodeSystemConstraint xmi:id="_uaz1sMcbEeGjDJAyT0XW9Q" code="67850-8" displayName="Drug allergy">
    <reference href="pathmap://TERM_MODEL/CodeSystems.uml#_3-cwsCWrEd-iTYfpNb4PkQ"/>
    <ruleId>CONF:10206</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:CodeSystemConstraint xmi:id="_l3drEIzEEeGnhceUMXltng" code="106190000" displayName="allergy">
    <reference href="pathmap://TERM_MODEL/CodeSystems.uml#_ya6aMCWsEd-iTYfpNb4PkQ"/>
    <ruleId>CONF:10207</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:PropertyValidation xmi:id="_Hok2AFtWEeKHUos6g4FwAg" severity="INFO"/>
  <CDA:PropertyValidation xmi:id="_K5wT8IjqEeKx3P4dlW9OSw" severity="INFO">
    <ruleId>CONF:7304</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_Au9-IIjuEeKx3P4dlW9OSw" base_Class="_koRz8IzsEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.176" templateVersion="2022-01-01">
    <ruleId>CONF:11537</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_DkbvYIjuEeKx3P4dlW9OSw" base_Class="_01XGkIzsEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.177" templateVersion="2022-01-01">
    <ruleId>CONF:11538</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_Hwu7QIjvEeKx3P4dlW9OSw" severity="INFO" base_Generalization="_1HuB4IzsEeGnhceUMXltng">
    <ruleId>CONF:11280</ruleId>
  </CDA:ConformsTo>
  <CDA:AssociationValidation xmi:id="_UXD80LMkEeKNbt70lHd2Eg"/>
  <CDA:AssociationValidation xmi:id="_Y-A50LMkEeKNbt70lHd2Eg" severity="INFO"/>
  <CDA:PropertyValidation xmi:id="_GE89K8OxEeKN86BM1f2PZA"/>
  <CDA:AssociationValidation xmi:id="_BTWusMO0EeKGkaWx5djLmw" severity="INFO"/>
  <CDA:CDATemplate xmi:id="_glO-wETXEeKEm6ZghGGtvw" base_Class="_GGe8UJojEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.178" templateVersion="2022-01-01">
    <ruleId>CONF:11505</ruleId>
  </CDA:CDATemplate>
  <CDA:AssociationValidation xmi:id="_BlWooMWsEeK3RfDsHamIUQ"/>
  <CDA:AssociationValidation xmi:id="_c_2E0MlPEeK2gbjCtOEivw"/>
  <CDA:CDATemplate xmi:id="_IqZVstICEeKRzPZKi7WbBQ" base_Class="_Qlqj8HwGEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.27" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11420</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZVtdICEeKRzPZKi7WbBQ" base_Class="_JnfD8IzoEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.28" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11421</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZVuNICEeKRzPZKi7WbBQ" base_Class="_Dq57UIzpEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.29" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11422</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZVvtICEeKRzPZKi7WbBQ" base_Class="_Dfaa4J-eEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.31" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11423</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZVxNICEeKRzPZKi7WbBQ" base_Class="_nv-0gp-fEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.33" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11424</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZVx9ICEeKRzPZKi7WbBQ" base_Class="_EagUtZ-fEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.34" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11425</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZVytICEeKRzPZKi7WbBQ" base_Class="_cm1D5Z-hEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.35" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11426</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZVzdICEeKRzPZKi7WbBQ" base_Class="_083apZ-hEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.36" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11427</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZV0NICEeKRzPZKi7WbBQ" base_Class="_Q4zL9Z-gEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.37" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11429</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZV09ICEeKRzPZKi7WbBQ" base_Class="_1u74sKxCEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.38" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11430</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZV1tICEeKRzPZKi7WbBQ" base_Class="_JKerYKxDEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.39" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11431</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZV2dICEeKRzPZKi7WbBQ" base_Class="_UyaX0KxDEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.40" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11432</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZV3NICEeKRzPZKi7WbBQ" base_Class="_iGh5QKxDEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.41" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11433</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZV39ICEeKRzPZKi7WbBQ" base_Class="_yt7JUKxDEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.42" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11434</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZV4tICEeKRzPZKi7WbBQ" base_Class="_6w124KxDEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.43" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11435</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZV5dICEeKRzPZKi7WbBQ" base_Class="_DaIA4KxEEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.44" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11436</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZV6NICEeKRzPZKi7WbBQ" base_Class="_KrhK4KxEEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.45" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11437</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZV69ICEeKRzPZKi7WbBQ" base_Class="_UFgZEKxEEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.46" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11438</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZV7tICEeKRzPZKi7WbBQ" base_Class="_xCcE0Iy7EeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.47" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01"/>
  <CDA:CDATemplate xmi:id="_IqZV8dICEeKRzPZKi7WbBQ" base_Class="_3C3WwMWqEeK3RfDsHamIUQ" templateId="2.16.840.1.1133883.17.3.10.1.48" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11440</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZV9NICEeKRzPZKi7WbBQ" base_Class="_CFApcIzGEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.49" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11441</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZV99ICEeKRzPZKi7WbBQ" base_Class="_KEFo8HSVEeGa4IXs2ghZEw" templateId="2.16.840.1.1133883.17.3.10.1.50" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11442</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZV-tICEeKRzPZKi7WbBQ" base_Class="_aS16EHSWEeGa4IXs2ghZEw" templateId="2.16.840.1.1133883.17.3.10.1.51" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11443</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZV_dICEeKRzPZKi7WbBQ" base_Class="_lTHsIIcXEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.52" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11444</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWANICEeKRzPZKi7WbBQ" base_Class="_vuraIIcZEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.53" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11445</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWA9ICEeKRzPZKi7WbBQ" base_Class="_nvhVwIcaEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.54" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11446</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWBtICEeKRzPZKi7WbBQ" base_Class="_zMwjMIccEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.55" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11447</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWCdICEeKRzPZKi7WbBQ" base_Class="_bsVJUIcdEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.56" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11448</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWDNICEeKRzPZKi7WbBQ" base_Class="_2lRhsIcdEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.57" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11449</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWD9ICEeKRzPZKi7WbBQ" base_Class="_auKbcIceEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.58" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11450</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWEtICEeKRzPZKi7WbBQ" base_Class="_wKL4IIceEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.59" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11451</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWFdICEeKRzPZKi7WbBQ" base_Class="_W_uRYIzdEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.60" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11452</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWGNICEeKRzPZKi7WbBQ" base_Class="_5XgZ4IzdEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.61" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11453</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWHtICEeKRzPZKi7WbBQ" base_Class="_KEZzkKg-EeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.63" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11456</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWIdICEeKRzPZKi7WbBQ" base_Class="_7nP0MKhCEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.64" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11457</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWJNICEeKRzPZKi7WbBQ" base_Class="_0C-8EKhDEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.65" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11458</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWJ9ICEeKRzPZKi7WbBQ" base_Class="_KOxo0KhEEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.66" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11459</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWKtICEeKRzPZKi7WbBQ" base_Class="_g5iJgKhEEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.67" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11460</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWLdICEeKRzPZKi7WbBQ" base_Class="_0mPksKhEEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.68" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11461</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWMNICEeKRzPZKi7WbBQ" base_Class="_NZgqAKhFEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.69" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11462</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWM9ICEeKRzPZKi7WbBQ" base_Class="_Mr964IzjEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.70" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11463</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWNtICEeKRzPZKi7WbBQ" base_Class="_oJHzkIzjEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.71" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11464</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWOdICEeKRzPZKi7WbBQ" base_Class="_5JQlAJovEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.72" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11465</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWPNICEeKRzPZKi7WbBQ" base_Class="_46UUAJ9nEeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.73" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11466</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWP9ICEeKRzPZKi7WbBQ" base_Class="__LltsJ97EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.74" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11467</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWQtICEeKRzPZKi7WbBQ" base_Class="_sUm-oIcnEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.75" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11468</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWSNICEeKRzPZKi7WbBQ" base_Class="_mwn8MIcoEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.77" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11469</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWS9ICEeKRzPZKi7WbBQ" base_Class="_zbYvIJoiEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.78" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11470</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWTtICEeKRzPZKi7WbBQ" base_Class="_sW8QcJosEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.79" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11474</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWUdICEeKRzPZKi7WbBQ" base_Class="_S1I0sJotEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.80" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11475</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWVNICEeKRzPZKi7WbBQ" base_Class="_rhjrIJotEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.81" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11476</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWV9ICEeKRzPZKi7WbBQ" base_Class="_HuCH8JouEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.82" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11477</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWWtICEeKRzPZKi7WbBQ" base_Class="_qlUP4JouEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.83" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11478</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWXdICEeKRzPZKi7WbBQ" base_Class="_Ox86UKK4EeGOxth0BgV-QA" templateId="2.16.840.1.1133883.17.3.10.1.84" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11479</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWY9ICEeKRzPZKi7WbBQ" base_Class="_wPLCkKK5EeGOxth0BgV-QA" templateId="2.16.840.1.1133883.17.3.10.1.86" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11480</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWZtICEeKRzPZKi7WbBQ" base_Class="_E-SEAKK8EeGOxth0BgV-QA" templateId="2.16.840.1.1133883.17.3.10.1.87" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11481</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWadICEeKRzPZKi7WbBQ" base_Class="_ayUKMMk3EeK2gbjCtOEivw" templateId="2.16.840.1.1133883.17.3.10.1.88" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11482</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWbNICEeKRzPZKi7WbBQ" base_Class="_p4XEAJ-kEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.89" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11483</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWb9ICEeKRzPZKi7WbBQ" base_Class="_gU4tMJ-lEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.90" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11484</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWctICEeKRzPZKi7WbBQ" base_Class="_rNkl4GleEeG4boS-IbG8Zw" templateId="2.16.840.1.1133883.17.3.10.1.91" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11485</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWddICEeKRzPZKi7WbBQ" base_Class="_To2-YGleEeG4boS-IbG8Zw" templateId="2.16.840.1.1133883.17.3.10.1.92" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11486</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWeNICEeKRzPZKi7WbBQ" base_Class="_rDpggp-mEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.93" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11487</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWe9ICEeKRzPZKi7WbBQ" base_Class="_n-zaBZ-nEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.94" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11488</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWftICEeKRzPZKi7WbBQ" base_Class="_0padgJ99EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.95" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11489</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWgdICEeKRzPZKi7WbBQ" base_Class="_MiN-UJ-BEeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.96" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11490</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWhNICEeKRzPZKi7WbBQ" base_Class="_yVviAJ-OEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.97" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11494</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IqZWh9ICEeKRzPZKi7WbBQ" base_Class="_l_V6IJ-bEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.182" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11495</ruleId>
  </CDA:CDATemplate>
  <CDA:AssociationValidation xmi:id="_yi4e8MHkEeGspaMtPNX3NA">
    <ruleId>CONF:10081</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_VesLcMHuEeGOXu0EprM3pw">
    <ruleId>CONF:10082</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_ojtiRcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10198</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_pM63VcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10199</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_p4qjBcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10136</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_q0w-5cHzEeGOXu0EprM3pw">
    <ruleId>CONF:10220</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_rJl_ZcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10221</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_rgp0hcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10222</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_soEIhcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10560</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_s_kplcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10561</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_uSS1tcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10656</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_u7NP1cHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10657</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_wIap1cHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10658</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_wvi7RcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10659</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_xhO25cHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10660</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_zJ-WVcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10095</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_zZTLxcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10096</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_znR9ZcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10097</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_z28KBcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10098</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_0xftxcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10099</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_1F4CVcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10100</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_1YBiRcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10101</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_1tSAlcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10102</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2CyWhcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10103</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2Xmv9cHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10104</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_BqfcoMH4EeGOXu0EprM3pw">
    <ruleId>CONF:10255</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_DpAXxcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10244</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_H0NM5cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10832</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_LDJ1JcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10759</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_LofW1cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10761</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_L8cNlcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10762</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_MLUXFcH4EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10763</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Mb04RcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10764</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_MwEC5cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10765</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_NBUyBcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10766</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_ODYE5cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10736</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_OqDqZcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10738</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_PjoWtcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10577</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_TIJmVcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10578</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Tq0OhcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10579</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_UGxxwMH4EeGOXu0EprM3pw">
    <ruleId>CONF:10580</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_U-IQhcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10714</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Vljc5cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10716</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_XbNW9cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10340</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_XpMIlcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10341</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_X2SJZcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10342</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_YEasBcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10343</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_YUoSRcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10344</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_YlcVdcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10345</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_ZJ5GVcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10702</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Zd-f9cH4EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10703</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_atHzpcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10062</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_a-YixcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10063</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_biripcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10443</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_fpb_1cH8EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10661</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_gBvvkMlPEeK2gbjCtOEivw"/>
  <CDA:CDATemplate xmi:id="_X2C4wJusEeGzXI65shd6Fw" base_Class="_K8JK8JuoEeGzXI65shd6Fw" templateId="2.16.840.1.1133883.17.3.10.1.181" templateVersion="2022-01-01">
    <ruleId>CONF:11496</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_tffVAJ0uEeGmCMENP40rhA" base_Class="_lVl1sJ0uEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.179" templateVersion="2022-01-01">
    <ruleId>CONF:11526</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_t4AbcJ4aEeGzbp5zEFWdWg" base_Class="_KR_lQJ4aEeGzbp5zEFWdWg" templateId="2.16.840.1.1133883.17.3.10.1.175" templateVersion="2022-01-01">
    <ruleId>CONF:11528</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_5wW8wIzzEeGnhceUMXltng" base_Class="_eKfCYIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.192" templateVersion="2022-01-01">
    <ruleId>CONF:11551</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30sNOUEeKU4pFWxuU9dw" base_Class="_iWVVYIy-EeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.102" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11498</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30sdOUEeKU4pFWxuU9dw" base_Class="_t_nG0IzYEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.103" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11499</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30stOUEeKU4pFWxuU9dw" base_Class="_UleZUIzZEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.104" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11500</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30s9OUEeKU4pFWxuU9dw" base_Class="_E9ekgJoxEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.105" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11501</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30tNOUEeKU4pFWxuU9dw" base_Class="_j9MusJsmEeGzXI65shd6Fw" templateId="2.16.840.1.1133883.17.3.10.1.106" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11502</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30tdOUEeKU4pFWxuU9dw" base_Class="_Qzy_cJsnEeGzXI65shd6Fw" templateId="2.16.840.1.1133883.17.3.10.1.107" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11503</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30ttOUEeKU4pFWxuU9dw" base_Class="_pVW0QJsoEeGzXI65shd6Fw" templateId="2.16.840.1.1133883.17.3.10.1.108" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11504</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30t9OUEeKU4pFWxuU9dw" base_Class="_GGe8UJojEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.109" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01"/>
  <CDA:CDATemplate xmi:id="_sP30uNOUEeKU4pFWxuU9dw" base_Class="_whTHIJojEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.110" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11506</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30utOUEeKU4pFWxuU9dw" base_Class="_QU_s0JolEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.112" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11507</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30u9OUEeKU4pFWxuU9dw" base_Class="_6VcsUJokEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.113" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11508</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30vNOUEeKU4pFWxuU9dw" base_Class="_oE3bcJolEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.114" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11509</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30vtOUEeKU4pFWxuU9dw" base_Class="_Zjp_UJomEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.116" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11510</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30v9OUEeKU4pFWxuU9dw" base_Class="_WMI_AJooEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.117" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11511</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30wNOUEeKU4pFWxuU9dw" base_Class="_O7rMoJopEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.118" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11512</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30wdOUEeKU4pFWxuU9dw" base_Class="_pgmc0JopEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.119" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11513</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30wtOUEeKU4pFWxuU9dw" base_Class="_NK7yUJoqEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.120" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11514</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30w9OUEeKU4pFWxuU9dw" base_Class="_rsLuIJoqEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.121" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11515</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30xNOUEeKU4pFWxuU9dw" base_Class="_EyfEMJorEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.122" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11516</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30xdOUEeKU4pFWxuU9dw" base_Class="_A65pUHwIEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.123" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11517</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30xtOUEeKU4pFWxuU9dw" base_Class="_tcPw4HwKEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.124" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11518</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30ydOUEeKU4pFWxuU9dw" base_Class="_Ia0ocHwREeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.127" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11519</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30ytOUEeKU4pFWxuU9dw" base_Class="_gnLCQHwSEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.128" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11520</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30y9OUEeKU4pFWxuU9dw" base_Class="_khXxgHwTEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.129" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11521</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30zNOUEeKU4pFWxuU9dw" base_Class="_edpw0JuqEeGzXI65shd6Fw" templateId="2.16.840.1.1133883.17.3.10.1.130" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11522</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30zdOUEeKU4pFWxuU9dw" base_Class="_0IBaIJ0sEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.131" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11523</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30ztOUEeKU4pFWxuU9dw" base_Class="_iZg7kJ0tEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.132" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11524</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30z9OUEeKU4pFWxuU9dw" base_Class="_D32TkJ0uEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.133" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11525</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP300NOUEeKU4pFWxuU9dw" base_Class="_lVl1sJ0uEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.134" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01"/>
  <CDA:CDATemplate xmi:id="_sP300dOUEeKU4pFWxuU9dw" base_Class="_Z3nhEJ0vEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.135" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11527</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP300tOUEeKU4pFWxuU9dw" base_Class="_KR_lQJ4aEeGzbp5zEFWdWg" templateId="2.16.840.1.1133883.17.3.10.1.136" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01"/>
  <CDA:CDATemplate xmi:id="_sP3009OUEeKU4pFWxuU9dw" base_Class="_N8t6kFhWEeK-i8RB1gvLUA" templateId="2.16.840.1.1133883.17.3.10.1.137" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11529</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP301NOUEeKU4pFWxuU9dw" base_Class="_4ZsacKg_EeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.138" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11530</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP301dOUEeKU4pFWxuU9dw" base_Class="_g93MsKhAEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.139" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11531</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP301tOUEeKU4pFWxuU9dw" base_Class="_YMy4UKhDEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.140" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11532</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP3019OUEeKU4pFWxuU9dw" base_Class="_gBOGYJorEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.141" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11533</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP302dOUEeKU4pFWxuU9dw" base_Class="_Orea4IzrEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.143" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01"/>
  <CDA:CDATemplate xmi:id="_sP302tOUEeKU4pFWxuU9dw" base_Class="_l4xA4IzrEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.144" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11534</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP3029OUEeKU4pFWxuU9dw" base_Class="__qJ7UIzrEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.145" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11535</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP303NOUEeKU4pFWxuU9dw" base_Class="_Q7VIMIzsEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.146" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11536</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP303dOUEeKU4pFWxuU9dw" base_Class="_koRz8IzsEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.147" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01"/>
  <CDA:CDATemplate xmi:id="_sP303tOUEeKU4pFWxuU9dw" base_Class="_01XGkIzsEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.148" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01"/>
  <CDA:CDATemplate xmi:id="_sP3039OUEeKU4pFWxuU9dw" base_Class="_MjD2kJ-nEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.149" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11539</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP304NOUEeKU4pFWxuU9dw" base_Class="_lC10cJ-BEeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.150" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11540</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP304dOUEeKU4pFWxuU9dw" base_Class="_sPMP9p-NEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.151" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11541</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP304tOUEeKU4pFWxuU9dw" base_Class="_UGLMFZ-OEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.152" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11542</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP3049OUEeKU4pFWxuU9dw" base_Class="_9i0HIJ99EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.153" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11543</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP305NOUEeKU4pFWxuU9dw" base_Class="_pCK4JZ9-EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.154" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11544</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP305dOUEeKU4pFWxuU9dw" base_Class="_Vo79JZ9_EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.155" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11545</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP305tOUEeKU4pFWxuU9dw" base_Class="_4qwhJZ9_EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.156" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11546</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP3059OUEeKU4pFWxuU9dw" base_Class="_e7LIFZ-AEeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.157" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11547</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP306NOUEeKU4pFWxuU9dw" base_Class="_WduLAIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.158" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11548</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP306dOUEeKU4pFWxuU9dw" base_Class="_ZLqX8IzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.159" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11549</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP306tOUEeKU4pFWxuU9dw" base_Class="_bxS9cIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.160" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11550</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP3069OUEeKU4pFWxuU9dw" base_Class="_eKfCYIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.161" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01"/>
  <CDA:CDATemplate xmi:id="_sP307NOUEeKU4pFWxuU9dw" base_Class="_hLJ-EIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.162" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11552</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP307dOUEeKU4pFWxuU9dw" base_Class="_9koR4IzuEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.163" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11553</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP307tOUEeKU4pFWxuU9dw" base_Class="_lnVLQIzuEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.164" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11554</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP3079OUEeKU4pFWxuU9dw" base_Class="_xgaHgIztEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.165" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11555</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP308NOUEeKU4pFWxuU9dw" base_Class="_jmDsgIztEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.166" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11556</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP308dOUEeKU4pFWxuU9dw" base_Class="_WFit0IztEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.167" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11557</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP308tOUEeKU4pFWxuU9dw" base_Class="_IU2lIIztEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.168" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11558</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP3089OUEeKU4pFWxuU9dw" base_Class="_uMxJUIzpEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.169" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11559</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP309NOUEeKU4pFWxuU9dw" base_Class="_RNfAcIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.170" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11560</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP309dOUEeKU4pFWxuU9dw" base_Class="_k-cIsJ-ZEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.171" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11561</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP309tOUEeKU4pFWxuU9dw" base_Class="_ib1zpZ-aEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.172" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11562</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP3099OUEeKU4pFWxuU9dw" base_Class="_7kghNZ-aEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.173" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11563</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30-NOUEeKU4pFWxuU9dw" base_Class="_TCM6tZ-bEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.174" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11418</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_Nfqs4GlIEeSkJq3_ArwgUw" base_Class="_JHDCEK9UEeO6uquZyO0R2Q" templateId="2.16.840.1.1133883.17.3.10.1.183" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11564</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_Jv0bwMtYEeSbT7e8VE5niQ" base_Class="_iIDnYMtXEeSbT7e8VE5niQ" templateId="2.16.840.1.1133883.17.3.10.1.184" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11565</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_mUC04MxCEeSOI6Ao2VuoSQ" base_Class="_Eb5OsMxCEeSOI6Ao2VuoSQ" templateId="2.16.840.1.1133883.17.3.10.1.104" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11567</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_tx_s0MxFEeSOI6Ao2VuoSQ" base_Class="_oKeDoMxFEeSOI6Ao2VuoSQ" templateId="2.16.840.1.1133883.17.3.10.1.186" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11568</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_EamI8M0YEeSJm6m0rTs9zw" base_Class="_7PIw4M0VEeSJm6m0rTs9zw" templateId="2.16.840.1.1133883.17.3.10.1.191" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11569</ruleId>
  </CDA:CDATemplate>
  <CDA:ValueSetConstraint xmi:id="_GJdgwNYnEeSOzuJFX8ssTQ">
    <reference href="../../org.openhealthtools.mdht.uml.cda.emspcr.model/model/emspcr-vocab.uml#_2NLqQNYmEeSOzuJFX8ssTQ"/>
    <ruleId>CONF:11628</ruleId>
  </CDA:ValueSetConstraint>
  <CDA:CDATemplate xmi:id="_7C1yQBLaEeWNDqETRUui8w" base_Class="_8rap8MtaEeSbT7e8VE5niQ" templateId="2.16.840.1.1133883.17.3.10.1.193" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11566</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_pTz4cETXEeKEm6ZghGGtvw" base_Class="_bFfQYJokEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.180" templateVersion="2022-01-01">
    <ruleId>CONF:11570</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sP30udOUEeKU4pFWxuU9dw" base_Class="_bFfQYJokEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.111" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01"/>
  <Ecore:EReference xmi:id="_MGBs8J73Ed6BCKDGgDgllw" xmlNamespace="##targetNamespace">
    <base_Property href="pathmap://CDA_MODEL/cda.uml#_tRpv0Eo-Ed6c3qsAxlFHaQ"/>
  </Ecore:EReference>
  <CDA:CDATemplate xmi:id="_IqZVu9ICEeKRzPZKi7WbBQ" base_Class="_F-GKoLMNEeKNbt70lHd2Eg" templateId="2.16.840.1.1133883.17.3.10.1.30" assigningAuthorityName="NEMSIS" templateVersion="2022-01-01">
    <ruleId>CONF:11571</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_q0d_gCVKEeyHwdMImhiDzQ" base_Class="_gTzdICVKEeyHwdMImhiDzQ" templateId="2.16.840.1.1133883.17.3.10.1.194" templateVersion="2022-01-01">
    <ruleId>CONF:11572</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_FcbwYDKjEeyOwtfRawW6Qw" base_Class="_uSA4MDKiEeyOwtfRawW6Qw" templateId="2.16.840.1.1133883.17.3.10.1.196" templateVersion="2022-01-01">
    <ruleId>CONF:11578</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_5hkO8DKkEeyOwtfRawW6Qw" base_Class="_2BpygDKkEeyOwtfRawW6Qw" templateId="2.16.840.1.1133883.17.3.10.1.197" templateVersion="2022-01-01">
    <ruleId>CONF:11583</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_U5nIsDKmEeyOwtfRawW6Qw" base_Class="_PFi4UDKmEeyOwtfRawW6Qw" templateId="2.16.840.1.1133883.17.3.10.1.198" templateVersion="2022-01-01">
    <ruleId>CONF:11588</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_N942QDKyEeyOwtfRawW6Qw" base_Class="_Kp-OcDKyEeyOwtfRawW6Qw" templateId="2.16.840.1.1133883.17.3.10.1.199" templateVersion="2022-01-01">
    <ruleId>CONF:11592</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_gZWvcEgQEeyD0_D2SJuFgA" base_Class="_Y9KOgEHMEeyzA5MgFxuJFA" templateId="2.16.840.1.1133883.17.3.10.1.195" templateVersion="2022-01-01">
    <ruleId>CONF:11609</ruleId>
  </CDA:CDATemplate>
  <Ecore:EPackage xmi:id="_-9FnYGaNEe2Mns8sNTkjCw" base_Package="_xpUkQGeQEeGtXKebdWh3hg" packageName="emspcr" nsPrefix="emspcr" nsURI="http://www.openhealthtools.org/mdht/uml/cda/emspcr" basePackage="org.openhealthtools.mdht.uml.cda" prefix="emspcr">
    <annotation>http://www.eclipse.org/mdht/uml initializers='org.openhealthtools.mdht.uml.cda.emspcr'</annotation>
  </Ecore:EPackage>
  <CDA:ConformsTo xmi:id="_-9GOcGaNEe2Mns8sNTkjCw" base_Generalization="_xs3ngWeQEeGtXKebdWh3hg"/>
  <Ecore:EClass xmi:id="_-9G1gGaNEe2Mns8sNTkjCw" base_Class="_xs1LQWeQEeGtXKebdWh3hg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='USRealmHeader2TemplateId PatientCareReportClassCode PatientCareReportMoodCode PatientCareReportId PatientCareReportCode PatientCareReportCodeP PatientCareReportTitle PatientCareReportConfidentialityCode PatientCareReportRecordTarget PatientCareReportCurrentMedication PatientCareReportAllergiesAndAdverseReactionsSection PatientCareReportPastMedicalHistorySection PatientCareReportSocialHistorySection PatientCareReportPhysicalAssessmentSection PatientCareReportProceduresPerformedSection PatientCareReportPatientCareNarrativeSection PatientCareReportSceneSection PatientCareReportComponentOf PatientCareReportDispatchSection PatientCareReportPersonnelAdverseEventSection PatientCareReportProtocolSection PatientCareReportResponseSection PatientCareReportSituationSection PatientCareReportVitalSignsSection PatientCareReportAuthorParticipation PatientCareReportCustodian PatientCareReportDocumentationOf PatientCareReportParticipant PatientCareReportInjuryIncidentDescriptionSection' templateId.root='2.16.840.1.1133883.17.3.10.2' templateId.extension='2022-01-01' classCode='DOCCLIN' moodCode='EVN' code.code='67796-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS patient care report - version 3 Document NEMSIS' constraints.validation.dependOn.PatientCareReportCode='PatientCareReportCodeP' title.mixed='EMS Patient Care Report' confidentialityCode.code='N' confidentialityCode.codeSystem='2.16.840.1.113883.5.25' confidentialityCode.codeSystemName='HL7 Confidentiality' constraints.validation.info='PatientCareReportVersionNumber PatientCareReportCardiacArrestEvent PatientCareReportMedicationsAdministeredSection PatientCareReportDispositionSection PatientCareReportTimesSection PatientCareReportRelatedDocument' constraints.validation.warning='PatientCareReportAdvanceDirectives PatientCareReportEMSBillingSection'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportRecordTarget constraints.validation.error='PatientCareReportRecordTargetPatientRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportRecordTargetPatientRole constraints.validation.error='PatientCareReportRecordTargetPatientRoleAddr PatientCareReportRecordTargetPatientRoleId PatientCareReportRecordTargetPatientRolePatient' constraints.validation.info='PatientCareReportRecordTargetPatientRoleTelecom'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportRecordTargetPatientRolePatient constraints.validation.warning='PatientCareReportRecordTargetPatientRolePatientBirthTime PatientCareReportRecordTargetPatientRolePatientName' ethnicGroupCode.codeSystem='2.16.840.1.113883.6.238' ethnicGroupCode.codeSystemName='Race and Ethnicity - CDC' constraints.validation.error='PatientCareReportRecordTargetPatientRolePatientEthnicGroupCode PatientCareReportRecordTargetPatientRolePatientRaceCode PatientCareReportRecordTargetPatientRolePatientRaceCodeP PatientCareReportRecordTargetPatientRolePatientSdtc:RaceCode PatientCareReportRecordTargetPatientRolePatientAdministrativeGenderCode PatientCareReportRecordTargetPatientRolePatientAdministrativeGenderCodeP' constraints.validation.info='PatientCareReportRecordTargetPatientRolePatientEthnicGroupCodeP PatientCareReportRecordTargetPatientRolePatientSdtc:RaceCodeP' constraints.validation.dependOn.PatientCareReportRecordTargetPatientRolePatientEthnicGroupCode='PatientCareReportRecordTargetPatientRolePatientEthnicGroupCodeP' raceCode.codeSystem='2.16.840.1.113883.6.238' raceCode.codeSystemName='Race and Ethnicity - CDC' sdtc:RaceCode.codeSystem='2.16.840.1.113883.6.238' sdtc:RaceCode.codeSystemName='Race and Ethnicity - CDC' constraints.validation.dependOn.PatientCareReportRecordTargetPatientRolePatientSdtc:RaceCode='PatientCareReportRecordTargetPatientRolePatientSdtc:RaceCodeP' administrativeGenderCode.codeSystem='2.16.840.1.113883.5.1' administrativeGenderCode.codeSystemName='AdministrativeGenderCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportAuthorParticipation constraints.validation.error='GeneralHeaderConstraintsAuthorAssignedAuthor'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportAuthorParticipationAuthorRole constraints.validation.error='PatientCareReportAuthorParticipationAuthorRoleId PatientCareReportAuthorParticipationAuthorRoleAddr PatientCareReportAuthorParticipationAuthorRoleTelecom' constraints.validation.info='PatientCareReportAuthorParticipationAuthorRoleHumanAuthor PatientCareReportAuthorParticipationAuthorRoleAuthoringDevice'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportAuthorParticipationAuthorRoleHumanAuthor constraints.validation.error='PatientCareReportAuthorParticipationAuthorRoleHumanAuthorName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportAuthorParticipationAuthorRoleAuthoringDevice constraints.validation.error='GeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceManufacturerModelName GeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceSoftwareName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportEncompassingEncounterRelationship typeCode='COMP' constraints.validation.error='PatientCareReportEncompassingEncounterRelationshipTypeCode PatientCareReportEncompassingEncounterRelationshipEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounter constraints.validation.error='PatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounterEffectiveTime PatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounterId PatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounterLocation' constraints.validation.info='PatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounterOtherAgencyAtSceneParticipation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounterLocation constraints.validation.error='PatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounterLocationHealthCareFacility'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounterLocationHealthCareFacility constraints.validation.error='PatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounterLocationHealthCareFacilityId PatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounterLocationHealthCareFacilityCode PatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounterLocationHealthCareFacilityCodeP PatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounterLocationHealthCareFacilityPlace' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounterLocationHealthCareFacilityPlace classCode='PLC' constraints.validation.error='PatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounterLocationHealthCareFacilityPlaceClassCode' constraints.validation.info='PatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounterLocationHealthCareFacilityPlaceName PatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounterLocationHealthCareFacilityPlaceAddr'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounterOtherAgencyAtSceneParticipation typeCode='CON' constraints.validation.error='PatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounterOtherAgencyAtSceneParticipationTypeCode PatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounterOtherAgencyAtSceneParticipationOtherAgencyAtSceneRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounterOtherAgencyAtSceneParticipationOtherAgencyAtSceneRole classCode='ASSIGNED' constraints.validation.error='PatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounterOtherAgencyAtSceneParticipationOtherAgencyAtSceneRoleClassCode PatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounterOtherAgencyAtSceneParticipationOtherAgencyAtSceneRoleRepresentedOrganization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounterOtherAgencyAtSceneParticipationOtherAgencyAtSceneRoleOtherAgencyAtScene constraints.validation.error='PatientCareReportEncompassingEncounterRelationshipEMSEncompassingEncounterOtherAgencyAtSceneParticipationOtherAgencyAtSceneRoleOtherAgencyAtSceneName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportCustodianParticipation constraints.validation.error='PatientCareReportCustodianParticipationCustodianRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportCustodianParticipationCustodianRole constraints.validation.error='PatientCareReportCustodianParticipationCustodianRoleCustodian'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportCustodianParticipationCustodianRoleCustodian constraints.validation.error='PatientCareReportCustodianParticipationCustodianRoleCustodianAddr PatientCareReportCustodianParticipationCustodianRoleCustodianId PatientCareReportCustodianParticipationCustodianRoleCustodianName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportServiceEventParticipation constraints.validation.error='PatientCareReportServiceEventParticipationServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportServiceEventParticipationServiceEvent code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='PatientCareReportServiceEventParticipationServiceEventCode PatientCareReportServiceEventParticipationServiceEventId PatientCareReportServiceEventParticipationServiceEventPerformerParticipation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportServiceEventParticipationServiceEventPerformerParticipation functionCode.codeSystem='2.16.840.1.113883.6.1' functionCode.codeSystemName='LOINC' constraints.validation.error='PatientCareReportServiceEventParticipationServiceEventPerformerParticipationFunctionCode PatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRole code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='PatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRoleCode PatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRoleCodeP PatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRoleId' constraints.validation.dependOn.PatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRoleCode='PatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRoleCodeP' constraints.validation.info='PatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRoleAddr PatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRoleTelecom PatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRolePerformer'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRolePerformer constraints.validation.error='PatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRolePerformerName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportParentDocumentRelationship typeCode='RPLC' constraints.validation.error='PatientCareReportParentDocumentRelationshipTypeCode' constraints.validation.info='PatientCareReportParentDocumentRelationshipParentDocument'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportParentDocumentRelationshipParentDocument constraints.validation.error='PatientCareReportParentDocumentRelationshipParentDocumentId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportDestinationParticipantParticipation typeCode='DST' constraints.validation.error='PatientCareReportDestinationParticipantParticipationTypeCode PatientCareReportDestinationParticipantParticipationTime'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportDestinationParticipantParticipationDestinationRole constraints.validation.error='PatientCareReportDestinationParticipantParticipationDestinationRoleAddr PatientCareReportDestinationParticipantParticipationDestinationRoleCode PatientCareReportDestinationParticipantParticipationDestinationRoleCodeP PatientCareReportDestinationParticipantParticipationDestinationRoleClassCode' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' classCode='SDLOC' constraints.validation.warning='PatientCareReportDestinationParticipantParticipationDestinationRoleId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__ArG4GaNEe2Mns8sNTkjCw" base_Class="_VtMvAIzcEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSPastMedicalHistorySectionTemplateId EMSPastMedicalHistorySectionCode EMSPastMedicalHistorySectionCodeP EMSPastMedicalHistorySectionTitle EMSPastMedicalHistorySectionText EMSPastMedicalHistorySectionExistenceOfHistoryOfCondition' templateId.root='2.16.840.1.1133883.17.3.10.1.19' templateId.extension='2022-01-01' code.code='67842-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Past Medical History Narrative NEMSIS' constraints.validation.info='EMSPastMedicalHistorySectionHistoryOfCondition'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__BEvgGaNEe2Mns8sNTkjCw" base_Class="_S-YTcGldEeG4boS-IbG8Zw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSBillingSectionTemplateId EMSBillingSectionCode EMSBillingSectionCodeP EMSBillingSectionTitle EMSBillingSectionText EMSBillingSectionLevelOfServiceObservation' templateId.root='2.16.840.1.1133883.17.3.10.1.5' templateId.extension='2022-01-01' code.code='67659-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Billing Narrative NEMSIS' constraints.validation.warning='EMSBillingSectionBillingCondition'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__BKPEmaNEe2Mns8sNTkjCw" base_Class="_3dRe0HSUEeGa4IXs2ghZEw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSInjuryIncidentDescriptionSectionTemplateId EMSInjuryIncidentDescriptionSectionCode EMSInjuryIncidentDescriptionSectionCodeP EMSInjuryIncidentDescriptionSectionTitle EMSInjuryIncidentDescriptionSectionText EMSInjuryIncidentDescriptionSectionInjuryCauseCategory EMSInjuryIncidentDescriptionSectionTraumaCenterCriteria EMSInjuryIncidentDescriptionSectionInjuryRiskFactor' templateId.root='2.16.840.1.1133883.17.3.10.1.17' templateId.extension='2022-01-01' code.code='67800-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Injury Incident Description Narrative NEMSIS' constraints.validation.warning='EMSInjuryIncidentDescriptionSectionInjuryMechanism' constraints.validation.info='EMSInjuryIncidentDescriptionSectionVehicleImpactArea EMSInjuryIncidentDescriptionSectionPatientLocationInVehicle EMSInjuryIncidentDescriptionSectionVehicleOccupantSafetyEquipment EMSInjuryIncidentDescriptionSectionAirbagDeploymentStatus EMSInjuryIncidentDescriptionSectionHeightOfFall EMSInjuryIncidentDescriptionSectionDisasterType'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__B7rIWaNEe2Mns8sNTkjCw" base_Class="_pIikMHwDEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSCardiacArrestEventSectionTemplateId EMSCardiacArrestEventSectionCode EMSCardiacArrestEventSectionCodeP EMSCardiacArrestEventSectionTitle EMSCardiacArrestEventSectionText EMSCardiacArrestEventSectionCardiacArrestExistence' templateId.root='2.16.840.1.1133883.17.3.10.1.14' templateId.extension='2022-01-01' code.code='67799-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Cardiac Arrest Event Narrative NEMSIS' title.mixed='EMS Cardiac Arrest Event'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__CSQcWaNEe2Mns8sNTkjCw" base_Class="_Qlqj8HwGEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CardiacArrestCardiacArrestCauseRelationship CardiacArrestCardiacArrestInformantParticipation CardiacArrestSpontaneousCirculationRelationship CardiacArrestDestinationRhythmRelationship CardiacArrestArrestRhythmRelationship CardiacArrestTemplateId CardiacArrestMoodCode CardiacArrestCode CardiacArrestEffectiveTime CardiacArrestValue CardiacArrestCardiacArrestTimingRelationship CardiacArrestCardiacArrestOutcomeRelationship' templateId.root='2.16.840.1.1133883.17.3.10.1.27' templateId.extension='2022-01-01' moodCode='EVN' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='ActCode' code.displayName='ASSERTION' constraints.validation.warning='CardiacArrestNegationInd' value.code='410429000' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMED CT' value.displayName='cardiac arrest'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestCardiacArrestTimingRelationship typeCode='SUBJ' constraints.validation.error='CardiacArrestCardiacArrestTimingRelationshipTypeCode CardiacArrestCardiacArrestTimingRelationshipInversionInd' inversionInd='TRUE'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestCardiacArrestCauseRelationship constraints.validation.error='CardiacArrestCardiacArrestCauseRelationshipCardiacArrestCause CardiacArrestCardiacArrestCauseRelationshipTypeCode CardiacArrestCardiacArrestCauseRelationshipInversionInd' typeCode='SUBJ' inversionInd='TRUE'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestCardiacArrestInformantParticipation constraints.validation.error='CardiacArrestCardiacArrestInformantParticipationCardiacArrestInformantRole CardiacArrestCardiacArrestInformantParticipationTypeCode' typeCode='INF'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestCardiacArrestInformantParticipationCardiacArrestInformantRole classCode='AGNT' constraints.validation.error='CardiacArrestCardiacArrestInformantParticipationCardiacArrestInformantRoleClassCode CardiacArrestCardiacArrestInformantParticipationCardiacArrestInformantRoleCode' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestPriorAEDRelationship typeCode='SUBJ' constraints.validation.error='CardiacArrestPriorAEDRelationshipTypeCode CardiacArrestPriorAEDRelationshipInversionInd' inversionInd='TRUE'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestArrestRhythmRelationship constraints.validation.error='CardiacArrestArrestRhythmRelationshipObservation CardiacArrestArrestRhythmRelationshipTypeCode CardiacArrestArrestRhythmRelationshipInversionInd' typeCode='SUBJ' inversionInd='TRUE'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestSpontaneousCirculationRelationship constraints.validation.error='CardiacArrestSpontaneousCirculationRelationshipReturnOfSpontaneousCirculation CardiacArrestSpontaneousCirculationRelationshipTypeCode CardiacArrestSpontaneousCirculationRelationshipInversionInd' typeCode='SUBJ' inversionInd='TRUE'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestDestinationRhythmRelationship constraints.validation.error='CardiacArrestDestinationRhythmRelationshipDestinationRhythm CardiacArrestDestinationRhythmRelationshipTypeCode CardiacArrestDestinationRhythmRelationshipInversionInd' typeCode='SUBJ' inversionInd='TRUE'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestCardiacArrestOutcomeRelationship typeCode='COMP' constraints.validation.error='CardiacArrestCardiacArrestOutcomeRelationshipTypeCode CardiacArrestCardiacArrestOutcomeRelationshipCardiacArrestOutcome'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__C5UcmaNEe2Mns8sNTkjCw" base_Class="_i4C-AH9aEeGht55Sz1eBOw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSAdvanceDirectivesSectionTemplateId EMSAdvanceDirectivesSectionCode EMSAdvanceDirectivesSectionCodeP EMSAdvanceDirectivesSectionTitle EMSAdvanceDirectivesSectionText EMSAdvanceDirectivesSectionAdvancedDirectiveObservation' templateId.root='2.16.840.1.1133883.17.3.10.1.12' templateId.extension='2022-01-01' code.code='67840-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Advance Directives Narrative NEMSIS'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__C-M8maNEe2Mns8sNTkjCw" base_Class="_nSjIgH9cEeGht55Sz1eBOw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSAllergiesAndAdverseReactionsSectionTemplateId EMSAllergiesAndAdverseReactionsSectionCode EMSAllergiesAndAdverseReactionsSectionCodeP EMSAllergiesAndAdverseReactionsSectionTitle EMSAllergiesAndAdverseReactionsSectionText EMSAllergiesAndAdverseReactionsSectionEnvironmentalAllergies EMSAllergiesAndAdverseReactionsSectionEMSDrugAllergyOrganizer' templateId.root='2.16.840.1.1133883.17.3.10.1.13' templateId.extension='2022-01-01' code.code='48765-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Allergies and adverse reactions Document'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__DDsgmaNEe2Mns8sNTkjCw" base_Class="_aDO5AIcnEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSCurrentMedicationSectionTemplateId EMSCurrentMedicationSectionCode EMSCurrentMedicationSectionCodeP EMSCurrentMedicationSectionTitle EMSCurrentMedicationSectionText EMSCurrentMedicationSectionCurrentlyOnMedication' templateId.root='2.16.840.1.1133883.17.3.10.1.15' templateId.extension='2022-01-01' code.code='67844-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS current Medications Narrative NEMSIS' constraints.validation.info='EMSCurrentMedicationSectionCurrentMedication'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__D6oImaNEe2Mns8sNTkjCw" base_Class="_CFApcIzGEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NonDrugAllergyOrganizerExistenceOfNonDrugAllergy NonDrugAllergyOrganizerTemplateId' constraints.validation.info='NonDrugAllergyOrganizerNonDrugAllergy' templateId.root='2.16.840.1.1133883.17.3.10.1.49' templateId.extension='2022-01-01'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrNonDrugAllergyOrganizerExistenceOFNonDrugAllergy constraints.validation.error='NonDrugAllergyOrganizerExistenceOFNonDrugAllergyObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrNonDrugAllergyOrganizerNonDrugAllergy constraints.validation.error='NonDrugAllergyOrganizerNonDrugAllergyObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__EUQwmaNEe2Mns8sNTkjCw" base_Class="_1XH7YIziEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSSocialHistorySectionTemplateId EMSSocialHistorySectionCode EMSSocialHistorySectionCodeP EMSSocialHistorySectionTitle EMSSocialHistorySectionText EMSSocialHistorySectionExistenceOfDrugUseIndication' templateId.root='2.16.840.1.1133883.17.3.10.1.22' templateId.extension='2022-01-01' code.code='67843-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Social History Narrative NEMSIS' constraints.validation.info='EMSSocialHistorySectionDrugUseIndication'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__EhsImaNEe2Mns8sNTkjCw" base_Class="_jCzkkIzkEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSVitalSignsSectionTemplateId EMSVitalSignsSectionCode EMSVitalSignsSectionCodeP EMSVitalSignsSectionTitle EMSVitalSignsSectionText EMSVitalSignsSectionVitalSignsOrganizer' templateId.root='2.16.840.1.1133883.17.3.10.1.23' templateId.extension='2022-01-01' code.code='8716-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Vital Signs'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__EnLsmaNEe2Mns8sNTkjCw" base_Class="_6223oJohEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSPhysicalAssessmentSectionTemplateId EMSPhysicalAssessmentSectionCode EMSPhysicalAssessmentSectionCodeP EMSPhysicalAssessmentSectionTitle EMSPhysicalAssessmentSectionText EMSPhysicalAssessmentSectionPatientAge EMSPhysicalAssessmentSectionThrombolyticContraindications EMSPhysicalAssessmentSectionBarriersToPatientCare' templateId.root='2.16.840.1.1133883.17.3.10.1.20' templateId.extension='2022-01-01' code.code='29545-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings Narrative' constraints.validation.warning='EMSPhysicalAssessmentSectionPhysicalAssessmentOrganizer' constraints.validation.info='EMSPhysicalAssessmentSectionPatientPregnancy EMSPhysicalAssessmentSectionLastOralIntake EMSPhysicalAssessmentSectionBodyWeight EMSPhysicalAssessmentSectionLengthBasedBodyWeight'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__E0nEmaNEe2Mns8sNTkjCw" base_Class="_c7crcJovEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSMedicationsAdministeredSectionTemplateId EMSMedicationsAdministeredSectionCode EMSMedicationsAdministeredSectionCodeP EMSMedicationsAdministeredSectionTitle EMSMedicationsAdministeredSectionText' templateId.root='2.16.840.1.1133883.17.3.10.1.18' templateId.extension='2022-01-01' code.code='67849-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Medications Administered Narrative NEMSIS' constraints.validation.info='EMSMedicationsAdministeredSectionMedicationAdministered'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__FBbYmaNEe2Mns8sNTkjCw" base_Class="_5JQlAJovEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='MedicationAdministeredMedicationNotAdministeredEntryRelationship MedicationAdministeredMedicationComplicationRelationship MedicationAdministeredMedicationPerformerParticipation MedicationAdministeredMedicationAuthorizationRelationship MedicationAdministeredMedicationAdministrationDeviceParticipant MedicationAdministeredNegationInd MedicationAdministeredRouteCodeP MedicationAdministeredDoseQuantity MedicationAdministeredRateQuantity MedicationAdministeredApproachSiteCodeP' constraints.validation.error='MedicationAdministeredMedicationConsumable MedicationAdministeredMedicationAdministeredResponseRelationship MedicationAdministeredMedicationPriorAdministrationRelationship MedicationAdministeredTemplateId MedicationAdministeredClassCode MedicationAdministeredEffectiveTime MedicationAdministeredRouteCode MedicationAdministeredApproachSiteCode' templateId.root='2.16.840.1.1133883.17.3.10.1.72' templateId.extension='2022-01-01' classCode='SBADM' routeCode.codeSystem='2.16.840.1.113883.3.26.1.1.1' routeCode.codeSystemName='FDA Route of Administration' constraints.validation.dependOn.MedicationAdministeredRouteCode='MedicationAdministeredRouteCodeP' approachSiteCode.codeSystem='2.16.840.1.113883.6.96' approachSiteCode.codeSystemName='SNOMED CT'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationNotAdministeredReasonEntryRelationship constraints.validation.error='MedicationAdministeredMedicationNotAdministeredReasonEntryRelationshipMedicationNotAdministeredReasonObservation MedicationAdministeredMedicationNotAdministeredReasonEntryRelationshipInversionInd MedicationAdministeredMedicationNotAdministeredReasonEntryRelationshipTypeCode MedicationAdministeredMedicationNotAdministeredReasonEntryRelationshipTypeCodeP' inversionInd='TRUE' typeCode='RSON' constraints.validation.dependOn.MedicationAdministeredMedicationNotAdministeredReasonEntryRelationshipTypeCode='MedicationAdministeredMedicationNotAdministeredReasonEntryRelationshipTypeCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministeredConsumable constraints.validation.error='MedicationAdministeredMedicationAdministeredConsumableMedicationManfacturedProduct'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministeredConsumableMedicationManfacturedProduct constraints.validation.error='MedicationAdministeredMedicationAdministeredConsumableMedicationManfacturedProductMedicationLabeledDrug'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministeredConsumableMedicationManfacturedProductMedicationMaterial code.codeSystem='2.16.840.1.113883.6.88' code.codeSystemName='RxNorm' constraints.validation.warning='MedicationAdministeredMedicationAdministeredConsumableMedicationManfacturedProductMedicationMaterialCode' constraints.validation.error='MedicationAdministeredMedicationAdministeredConsumableMedicationManfacturedProductMedicationMaterialCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministeredResponseRelationship constraints.validation.error='MedicationAdministeredMedicationAdministeredResponseRelationshipMedicationResponseObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationComplicationRelationship constraints.validation.error='MedicationAdministeredMedicationComplicationRelationshipMedicationComplicationObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationPriorAdministrationRelationship constraints.validation.error='MedicationAdministeredMedicationPriorAdministrationRelationshipMedicationPriorAdministrationObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationPerformerParticipation constraints.validation.error='MedicationAdministeredMedicationPerformerParticipationMedicationPerformerRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationPerformerParticipationMedicationPerformerRole constraints.validation.error='MedicationAdministeredMedicationPerformerParticipationMedicationPerformerRoleId MedicationAdministeredMedicationPerformerParticipationMedicationPerformerRoleCode MedicationAdministeredMedicationPerformerParticipationMedicationPerformerRoleCodeP' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAuthorizationRelationship constraints.validation.error='MedicationAdministeredMedicationAuthorizationRelationshipMedicationAuthorization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAuthorizationRelationshipMedicationAuthorization classCode='INFRM' constraints.validation.error='MedicationAdministeredMedicationAuthorizationRelationshipMedicationAuthorizationClassCode MedicationAdministeredMedicationAuthorizationRelationshipMedicationAuthorizationClassCodeP MedicationAdministeredMedicationAuthorizationRelationshipMedicationAuthorizationCode' constraints.validation.dependOn.MedicationAdministeredMedicationAuthorizationRelationshipMedicationAuthorizationClassCode='MedicationAdministeredMedicationAuthorizationRelationshipMedicationAuthorizationClassCodeP' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministrationDeviceParticipant constraints.validation.error='MedicationAdministeredMedicationAdministrationDeviceParticipantMedicationAdministrationDeviceRole MedicationAdministeredMedicationAdministrationDeviceParticipantTypeCode' typeCode='DEV'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministrationDeviceParticipantMedicationAdministrationDeviceRole constraints.validation.error='MedicationAdministeredMedicationAdministrationDeviceParticipantMedicationAdministrationDeviceRoleMedicationAdministrationDevice MedicationAdministeredMedicationAdministrationDeviceParticipantMedicationAdministrationDeviceRoleClassCode' classCode='MANU'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministrationDeviceParticipantMedicationAdministrationDeviceRoleMedicationAdministrationDevice code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' constraints.validation.error='MedicationAdministeredMedicationAdministrationDeviceParticipantMedicationAdministrationDeviceRoleMedicationAdministrationDeviceCode MedicationAdministeredMedicationAdministrationDeviceParticipantMedicationAdministrationDeviceRoleMedicationAdministrationDeviceCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__HEp12aNEe2Mns8sNTkjCw" base_Class="_4QFw8JumEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSProceduresPerformedSectionTemplateId EMSProceduresPerformedSectionCode EMSProceduresPerformedSectionCodeP EMSProceduresPerformedSectionTitle EMSProceduresPerformedSectionText' templateId.root='2.16.840.1.1133883.17.3.10.1.21' templateId.extension='2022-01-01' code.code='29554-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure Narrative' constraints.validation.info='EMSProceduresPerformedSectionProcedureActivityProcedure1'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__HaoEGaNEe2Mns8sNTkjCw" base_Class="_K8JK8JuoEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='ProcedureAbandonedProcedureRelationship ProcedurePriorRelationship ProcedureNumberOfAttemptsRelationship ProcedureComplicationsRelationship ProcedureAirwayConfirmationRelationship ProcedureReasonProcedureNotAttemptedRelationship ProcedureNegationInd ProcedureStatusCode ProcedureApproachSiteCodeP ProcedureDeviceParticipation' constraints.validation.warning='ProcedureSuccessfulRelationship ProcedurePatientResponseRelationship ProcedurePerformer' constraints.validation.error='ProcedureTemplateId ProcedureCode ProcedureCodeP ProcedureEffectiveTime ProcedureApproachSiteCode' templateId.root='2.16.840.1.1133883.17.3.10.1.181' templateId.extension='2022-01-01' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMED CT' approachSiteCode.codeSystem='2.16.840.1.113883.6.1' approachSiteCode.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureAbandonedProcedureRelationship constraints.validation.error='ProcedureAbandonedProcedureRelationshipAbandonedProcedureReasonObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedurePriorRelationship constraints.validation.error='ProcedureProcedurePriorRelationshipProcedurePriorIndicator'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedureNumberOfAttemptsRelationship constraints.validation.error='ProcedureProcedureNumberOfAttemptsRelationshipProcedureNumberOfAttemptsObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedureSuccessfulRelationship constraints.validation.error='ProcedureProcedureSuccessfulRelationshipProcedureSuccessfulObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedureComplicationsRelationship constraints.validation.error='ProcedureProcedureComplicationsRelationshipProcedureComplicationsObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedurePatientResponseRelationship constraints.validation.error='ProcedureProcedurePatientResponseRelationshipProcedurePatientResponseObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedurePerformer constraints.validation.error='ProcedureProcedurePerformerProcedurePerformerEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedurePerformerProcedurePerformerEntity constraints.validation.info='ProcedureProcedurePerformerProcedurePerformerEntityId' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='ProcedureProcedurePerformerProcedurePerformerEntityCode ProcedureProcedurePerformerProcedurePerformerEntityCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureAirwayConfirmationRelationship constraints.validation.error='ProcedureAirwayConfirmationRelationshipAirwayConfirmationObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureReasonProcedureNotAttemptedRelationship constraints.validation.error='ProcedureReasonProcedureNotAttemptedRelationshipReasonProcedureNotAttemptedObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureAirwayDeviceParticipant constraints.validation.error='ProcedureAirwayDeviceParticipantAirwayDeviceParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureAirwayDeviceParticipantAirwayDeviceParticipantRole constraints.validation.error='ProcedureAirwayDeviceParticipantAirwayDeviceParticipantRoleAirwayDeviceParticipantType'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureAirwayDeviceParticipantAirwayDeviceParticipantRoleAirwayDeviceParticipantType code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='ProcedureAirwayDeviceParticipantAirwayDeviceParticipantRoleAirwayDeviceParticipantTypeCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__JuVMmaNEe2Mns8sNTkjCw" base_Class="_iDmQYJ9mEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSPatientCareNarrativeSectionTemplateId EMSPatientCareNarrativeSectionCode EMSPatientCareNarrativeSectionCodeP EMSPatientCareNarrativeSectionTitle EMSPatientCareNarrativeSectionText' templateId.root='2.16.840.1.1133883.17.3.10.1.1' templateId.extension='2022-01-01' code.code='67781-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Summarization of Encounter Note Narrative'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__J8XoGaNEe2Mns8sNTkjCw" base_Class="_OV4TIJ9nEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSDispatchSectionTemplateId EMSDispatchSectionCode EMSDispatchSectionCodeP EMSDispatchSectionTitle EMSDispatchSectionText EMSDispatchSectionEmergencyMedicalDispatchObservation EMSDispatchSectionComplaintReportedByDispatch' templateId.root='2.16.840.1.1133883.17.3.10.1.2' templateId.extension='2022-01-01' code.code='67660-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Dispatch Narrative NEMSIS'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__KB3MGaNEe2Mns8sNTkjCw" base_Class="_LI7M8J99EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSResponseSectionTemplateId EMSResponseSectionCode EMSResponseSectionCodeP EMSResponseSectionTitle EMSResponseSectionText EMSResponseSectionDelayOrganizer EMSResponseSectionDispatchLocationOrganizer EMSResponseSectionResponseOdometerReadingOrganizer EMSResponseSectionResponseModeToScene' templateId.root='2.16.840.1.1133883.17.3.10.1.3' templateId.extension='2022-01-01' code.code='67664-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Response Narrative NEMSIS'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__KYcgGaNEe2Mns8sNTkjCw" base_Class="_0padgJ99EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DelayOrganizerDispatchDelayRelationship DelayOrganizerResponseDelayRelationship DelayOrganizerSceneDelayRelationship DelayOrganizerTransportDelayRelationship DelayOrganizerTurnaoundDelayRelationship DelayOrganizerTemplateId' templateId.root='2.16.840.1.1133883.17.3.10.1.95' templateId.extension='2022-01-01'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDelayOrganizerDispatchDelayRelationship constraints.validation.error='DelayOrganizerDispatchDelayRelationshipDispatchDelay'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDelayOrganizerResponseDelayRelationship constraints.validation.error='DelayOrganizerResponseDelayRelationshipResponseDelay'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDelayOrganizerSceneDelayRelationship constraints.validation.error='DelayOrganizerSceneDelayRelationshipSceneDelay'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDelayOrganizerTransportDelayRelationship constraints.validation.error='DelayOrganizerTransportDelayRelationshipTransportDelay'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDelayOrganizerTurnaoundDelayRelationship constraints.validation.error='DelayOrganizerTurnaoundDelayRelationshipTurnaroundDelay'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__Lpn0GaNEe2Mns8sNTkjCw" base_Class="_MiN-UJ-BEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='DispatchLocationOrganizerDispatchLocationNameRelationship DispatchLocationOrganizerDispatchLocationLatitudeRelationship DispatchLocationOrganizerDispatchLocationLongtudeRelationship' constraints.validation.error='DispatchLocationOrganizerTemplateId' templateId.root='2.16.840.1.1133883.17.3.10.1.96' templateId.extension='2022-01-01'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDispatchLocationOrganizerDispatchLocationNameRelationship constraints.validation.error='DispatchLocationOrganizerDispatchLocationNameRelationshipDispatchLocationName DispatchLocationOrganizerDispatchLocationNameRelationshipTemplateId' templateId.root='null'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDispatchLocationOrganizerDispatchLocationLatitudeRelationship constraints.validation.error='DispatchLocationOrganizerDispatchLocationLatitudeRelationshipDispatchLocationLatitude DispatchLocationOrganizerDispatchLocationLatitudeRelationshipTemplateId' templateId.root='null'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDispatchLocationOrganizerDispatchLocationLongitudeRelationship constraints.validation.error='DispatchLocationOrganizerDispatchLocationLongitudeRelationshipObservation DispatchLocationOrganizerDispatchLocationLongitudeRelationshipTemplateId' templateId.root='null'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__MUWMmaNEe2Mns8sNTkjCw" base_Class="_yVviAJ-OEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='ResponseOdometerReadingOrganizerResponseBeginningOdometerReadingRelationship ResponseOdometerReadingOrganizerResponseOnSceneOdometerReadingRelationship ResponseOdometerReadingOrganizerResponseDestinationOdometerReadingRelationship ResponseOdometerReadingOrganizerResponseEndingOdometerReadingRelationship' constraints.validation.error='ResponseOdometerReadingOrganizerTemplateId' templateId.root='2.16.840.1.1133883.17.3.10.1.97' templateId.extension='2022-01-01'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrResponseOdometerReadingOrganizerResponseBeginningOdometerReadingRelationship constraints.validation.error='ResponseOdometerReadingOrganizerResponseBeginningOdometerReadingRelationshipResponseBeginningOdometerReading'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrResponseOdometerReadingOrganizerResponseOnSceneOdometerReadingRelationship constraints.validation.error='ResponseOdometerReadingOrganizerResponseOnSceneOdometerReadingRelationshipResponseOnSceneOdometerReading'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrResponseOdometerReadingOrganizerResponseDestinationOdometerReadingRelationship constraints.validation.error='ResponseOdometerReadingOrganizerResponseDestinationOdometerReadingRelationshipResponseDestinationOdometerReading'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrResponseOdometerReadingOrganizerResponseEndingOdometerReadingRelationship constraints.validation.error='ResponseOdometerReadingOrganizerResponseEndingOdometerReadingRelationshipResponseEndingOdometerReading'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__MxCI2aNEe2Mns8sNTkjCw" base_Class="_i-lM8J-dEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSDispositionSectionTemplateId EMSDispositionSectionCode EMSDispositionSectionCodeP EMSDispositionSectionTitle EMSDispositionSectionText EMSDispositionSectionTransportModeObservation EMSDispositionSectionTransportMethodObservation EMSDispositionSectionReasonForChoosingDestinationObservation EMSDispositionSectionPrearrivalActivationObservation EMSDispositionSectionPatientConditionChangeAtDestinationObservation EMSDispositionSectionPrimaryDestinationHospitalCapability EMSDispositionSectionDestinationWard EMSDispositionSectionUnitDisposition EMSDispositionSectionPatientEngagement EMSDispositionSectionCrewDisposition EMSDispositionSectionTransportDisposition' templateId.root='2.16.840.1.1133883.17.3.10.1.4' templateId.extension='2022-01-01' code.code='67661-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Disposition Narrative NEMSIS' title.mixed='EMS Disposition' constraints.validation.info='EMSDispositionSectionNumberOfPatientsObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__M2hsmaNEe2Mns8sNTkjCw" base_Class="_GGotEJ-kEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSPersonnelAdverseEventSectionTemplateId EMSPersonnelAdverseEventSectionCode EMSPersonnelAdverseEventSectionCodeP EMSPersonnelAdverseEventSectionTitle EMSPersonnelAdverseEventSectionText EMSPersonnelAdverseEventSectionAdverseEventIndicator' templateId.root='2.16.840.1.1133883.17.3.10.1.6' templateId.extension='2022-01-01' code.code='67658-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Exposures or Injuries of EMS Personnel Provider Narrative NEMSIS' constraints.validation.info='EMSPersonnelAdverseEventSectionAdverseEventTypeObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__M8BQGaNEe2Mns8sNTkjCw" base_Class="_aK7P4J-mEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSProtocolSectionTemplateId EMSProtocolSectionCode EMSProtocolSectionCodeP EMSProtocolSectionTitle EMSProtocolSectionText EMSProtocolSectionProtocolObservation' templateId.root='2.16.840.1.1133883.17.3.10.1.7' templateId.extension='2022-01-01' code.code='67663-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Protocol Narrative NEMSIS' constraints.validation.info='EMSProtocolSectionCandidatePatientRegistryType'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__NBg0maNEe2Mns8sNTkjCw" base_Class="_h3A8IKK3EeGOxth0BgV-QA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSSceneSectionTemplateId EMSSceneSectionCode EMSSceneSectionCodeP EMSSceneSectionTitle EMSSceneSectionText EMSSceneSectionFirstUnitIndicator EMSSceneSectionScenePatientCount EMSSceneSectionMassCasualtyIndicator EMSSceneSectionLocationTypeObservation' templateId.root='2.16.840.1.1133883.17.3.10.1.8' templateId.extension='2022-01-01' code.code='67665-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Scene Narrative NEMSIS'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__NNuFmaNEe2Mns8sNTkjCw" base_Class="_olqMIKK8EeGOxth0BgV-QA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSSituationSectionTemplateId EMSSituationSectionCode EMSSituationSectionCodeP EMSSituationSectionTitle EMSSituationSectionText EMSSituationSectionComplaint EMSSituationSectionPossibleInjury EMSSituationSectionProviderPrimaryImpression EMSSituationSectionPrimarySymptom EMSSituationSectionOtherSymptoms EMSSituationSectionProviderSecondaryImpressions EMSSituationSectionInitialPatientAcuity' templateId.root='2.16.840.1.1133883.17.3.10.1.9' templateId.extension='2022-01-01' code.code='67666-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Situation Narrative NEMSIS'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__NmvomaNEe2Mns8sNTkjCw" base_Class="_KEZzkKg-EeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='ComplaintDurationRelationship ComplaintTypeRelationship ComplaintValue' constraints.validation.warning='ComplaintOrganSystemRelationship' constraints.validation.error='ComplaintTemplateId ComplaintMoodCode ComplaintCode ComplaintCodeP ComplaintEffectiveTime ComplaintTargetSiteCode ComplaintTargetSiteCodeP' templateId.root='2.16.840.1.1133883.17.3.10.1.63' templateId.extension='2022-01-01' moodCode='EVN' code.code='10154-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Chief complaint Narrative - Reported' constraints.validation.dependOn.ComplaintCode='ComplaintCodeP' targetSiteCode.codeSystem='2.16.840.1.113883.6.1' targetSiteCode.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrComplaintComplaintOrganSystemRelationship constraints.validation.error='ComplaintComplaintOrganSystemRelationshipComplaintOrganSystem'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__N7fw2aNEe2Mns8sNTkjCw" base_Class="_ClVY0KxCEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSTimesSectionTemplateId EMSTimesSectionCode EMSTimesSectionCodeP EMSTimesSectionTitle EMSTimesSectionText EMSTimesSectionCallTime EMSTimesSectionUnitNotifiedTime EMSTimesSectionUnitEnRouteTime EMSTimesSectionUnitOnSceneTime EMSTimesSectionUnitAtPatienttTime EMSTimesSectionUnitLeftSceneTime EMSTimesSectionPatientArrivedAtDestinationTime EMSTimesSectionUnitBackInServiceTime' templateId.root='2.16.840.1.1133883.17.3.10.1.10' templateId.extension='2022-01-01' code.code='67667-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Times Narrative NEMSIS' constraints.validation.info='EMSTimesSectionDispatchNotifiedTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__PlFkGaNEe2Mns8sNTkjCw" base_Class="_TCM6tZ-bEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseEndingOdometerReadingTemplateId ResponseEndingOdometerReadingMoodCode ResponseEndingOdometerReadingCode ResponseEndingOdometerReadingCodeP ResponseEndingOdometerReadingValue' templateId.root='2.16.840.1.1133883.17.3.10.1.174' templateId.extension='2022-01-01' moodCode='EVN' code.code='67487-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Counter or odometer reading NEMSIS --end of call' constraints.validation.dependOn.ResponseEndingOdometerReadingCode='ResponseEndingOdometerReadingCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__QjV8GaNEe2Mns8sNTkjCw" base_Class="_Orea4IzrEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SystolicBloodPressureTemplateId SystolicBloodPressureMoodCode SystolicBloodPressureCode SystolicBloodPressureCodeP SystolicBloodPressureValue SystolicBloodPressureMethodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.23.1' templateId.extension='2022-01-01' moodCode='EVN' code.code='8480-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Systolic blood pressure' constraints.validation.dependOn.SystolicBloodPressureCode='SystolicBloodPressureCodeP' constraints.validation.info='SystolicBloodPressureEffectiveTime SystolicBloodPressureMethodCodeP' methodCode.codeSystem='2.16.840.1.113883.6.1' methodCode.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__RkpomaNEe2Mns8sNTkjCw" base_Class="_mwn8MIcoEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CurrentMedicationConsumable CurrentMedicationTemplateId CurrentMedicationRouteCode' templateId.root='2.16.840.1.1133883.17.3.10.1.77' templateId.extension='2022-01-01' constraints.validation.info='CurrentMedicationNegationInd CurrentMedicationNullFlavor' constraints.validation.warning='CurrentMedicationDoseQuantity CurrentMedicationRouteCodeP' routeCode.codeSystem='2.16.840.1.113883.3.26.1.1.1' routeCode.codeSystemName='FDA Route of Administration' constraints.validation.dependOn.CurrentMedicationRouteCode='CurrentMedicationRouteCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCurrentMedicationCurrentMedicationConsumable constraints.validation.error='CurrentMedicationCurrentMedicationConsumableManufacturedProduct'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCurrentMedicationCurrentMedicationConsumableCurrentMedicationProduct constraints.validation.error='CurrentMedicationCurrentMedicationConsumableCurrentMedicationProductManufacturedMaterial'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCurrentMedicationCurrentMedicationConsumableCurrentMedicationProductCurrentMedicationDrug code.codeSystem='2.16.840.1.113883.6.88' code.codeSystemName='RxNorm' constraints.validation.error='CurrentMedicationCurrentMedicationConsumableCurrentMedicationProductCurrentMedicationDrugCode CurrentMedicationCurrentMedicationConsumableCurrentMedicationProductCurrentMedicationDrugCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__TvM0GaNEe2Mns8sNTkjCw" base_Class="_JnfD8IzoEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VitalSignsOrganizerSystolicBloodPressureComponent VitalSignsOrganizerRespiratoryRateComponent VitalSignsOrganizerOxygenSaturationComponent VitalSignsOrganizerTemplateId VitalSignsOrganizerCodeP VitalSignsOrganizerEffectiveTime VitalSignsOrganizerComponent42' constraints.validation.warning='VitalSignsOrganizerBodyTemperatureComponent VitalSignsOrganizerCode' templateId.root='2.16.840.1.1133883.17.3.10.1.28' templateId.extension='2022-01-01' code.code='46680005' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMED CT' code.displayName='Vital signs' constraints.validation.info='VitalSignsOrganizerComponent411 VitalSignsOrganizerComponent43'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerSystolicBloodPressureComponent constraints.validation.error='VitalSignsOrganizerSystolicBloodPressureComponentSystolicBloodPressure'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerRespiratoryRateComponent constraints.validation.error='VitalSignsOrganizerRespiratoryRateComponentRespiratoryRate'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerBodyTemperatureComponent constraints.validation.error='VitalSignsOrganizerBodyTemperatureComponentBodyTemperature'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerOxygenSaturationComponent constraints.validation.error='VitalSignsOrganizerOxygenSaturationComponentOxygenSaturation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerDiastolicBloodPressureComponent constraints.validation.error='VitalSignsOrganizerDiastolicBloodPressureComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerPriorAidVitals constraints.validation.error='VitalSignsOrganizerPriorAidVitalsObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerAdditionalVitalSignsOrganizer constraints.validation.error='VitalSignsOrganizerAdditionalVitalSignsOrganizerOrganizer'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__VVIQmaNEe2Mns8sNTkjCw" base_Class="_zbYvIJoiEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='PhysicalAssessmentOrganizerComponent3 PhysicalAssessmentOrganizerComponent412 PhysicalAssessmentOrganizerComponent5 PhysicalAssessmentOrganizerComponent6 PhysicalAssessmentOrganizerComponent8 PhysicalAssessmentOrganizerComponent9 PhysicalAssessmentOrganizerComponent10 PhysicalAssessmentOrganizerComponent11 PhysicalAssessmentOrganizerComponent12 PhysicalAssessmentOrganizerComponent13 PhysicalAssessmentOrganizerComponent14 PhysicalAssessmentOrganizerComponent15 PhysicalAssessmentOrganizerComponent42 PhysicalAssessmentOrganizerComponent413' constraints.validation.error='PhysicalAssessmentOrganizerTemplateId' templateId.root='2.16.840.1.1133883.17.3.10.1.78' templateId.extension='2022-01-01'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerBodyWeightComponent constraints.validation.error='PhysicalAssessmentOrganizerBodyWeightComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerLengthBasedPatientBodyWeightClassComponent constraints.validation.error='PhysicalAssessmentOrganizerLengthBasedPatientBodyWeightClassComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerSkinAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerSkinAssessmentComponentSkinAssessment'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerHeadAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerHeadAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerFaceAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerFaceAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerNeckAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerNeckAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerHeartAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerHeartAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerAbdomenAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerAbdomenAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerPelvicAndGenitourinaryAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerPelvicAndGenitourinaryAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerBackAndSpineAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerBackAndSpineAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerExtremitiesAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerExtremitiesAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerEyeAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerEyeAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerMentalStatusAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerMentalStatusAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerNeurologicalAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerNeurologicalAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerLungAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerLungAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerChestAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerChestAssessmentComponentObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__YRHgmaNEe2Mns8sNTkjCw" base_Class="_3C3WwMWqEeK3RfDsHamIUQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DrugAllergyParticipant1 DrugAllergyTemplateId DrugAllergyCode DrugAllergyValue DrugAllergyMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.48' templateId.extension='2022-01-01' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='ActCode' code.displayName='ASSERTION' value.code='416098002' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMED CT' value.displayName='Drug allergy (disorder)' moodCode='EVN'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDrugAllergyDrugAllergyParticipation constraints.validation.error='DrugAllergyDrugAllergyParticipationDrugAllergyParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDrugAllergyDrugAllergyParticipationDrugAllergyParticipantRole constraints.validation.error='DrugAllergyDrugAllergyParticipationDrugAllergyParticipantRoleDrugAllergyEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDrugAllergyDrugAllergyParticipationDrugAllergyParticipantRoleDrugAllergyEntity code.codeSystem='2.16.840.1.113883.6.88' code.codeSystemName='RxNorm' constraints.validation.warning='DrugAllergyDrugAllergyParticipationDrugAllergyParticipantRoleDrugAllergyEntityCode' constraints.validation.error='DrugAllergyDrugAllergyParticipationDrugAllergyParticipantRoleDrugAllergyEntityCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__YYcQmaNEe2Mns8sNTkjCw" base_Class="_uMxJUIzpEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CardiacRhythmParticipant1 CardiacRhythmTemplateId CardiacRhythmMoodCode CardiacRhythmCode CardiacRhythmCodeP CardiacRhythmValue CardiacRhythmValueP CardiacRhythmMethodCode CardiacRhythmMethodCodeP' templateId.root='2.16.840.1.1133883.17.3.10.1.169' templateId.extension='2022-01-01' moodCode='EVN' code.code='67519-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Cardiac rhythm NEMSIS' constraints.validation.dependOn.CardiacRhythmCode='CardiacRhythmCodeP' constraints.validation.info='CardiacRhythmEffectiveTime' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' methodCode.codeSystem='2.16.840.1.113883.6.1' methodCode.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacRhythmECGParticipant constraints.validation.error='CardiacRhythmECGParticipantParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacRhythmECGParticipantECGParticipantRole constraints.validation.error='CardiacRhythmECGParticipantECGParticipantRolePlayingDevice'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacRhythmECGParticipantECGParticipantRoleECGDevice code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='CardiacRhythmECGParticipantECGParticipantRoleECGDeviceCode CardiacRhythmECGParticipantECGParticipantRoleECGDeviceCodeP CardiacRhythmECGParticipantECGParticipantRoleECGDeviceClassCode CardiacRhythmECGParticipantECGParticipantRoleECGDeviceDeterminerCode' classCode='DEV' determinerCode='INSTANCE'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__ZZv8GaNEe2Mns8sNTkjCw" base_Class="_Dq57UIzpEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PriorAidVitalsTemplateId PriorAidVitalsMoodCode PriorAidVitalsCode PriorAidVitalsCodeP PriorAidVitalsValue' templateId.root='2.16.840.1.1133883.17.3.10.1.29' templateId.extension='2022-01-01' moodCode='EVN' code.code='67518-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Obtained prior to units EMS care NEMSIS' constraints.validation.dependOn.PriorAidVitalsCode='PriorAidVitalsCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__ZmkQGaNEe2Mns8sNTkjCw" base_Class="_Dfaa4J-eEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NumberOfPatientsTransportedObservationTemplateId NumberOfPatientsTransportedObservationMoodCode NumberOfPatientsTransportedObservationCode NumberOfPatientsTransportedObservationCodeP NumberOfPatientsTransportedObservationValue' templateId.root='2.16.840.1.1133883.17.3.10.1.31' templateId.extension='2022-01-01' moodCode='EVN' code.code='67547-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Patients transported in EMS unit [#] NEMSIS' constraints.validation.dependOn.NumberOfPatientsTransportedObservationCode='NumberOfPatientsTransportedObservationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__Zz_omaNEe2Mns8sNTkjCw" base_Class="_nv-0gp-fEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TransportModeObservationTemplateId TransportModeObservationMoodCode TransportModeObservationCode TransportModeObservationCodeP TransportModeObservationValue TransportModeObservationValueP TransportModeObservationTransportModeQualifierRelationship' templateId.root='2.16.840.1.1133883.17.3.10.1.33' templateId.extension='2022-01-01' moodCode='EVN' code.code='67550-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Transport mode from scene NEMSIS' constraints.validation.dependOn.TransportModeObservationCode='TransportModeObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrTransportModeObservationTransportModeQualifierRelationship typeCode='COMP' constraints.validation.error='TransportModeObservationTransportModeQualifierRelationshipTypeCode TransportModeObservationTransportModeQualifierRelationshipObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__aWyMGaNEe2Mns8sNTkjCw" base_Class="_EagUtZ-fEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TransportMethodObservationTemplateId TransportMethodObservationMoodCode TransportMethodObservationCode TransportMethodObservationCodeP TransportMethodObservationValue TransportMethodObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.34' templateId.extension='2022-01-01' moodCode='EVN' code.code='67549-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Transport method NEMSIS' constraints.validation.dependOn.TransportMethodObservationCode='TransportMethodObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__azeJ2aNEe2Mns8sNTkjCw" base_Class="_cm1D5Z-hEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ReasonForChoosingDestinationObservationTemplateId ReasonForChoosingDestinationObservationMoodCode ReasonForChoosingDestinationObservationCode ReasonForChoosingDestinationObservationCodeP ReasonForChoosingDestinationObservationValue ReasonForChoosingDestinationObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.35' templateId.extension='2022-01-01' moodCode='EVN' code.code='67552-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Reason for choosing destination NEMSIS' constraints.validation.dependOn.ReasonForChoosingDestinationObservationCode='ReasonForChoosingDestinationObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__bSmUWaNEe2Mns8sNTkjCw" base_Class="_083apZ-hEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PrearrivalActivationObservationTemplateId PrearrivalActivationObservationMoodCode PrearrivalActivationObservationCode PrearrivalActivationObservationCodeP PrearrivalActivationObservationEffectiveTime PrearrivalActivationObservationValue PrearrivalActivationObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.36' templateId.extension='2022-01-01' moodCode='EVN' code.code='69462-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Activation of the destination healthcare facility team NEMSIS' constraints.validation.dependOn.PrearrivalActivationObservationCode='PrearrivalActivationObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__bxugGaNEe2Mns8sNTkjCw" base_Class="_Q4zL9Z-gEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientConditionAtDestinationObservationTemplateId PatientConditionAtDestinationObservationMoodCode PatientConditionAtDestinationObservationCode PatientConditionAtDestinationObservationCodeP PatientConditionAtDestinationObservationValue PatientConditionAtDestinationObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.37' templateId.extension='2022-01-01' moodCode='EVN' code.code='77941-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Final patient acuity NEMSIS' constraints.validation.dependOn.PatientConditionAtDestinationObservationCode='PatientConditionAtDestinationObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__dJAcmaNEe2Mns8sNTkjCw" base_Class="_1u74sKxCEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CallTimeTemplateId CallTimeMoodCode CallTimeCode CallTimeCodeP CallTimeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.38' templateId.extension='2022-01-01' moodCode='EVN' code.code='69469-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='911 call to public safety answering point or other designated entity requesting EMS services [Date and time] Facility NEMSIS' constraints.validation.dependOn.CallTimeCode='CallTimeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__dOgAGaNEe2Mns8sNTkjCw" base_Class="_JKerYKxDEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitNotifiedTimeTemplateId UnitNotifiedTimeMoodCode UnitNotifiedTimeCode UnitNotifiedTimeCodeP UnitNotifiedTimeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.39' templateId.extension='2022-01-01' moodCode='EVN' code.code='69471-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Responding unit was notified by dispatch [Date and time] Vehicle NEMSIS' constraints.validation.dependOn.UnitNotifiedTimeCode='UnitNotifiedTimeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__dVNsGaNEe2Mns8sNTkjCw" base_Class="_UyaX0KxDEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitEnRouteTimeTemplateId UnitEnRouteTimeMoodCode UnitEnRouteTimeCode UnitEnRouteTimeCodeP UnitEnRouteTimeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.40' templateId.extension='2022-01-01' moodCode='EVN' code.code='69472-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Unit responded [Date and time] Vehicle NEMSIS' constraints.validation.dependOn.UnitEnRouteTimeCode='UnitEnRouteTimeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__daGMmaNEe2Mns8sNTkjCw" base_Class="_iGh5QKxDEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitOnSceneTimeTemplateId UnitOnSceneTimeMoodCode UnitOnSceneTimeCode UnitOnSceneTimeCodeP UnitOnSceneTimeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.41' templateId.extension='2022-01-01' moodCode='EVN' code.code='69473-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Responding unit arrived on the scene [Date and time] Vehicle NEMSIS' constraints.validation.dependOn.UnitOnSceneTimeCode='UnitOnSceneTimeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__dflwmaNEe2Mns8sNTkjCw" base_Class="_yt7JUKxDEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitAtPatientTimeTemplateId UnitAtPatientTimeMoodCode UnitAtPatientTimeCode UnitAtPatientTimeCodeP UnitAtPatientTimeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.42' templateId.extension='2022-01-01' moodCode='EVN' code.code='69474-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Responding unit arrived at the patient's side [Date and time] Vehicle NEMSIS' constraints.validation.dependOn.UnitAtPatientTimeCode='UnitAtPatientTimeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__dkeQmaNEe2Mns8sNTkjCw" base_Class="_6w124KxDEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitLeftSceneTimeTemplateId UnitLeftSceneTimeMoodCode UnitLeftSceneTimeCode UnitLeftSceneTimeCodeP UnitLeftSceneTimeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.43' templateId.extension='2022-01-01' moodCode='EVN' code.code='69475-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Responding unit left the scene with a patient [Date and time] Vehicle NEMSIS' constraints.validation.dependOn.UnitLeftSceneTimeCode='UnitLeftSceneTimeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__dp90maNEe2Mns8sNTkjCw" base_Class="_DaIA4KxEEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientArrivedAtDestinationTimeTemplateId PatientArrivedAtDestinationTimeMoodCode PatientArrivedAtDestinationTimeCode PatientArrivedAtDestinationTimeCodeP PatientArrivedAtDestinationTimeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.44' templateId.extension='2022-01-01' moodCode='EVN' code.code='69476-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Responding unit arrived with the patient at the destination or transfer point [Date and time] Vehicle NEMSIS' constraints.validation.dependOn.PatientArrivedAtDestinationTimeCode='PatientArrivedAtDestinationTimeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__dvdYGaNEe2Mns8sNTkjCw" base_Class="_KrhK4KxEEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitBackInServiceTimeTemplateId UnitBackInServiceTimeMoodCode UnitBackInServiceTimeCode UnitBackInServiceTimeCodeP UnitBackInServiceTimeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.45' templateId.extension='2022-01-01' moodCode='EVN' code.code='69477-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Unit was back in service and available for response [Date and time] Vehicle NEMSIS' constraints.validation.dependOn.UnitBackInServiceTimeCode='UnitBackInServiceTimeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__d0V4maNEe2Mns8sNTkjCw" base_Class="_UFgZEKxEEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispatchNotifiedTimeTemplateId DispatchNotifiedTimeMoodCode DispatchNotifiedTimeCode DispatchNotifiedTimeCodeP DispatchNotifiedTimeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.46' templateId.extension='2022-01-01' moodCode='EVN' code.code='69470-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Dispatch was notified by the 911 call taker [Date and time] Facility NEMSIS' constraints.validation.dependOn.DispatchNotifiedTimeCode='DispatchNotifiedTimeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__eBKMmaNEe2Mns8sNTkjCw" base_Class="_xCcE0Iy7EeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdvanceDirectiveObservationTemplateId AdvanceDirectiveObservationMoodCode AdvanceDirectiveObservationCode AdvanceDirectiveObservationValue AdvanceDirectiveObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.98' templateId.extension='2022-01-01' moodCode='EVN' code.code='67516-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Advance directive NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__eoON2aNEe2Mns8sNTkjCw" base_Class="_KEFo8HSVEeGa4IXs2ghZEw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InjuryCauseCategoryTemplateId InjuryCauseCategoryMoodCode InjuryCauseCategoryCode InjuryCauseCategoryCodeP InjuryCauseCategoryValue InjuryCauseCategoryValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.50' templateId.extension='2022-01-01' moodCode='EVN' code.code='69543-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Cause of injury NEMSIS' constraints.validation.dependOn.InjuryCauseCategoryCode='InjuryCauseCategoryCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__e4s4WaNEe2Mns8sNTkjCw" base_Class="_aS16EHSWEeGa4IXs2ghZEw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InjuryMechanismTemplateId InjuryMechanismMoodCode InjuryMechanismCode InjuryMechanismCodeP InjuryMechanismValue InjuryMechanismValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.51' templateId.extension='2022-01-01' moodCode='EVN' code.code='67494-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='General mechanism of the forces which caused the injury NEMSIS' constraints.validation.dependOn.InjuryMechanismCode='InjuryMechanismCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__fYcJmaNEe2Mns8sNTkjCw" base_Class="_lTHsIIcXEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TraumaTriageCriteriaSteps1and2TemplateId TraumaTriageCriteriaSteps1and2MoodCode TraumaTriageCriteriaSteps1and2Code TraumaTriageCriteriaSteps1and2CodeP TraumaTriageCriteriaSteps1and2Value TraumaTriageCriteriaSteps1and2ValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.52' templateId.extension='2022-01-01' moodCode='EVN' code.code='67495-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='CDC field triage criteria NEMSIS' constraints.validation.dependOn.TraumaTriageCriteriaSteps1and2Code='TraumaTriageCriteriaSteps1and2CodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__f0hAWaNEe2Mns8sNTkjCw" base_Class="_vuraIIcZEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TraumaTriageCriteriaSteps3and4TemplateId TraumaTriageCriteriaSteps3and4MoodCode TraumaTriageCriteriaSteps3and4Code TraumaTriageCriteriaSteps3and4CodeP TraumaTriageCriteriaSteps3and4Value TraumaTriageCriteriaSteps3and4ValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.53' templateId.extension='2022-01-01' moodCode='EVN' code.code='67496-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Other injury risk factors NEMSIS' constraints.validation.dependOn.TraumaTriageCriteriaSteps3and4Code='TraumaTriageCriteriaSteps3and4CodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__gRM8GaNEe2Mns8sNTkjCw" base_Class="_nvhVwIcaEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VehicleImpactAreaTemplateId VehicleImpactAreaMoodCode VehicleImpactAreaCode VehicleImpactAreaCodeP VehicleImpactAreaValue VehicleImpactAreaValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.54' templateId.extension='2022-01-01' moodCode='EVN' code.code='67497-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Location of impact on the vehicle NEMSIS' constraints.validation.dependOn.VehicleImpactAreaCode='VehicleImpactAreaCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__gt44maNEe2Mns8sNTkjCw" base_Class="_zMwjMIccEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientLocationInVehicleTemplateId PatientLocationInVehicleMoodCode PatientLocationInVehicleCode PatientLocationInVehicleCodeP PatientLocationInVehicleValue PatientLocationInVehicleValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.55' templateId.extension='2022-01-01' moodCode='EVN' code.code='67498-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Location of patient in vehicle NEMSIS' constraints.validation.dependOn.PatientLocationInVehicleCode='PatientLocationInVehicleCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__hJWsmaNEe2Mns8sNTkjCw" base_Class="_bsVJUIcdEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VehicleOccupantSafetyEquipmentTemplateId VehicleOccupantSafetyEquipmentMoodCode VehicleOccupantSafetyEquipmentCode VehicleOccupantSafetyEquipmentCodeP VehicleOccupantSafetyEquipmentValue VehicleOccupantSafetyEquipmentValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.56' templateId.extension='2022-01-01' moodCode='EVN' code.code='67499-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Safety equipment NEMSIS' constraints.validation.dependOn.VehicleOccupantSafetyEquipmentCode='VehicleOccupantSafetyEquipmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__hkNcmaNEe2Mns8sNTkjCw" base_Class="_2lRhsIcdEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AirbagDeploymentStatusTemplateId AirbagDeploymentStatusMoodCode AirbagDeploymentStatusCode AirbagDeploymentStatusValue AirbagDeploymentStatusValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.57' templateId.extension='2022-01-01' moodCode='EVN' code.code='67500-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Airbag deployment NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__iBgcGaNEe2Mns8sNTkjCw" base_Class="_auKbcIceEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HeightOfFallTemplateId HeightOfFallMoodCode HeightOfFallCode HeightOfFallCodeP HeightOfFallValue' templateId.root='2.16.840.1.1133883.17.3.10.1.58' templateId.extension='2022-01-01' moodCode='EVN' code.code='67501-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Height of fall NEMSIS' constraints.validation.dependOn.HeightOfFallCode='HeightOfFallCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__iNtsGaNEe2Mns8sNTkjCw" base_Class="_wKL4IIceEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DisasterTypeTemplateId DisasterTypeMoodCode DisasterTypeCode DisasterTypeValue DisasterTypeValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.59' templateId.extension='2022-01-01' moodCode='EVN' code.code='69463-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Suspected intentional or unintentional disaster NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__izjk2aNEe2Mns8sNTkjCw" base_Class="_W_uRYIzdEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ExistenceOfHistoryOfConditionOrSurgeryTemplateId ExistenceOfHistoryOfConditionOrSurgeryMoodCode ExistenceOfHistoryOfConditionOrSurgeryCode ExistenceOfHistoryOfConditionOrSurgeryCodeP ExistenceOfHistoryOfConditionOrSurgeryValue' templateId.root='2.16.840.1.1133883.17.3.10.1.60' templateId.extension='2022-01-01' moodCode='EVN' code.code='67793-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Has the patient had any significant medical conditions NEMSIS' constraints.validation.dependOn.ExistenceOfHistoryOfConditionOrSurgeryCode='ExistenceOfHistoryOfConditionOrSurgeryCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__i5qMGaNEe2Mns8sNTkjCw" base_Class="_5XgZ4IzdEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Medical/Surgical HistoryTemplateId Medical/Surgical HistoryMoodCode Medical/Surgical HistoryCode Medical/Surgical HistoryCodeP Medical/Surgical HistoryValue Medical/Surgical HistoryValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.61' templateId.extension='2022-01-01' moodCode='EVN' code.code='68487-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Medical - surgical history - ICD-9 and 10 codes' constraints.validation.dependOn.Medical/Surgical HistoryCode='Medical/Surgical HistoryCodeP' value.codeSystemName='' constraints.validation.info='Medical/Surgical HistoryNegationInd'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__j8MAmaNEe2Mns8sNTkjCw" base_Class="_7nP0MKhCEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PossibleInjuryTemplateId PossibleInjuryMoodCode PossibleInjuryCode PossibleInjuryCodeP PossibleInjuryValue' templateId.root='2.16.840.1.1133883.17.3.10.1.64' templateId.extension='2022-01-01' moodCode='EVN' code.code='69467-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Possible injury NEMSIS' constraints.validation.dependOn.PossibleInjuryCode='PossibleInjuryCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__kK1gGaNEe2Mns8sNTkjCw" base_Class="_0C-8EKhDEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProviderPrimaryImpressionTemplateId ProviderPrimaryImpressionMoodCode ProviderPrimaryImpressionCode ProviderPrimaryImpressionCodeP ProviderPrimaryImpressionValue ProviderPrimaryImpressionValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.65' templateId.extension='2022-01-01' moodCode='EVN' code.code='67492-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Primary problem NEMSIS' constraints.validation.dependOn.ProviderPrimaryImpressionCode='ProviderPrimaryImpressionCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__katIGaNEe2Mns8sNTkjCw" base_Class="_KOxo0KhEEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PrimarySymptomTemplateId PrimarySymptomMoodCode PrimarySymptomCode PrimarySymptomCodeP PrimarySymptomValue PrimarySymptomValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.66' templateId.extension='2022-01-01' moodCode='EVN' code.code='67774-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Primary sign and symptom NEMSIS' constraints.validation.dependOn.PrimarySymptomCode='PrimarySymptomCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__kp9smaNEe2Mns8sNTkjCw" base_Class="_g5iJgKhEEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='OtherSymptomsTemplateId OtherSymptomsMoodCode OtherSymptomsCode OtherSymptomsCodeP OtherSymptomsValue' templateId.root='2.16.840.1.1133883.17.3.10.1.67' templateId.extension='2022-01-01' moodCode='EVN' code.code='67776-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Other symptoms NEMSIS' constraints.validation.dependOn.OtherSymptomsCode='OtherSymptomsCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM' constraints.validation.info='OtherSymptomsValueP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__k5OQmaNEe2Mns8sNTkjCw" base_Class="_0mPksKhEEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProviderSecondaryImpressionsTemplateId ProviderSecondaryImpressionsMoodCode ProviderSecondaryImpressionsCode ProviderSecondaryImpressionsCodeP ProviderSecondaryImpressionsValue ProviderSecondaryImpressionsValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.68' templateId.extension='2022-01-01' moodCode='EVN' code.code='69542-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Secondary problem NEMSIS' constraints.validation.dependOn.ProviderSecondaryImpressionsCode='ProviderSecondaryImpressionsCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__lGpomaNEe2Mns8sNTkjCw" base_Class="_NZgqAKhFEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InitialPatientAcuityTemplateId InitialPatientAcuityMoodCode InitialPatientAcuityCode InitialPatientAcuityCodeP InitialPatientAcuityValue InitialPatientAcuityValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.69' templateId.extension='2022-01-01' moodCode='EVN' code.code='67493-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Initial patient acuity NEMSIS' constraints.validation.dependOn.InitialPatientAcuityCode='InitialPatientAcuityCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__lttoGaNEe2Mns8sNTkjCw" base_Class="_Mr964IzjEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ExistenceOfDrugUseIndicationTemplateId ExistenceOfDrugUseIndicationMoodCode ExistenceOfDrugUseIndicationCode ExistenceOfDrugUseIndicationCodeP ExistenceOfDrugUseIndicationValue' templateId.root='2.16.840.1.1133883.17.3.10.1.70' templateId.extension='2022-01-01' moodCode='EVN' code.code='69757-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Indications of drug or alcohol use by the patient NEMSIS' constraints.validation.dependOn.ExistenceOfDrugUseIndicationCode='ExistenceOfDrugUseIndicationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__lzNMGaNEe2Mns8sNTkjCw" base_Class="_oJHzkIzjEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DrugUseIndicationTemplateId DrugUseIndicationMoodCode DrugUseIndicationCode DrugUseIndicationValue DrugUseIndicationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.71' templateId.extension='2022-01-01' moodCode='EVN' code.code='67669-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Alcohol - drug use NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__nzYUGaNEe2Mns8sNTkjCw" base_Class="_46UUAJ9nEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EmergencyMedicalDispatchObservationTemplateId EmergencyMedicalDispatchObservationMoodCode EmergencyMedicalDispatchObservationCode EmergencyMedicalDispatchObservationCodeP EmergencyMedicalDispatchObservationValue EmergencyMedicalDispatchObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.73' templateId.extension='2022-01-01' moodCode='EVN' code.code='67488-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Emergency medical dispatch performed NEMSIS' constraints.validation.dependOn.EmergencyMedicalDispatchObservationCode='EmergencyMedicalDispatchObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__oQEQmaNEe2Mns8sNTkjCw" base_Class="__LltsJ97EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispatchReasonTemplateId DispatchReasonMoodCode DispatchReasonCode DispatchReasonCodeP DispatchReasonValue DispatchReasonValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.74' templateId.extension='2022-01-01' moodCode='EVN' code.code='67570-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Chief complaint per dispatch Reported.dispatch' constraints.validation.dependOn.DispatchReasonCode='DispatchReasonCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__oq7AmaNEe2Mns8sNTkjCw" base_Class="_sUm-oIcnEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CurrentlyOnMedicationTemplateId CurrentlyOnMedicationMoodCode CurrentlyOnMedicationCode CurrentlyOnMedicationValue' templateId.root='2.16.840.1.1133883.17.3.10.1.75' templateId.extension='2022-01-01' moodCode='EVN' code.code='67791-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Does the patient take any medications NEMSIS'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__phPkmaNEe2Mns8sNTkjCw" base_Class="_sW8QcJosEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientPregnancyTemplateId PatientPregnancyMoodCode PatientPregnancyCode PatientPregnancyCodeP PatientPregnancyValue PatientPregnancyValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.79' templateId.extension='2022-01-01' moodCode='EVN' code.code='67471-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Pregnancy' constraints.validation.dependOn.PatientPregnancyCode='PatientPregnancyCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__qA-0GaNEe2Mns8sNTkjCw" base_Class="_S1I0sJotEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='LastOralIntakeTemplateId LastOralIntakeMoodCode LastOralIntakeCode LastOralIntakeCodeP LastOralIntakeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.80' templateId.extension='2022-01-01' moodCode='EVN' code.code='67517-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Last oral intake [Date and time] NEMSIS' constraints.validation.dependOn.LastOralIntakeCode='LastOralIntakeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__qPoUGaNEe2Mns8sNTkjCw" base_Class="_rhjrIJotEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientAgeTemplateId PatientAgeMoodCode PatientAgeCode PatientAgeCodeP PatientAgeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.81' templateId.extension='2022-01-01' moodCode='EVN' code.code='30525-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Age' constraints.validation.dependOn.PatientAgeCode='PatientAgeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__qguEWaNEe2Mns8sNTkjCw" base_Class="_HuCH8JouEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ThrombolyticContraindicationsTemplateId ThrombolyticContraindicationsMoodCode ThrombolyticContraindicationsCode ThrombolyticContraindicationsCodeP ThrombolyticContraindicationsValue ThrombolyticContraindicationsValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.82' templateId.extension='2022-01-01' moodCode='EVN' code.code='67523-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Contraindication for thrombolytic use NEMSIS' constraints.validation.dependOn.ThrombolyticContraindicationsCode='ThrombolyticContraindicationsCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__rF84WaNEe2Mns8sNTkjCw" base_Class="_qlUP4JouEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='BarriersToPatientCareTemplateId BarriersToPatientCareMoodCode BarriersToPatientCareCode BarriersToPatientCareCodeP BarriersToPatientCareValue BarriersToPatientCareValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.83' templateId.extension='2022-01-01' moodCode='EVN' code.code='67515-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Barriers to patient care NEMSIS' constraints.validation.dependOn.BarriersToPatientCareCode='BarriersToPatientCareCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__rlsImaNEe2Mns8sNTkjCw" base_Class="_Ox86UKK4EeGOxth0BgV-QA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FirstUnitIndicatorTemplateId FirstUnitIndicatorMoodCode FirstUnitIndicatorCode FirstUnitIndicatorCodeP FirstUnitIndicatorValue' templateId.root='2.16.840.1.1133883.17.3.10.1.84' templateId.extension='2022-01-01' moodCode='EVN' code.code='67481-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='First EMS unit on scene NEMSIS' constraints.validation.dependOn.FirstUnitIndicatorCode='FirstUnitIndicatorCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__r-GomaNEe2Mns8sNTkjCw" base_Class="_wPLCkKK5EeGOxth0BgV-QA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ScenePatientCountTemplateId ScenePatientCountMoodCode ScenePatientCountCode ScenePatientCountCodeP ScenePatientCountValue ScenePatientCountValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.86' templateId.extension='2022-01-01' moodCode='EVN' code.code='67489-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Total patients at the scene NEMSIS' constraints.validation.dependOn.ScenePatientCountCode='ScenePatientCountCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__sUr8WaNEe2Mns8sNTkjCw" base_Class="_E-SEAKK8EeGOxth0BgV-QA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MassCasualtyIndicatorTemplateId MassCasualtyIndicatorMoodCode MassCasualtyIndicatorCode MassCasualtyIndicatorCodeP MassCasualtyIndicatorValue' templateId.root='2.16.840.1.1133883.17.3.10.1.87' templateId.extension='2022-01-01' moodCode='EVN' code.code='67490-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Mass casualty incident NEMSIS' constraints.validation.dependOn.MassCasualtyIndicatorCode='MassCasualtyIndicatorCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__siuYWaNEe2Mns8sNTkjCw" base_Class="_ayUKMMk3EeK2gbjCtOEivw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='LocationTypeObservationTemplateId LocationTypeObservationCode LocationTypeObservationCodeP LocationTypeObservationValue LocationTypeObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.88' templateId.extension='2022-01-01' code.code='74496-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Injury location ICD code' constraints.validation.dependOn.LocationTypeObservationCode='LocationTypeObservationCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__swJwWaNEe2Mns8sNTkjCw" base_Class="_p4XEAJ-kEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdverseEventIndicatorTemplateId AdverseEventIndicatorMoodCode AdverseEventIndicatorCode AdverseEventIndicatorCodeP AdverseEventIndicatorValue' templateId.root='2.16.840.1.1133883.17.3.10.1.89' templateId.extension='2022-01-01' moodCode='EVN' code.code='67554-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Work related exposure, injury, or death Provider NEMSIS' constraints.validation.dependOn.AdverseEventIndicatorCode='AdverseEventIndicatorCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__s9lJmaNEe2Mns8sNTkjCw" base_Class="_gU4tMJ-lEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdverseEventTypeObservationTemplateId AdverseEventTypeObservationMoodCode AdverseEventTypeObservationCode AdverseEventTypeObservationCodeP AdverseEventTypeObservationValue AdverseEventTypeObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.90' templateId.extension='2022-01-01' moodCode='EVN' code.code='67555-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Work related exposure, injury, or death Provider NEMSIS type' constraints.validation.dependOn.AdverseEventTypeObservationCode='AdverseEventTypeObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__tcGQGaNEe2Mns8sNTkjCw" base_Class="_rNkl4GleEeG4boS-IbG8Zw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='BillingConditionTemplateId BillingConditionCode BillingConditionCodeP BillingConditionValue BillingConditionValueP BillingConditionMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.91' templateId.extension='2022-01-01' code.code='67556-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS condition code NEMSIS  (Billing condition)' constraints.validation.dependOn.BillingConditionCode='BillingConditionCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__tr94maNEe2Mns8sNTkjCw" base_Class="_To2-YGleEeG4boS-IbG8Zw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='LevelOfServiceObservationTemplateId LevelOfServiceObservationMoodCode LevelOfServiceObservationCode LevelOfServiceObservationCodeP LevelOfServiceObservationValue LevelOfServiceObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.92' templateId.extension='2022-01-01' moodCode='EVN' code.code='69464-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Centers for medicare - medicaid, CMS, service level NEMSIS' constraints.validation.dependOn.LevelOfServiceObservationCode='LevelOfServiceObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__uLtImaNEe2Mns8sNTkjCw" base_Class="_rDpggp-mEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProtocolObservationTemplateId ProtocolObservationMoodCode ProtocolObservationCode ProtocolObservationCodeP ProtocolObservationValue ProtocolObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.93' templateId.extension='2022-01-01' moodCode='EVN' code.code='67537-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Protocol used NEMSIS' constraints.validation.dependOn.ProtocolObservationCode='ProtocolObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProtocolObservationProtocolAgeCategoryRelationship constraints.validation.error='ProtocolObservationProtocolAgeCategoryRelationshipProtocolAgeCategory'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__uq1UmaNEe2Mns8sNTkjCw" base_Class="_n-zaBZ-nEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CandidatePatientRegistryTypeTemplateId CandidatePatientRegistryTypeMoodCode CandidatePatientRegistryTypeCode CandidatePatientRegistryTypeCodeP CandidatePatientRegistryTypeValue CandidatePatientRegistryTypeValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.94' templateId.extension='2022-01-01' moodCode='EVN' code.code='67553-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Condition indicating eligibility for illness or injury registry NEMSIS' constraints.validation.dependOn.CandidatePatientRegistryTypeCode='CandidatePatientRegistryTypeCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__vmpcGaNEe2Mns8sNTkjCw" base_Class="_l_V6IJ-bEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseModeToSceneTemplateId ResponseModeToSceneMoodCode ResponseModeToSceneCode ResponseModeToSceneCodeP ResponseModeToSceneValue ResponseModeToSceneValueP ResponseModeToSceneResponseModeQualifier' templateId.root='2.16.840.1.1133883.17.3.10.1.182' templateId.extension='2022-01-01' moodCode='EVN' code.code='67482-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Response mode to scene NEMSIS' constraints.validation.dependOn.ResponseModeToSceneCode='ResponseModeToSceneCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__ws1omaNEe2Mns8sNTkjCw" base_Class="_iWVVYIy-EeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ExistenceOfKnownDrugAllergyObservationTemplateId ExistenceOfKnownDrugAllergyObservationMoodCode ExistenceOfKnownDrugAllergyObservationCode ExistenceOfKnownDrugAllergyObservationCodeP ExistenceOfKnownDrugAllergyObservationValue' templateId.root='2.16.840.1.1133883.17.3.10.1.102' templateId.extension='2022-01-01' moodCode='EVN' code.code='67794-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Does the patient have any medication allergies NEMSIS' constraints.validation.dependOn.ExistenceOfKnownDrugAllergyObservationCode='ExistenceOfKnownDrugAllergyObservationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__wy8QGaNEe2Mns8sNTkjCw" base_Class="_t_nG0IzYEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ExistenceOfKnownNonDrugAllergyTemplateId ExistenceOfKnownNonDrugAllergyMoodCode ExistenceOfKnownNonDrugAllergyCode ExistenceOfKnownNonDrugAllergyCodeP ExistenceOfKnownNonDrugAllergyValue' templateId.root='2.16.840.1.1133883.17.3.10.1.103' templateId.extension='2022-01-01' moodCode='EVN' code.code='69747-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Does the patient have any environmental allergies NEMSIS' constraints.validation.dependOn.ExistenceOfKnownNonDrugAllergyCode='ExistenceOfKnownNonDrugAllergyCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__w5C4maNEe2Mns8sNTkjCw" base_Class="_UleZUIzZEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NonDrugAllergyTemplateId NonDrugAllergyMoodCode NonDrugAllergyCode NonDrugAllergyCodeP NonDrugAllergyValue NonDrugAllergyValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.104' templateId.extension='2022-01-01' moodCode='EVN' code.code='79151-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Known allergies to food or environmental agents Narrative NEMSIS' constraints.validation.dependOn.NonDrugAllergyCode='NonDrugAllergyCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__xL90maNEe2Mns8sNTkjCw" base_Class="_E9ekgJoxEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationNotAdministeredReasonObservationTemplateId MedicationNotAdministeredReasonObservationMoodCode MedicationNotAdministeredReasonObservationCode MedicationNotAdministeredReasonObservationCodeP MedicationNotAdministeredReasonObservationValue MedicationNotAdministeredReasonObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.105' templateId.extension='2022-01-01' moodCode='EVN' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='ActCode' code.displayName='Assertion' constraints.validation.dependOn.MedicationNotAdministeredReasonObservationCode='MedicationNotAdministeredReasonObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__xijIGaNEe2Mns8sNTkjCw" base_Class="_j9MusJsmEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationResponseObservationTemplateId MedicationResponseObservationMoodCode MedicationResponseObservationCode MedicationResponseObservationCodeP MedicationResponseObservationValue MedicationResponseObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.106' templateId.extension='2022-01-01' moodCode='EVN' code.code='67540-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Response to medication NEMSIS' constraints.validation.dependOn.MedicationResponseObservationCode='MedicationResponseObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__x3TQmaNEe2Mns8sNTkjCw" base_Class="_Qzy_cJsnEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationComplicationObservationTemplateId MedicationComplicationObservationMoodCode MedicationComplicationObservationCode MedicationComplicationObservationCodeP MedicationComplicationObservationValue MedicationComplicationObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.107' templateId.extension='2022-01-01' moodCode='EVN' code.code='67541-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Medication complication NEMSIS' constraints.validation.dependOn.MedicationComplicationObservationCode='MedicationComplicationObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__yN4kGaNEe2Mns8sNTkjCw" base_Class="_pVW0QJsoEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationPriorAdministrationObservationTemplateId MedicationPriorAdministrationObservationMoodCode MedicationPriorAdministrationObservationCode MedicationPriorAdministrationObservationCodeP MedicationPriorAdministrationObservationValue' templateId.root='2.16.840.1.1133883.17.3.10.1.108' templateId.extension='2022-01-01' moodCode='EVN' code.code='67539-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Medication administered prior to this unit's EMS care NEMSIS' constraints.validation.dependOn.MedicationPriorAdministrationObservationCode='MedicationPriorAdministrationObservationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__yTYImaNEe2Mns8sNTkjCw" base_Class="_GGe8UJojEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientBodyWeightTemplateId PatientBodyWeightMoodCode PatientBodyWeightCode PatientBodyWeightCodeP PatientBodyWeightValue' templateId.root='2.16.840.1.1133883.17.3.10.1.178' templateId.extension='2022-01-01' moodCode='EVN' code.code='8335-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Body weight Estimated' constraints.validation.dependOn.PatientBodyWeightCode='PatientBodyWeightCodeP' constraints.validation.warning='PatientBodyWeightEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__ybT8GaNEe2Mns8sNTkjCw" base_Class="_whTHIJojEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='LengthBasedPatientBodyWeightClassTemplateId LengthBasedPatientBodyWeightClassMoodCode LengthBasedPatientBodyWeightClassCode LengthBasedPatientBodyWeightClassCodeP LengthBasedPatientBodyWeightClassValue LengthBasedPatientBodyWeightClassValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.110' templateId.extension='2022-01-01' moodCode='EVN' code.code='67670-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Length-based tape measure category NEMSIS' constraints.validation.dependOn.LengthBasedPatientBodyWeightClassCode='LengthBasedPatientBodyWeightClassCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__yx5QWaNEe2Mns8sNTkjCw" base_Class="_QU_s0JolEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FaceAssessmentTemplateId FaceAssessmentMoodCode FaceAssessmentCode FaceAssessmentCodeP FaceAssessmentValue FaceAssessmentValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.112' templateId.extension='2022-01-01' moodCode='EVN' code.code='67526-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings of Face NEMSIS' constraints.validation.dependOn.FaceAssessmentCode='FaceAssessmentCodeP' constraints.validation.warning='FaceAssessmentEffectiveTime' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__zIekGaNEe2Mns8sNTkjCw" base_Class="_6VcsUJokEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HeadAssessmentTemplateId HeadAssessmentMoodCode HeadAssessmentCode HeadAssessmentCodeP HeadAssessmentValue' templateId.root='2.16.840.1.1133883.17.3.10.1.113' templateId.extension='2022-01-01' moodCode='EVN' code.code='67525-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings of Head NEMSIS' constraints.validation.dependOn.HeadAssessmentCode='HeadAssessmentCodeP' constraints.validation.warning='HeadAssessmentEffectiveTime' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__zXIEmaNEe2Mns8sNTkjCw" base_Class="_oE3bcJolEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NeckAssessmentTemplateId NeckAssessmentMoodCode NeckAssessmentCode NeckAssessmentCodeP NeckAssessmentValue NeckAssessmentValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.114' templateId.extension='2022-01-01' moodCode='EVN' code.code='67527-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings of Neck NEMSIS' constraints.validation.dependOn.NeckAssessmentCode='NeckAssessmentCodeP' constraints.validation.warning='NeckAssessmentEffectiveTime' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__zu7gGaNEe2Mns8sNTkjCw" base_Class="_Zjp_UJomEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HeartAssessmentTemplateId HeartAssessmentMoodCode HeartAssessmentCode HeartAssessmentCodeP HeartAssessmentEffectiveTime HeartAssessmentValue HeartAssessmentValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.116' templateId.extension='2022-01-01' moodCode='EVN' code.code='67529-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings of Heart NEMSIS' constraints.validation.dependOn.HeartAssessmentCode='HeartAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__0E5wmaNEe2Mns8sNTkjCw" base_Class="_WMI_AJooEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AbdomenAssessmentTemplateId AbdomenAssessmentMoodCode AbdomenAssessmentCode AbdomenAssessmentEffectiveTime AbdomenAssessmentValue AbdomenAssessmentTargetSiteCode' templateId.root='2.16.840.1.1133883.17.3.10.1.117' templateId.extension='2022-01-01' moodCode='EVN' code.code='67530-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings of Abdomen NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' constraints.validation.warning='AbdomenAssessmentValueP AbdomenAssessmentTargetSiteCodeP' targetSiteCode.codeSystem='2.16.840.1.113883.6.1' targetSiteCode.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__0tL4GaNEe2Mns8sNTkjCw" base_Class="_O7rMoJopEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PelvicAndGenitourinaryAssessmentTemplateId PelvicAndGenitourinaryAssessmentMoodCode PelvicAndGenitourinaryAssessmentCode PelvicAndGenitourinaryAssessmentCodeP PelvicAndGenitourinaryAssessmentEffectiveTime PelvicAndGenitourinaryAssessmentValue PelvicAndGenitourinaryAssessmentValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.118' templateId.extension='2022-01-01' moodCode='EVN' code.code='67531-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings of Pelvis+Genitourinary NEMSIS' constraints.validation.dependOn.PelvicAndGenitourinaryAssessmentCode='PelvicAndGenitourinaryAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__1GNcWaNEe2Mns8sNTkjCw" base_Class="_pgmc0JopEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='BackAndSpineAssessmentTemplateId BackAndSpineAssessmentMoodCode BackAndSpineAssessmentCode BackAndSpineAssessmentCodeP BackAndSpineAssessmentEffectiveTime BackAndSpineAssessmentValue BackAndSpineAssessmentValueP BackAndSpineAssessmentTargetSiteCode BackAndSpineAssessmentTargetSiteCodeP' templateId.root='2.16.840.1.1133883.17.3.10.1.119' templateId.extension='2022-01-01' moodCode='EVN' code.code='67532-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings of Back+Spine NEMSIS' constraints.validation.dependOn.BackAndSpineAssessmentCode='BackAndSpineAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' targetSiteCode.codeSystem='2.16.840.1.113883.6.1' targetSiteCode.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__1yJ8maNEe2Mns8sNTkjCw" base_Class="_NK7yUJoqEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ExtremitiesAssessmentTemplateId ExtremitiesAssessmentMoodCode ExtremitiesAssessmentCode ExtremitiesAssessmentCodeP ExtremitiesAssessmentEffectiveTime ExtremitiesAssessmentValue ExtremitiesAssessmentTargetSiteCode' templateId.root='2.16.840.1.1133883.17.3.10.1.120' templateId.extension='2022-01-01' moodCode='EVN' code.code='67533-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings of Extremity NEMSIS' constraints.validation.dependOn.ExtremitiesAssessmentCode='ExtremitiesAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' constraints.validation.warning='ExtremitiesAssessmentValueP' targetSiteCode.codeSystem='2.16.840.1.113883.6.1' targetSiteCode.codeSystemName='LOINC' constraints.validation.info='ExtremitiesAssessmentTargetSiteCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__2etgGaNEe2Mns8sNTkjCw" base_Class="_rsLuIJoqEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EyeAssessmentTemplateId EyeAssessmentMoodCode EyeAssessmentCode EyeAssessmentCodeP EyeAssessmentEffectiveTime EyeAssessmentValue EyeAssessmentValueP EyeAssessmentTargetSiteCode' templateId.root='2.16.840.1.1133883.17.3.10.1.121' templateId.extension='2022-01-01' moodCode='EVN' code.code='67534-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings of Eye NEMSIS' constraints.validation.dependOn.EyeAssessmentCode='EyeAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' targetSiteCode.codeSystem='2.16.840.1.113883.6.1' targetSiteCode.codeSystemName='LOINC' constraints.validation.info='EyeAssessmentTargetSiteCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__3OUYmaNEe2Mns8sNTkjCw" base_Class="_EyfEMJorEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MentalStatusAssessmentTemplateId MentalStatusAssessmentMoodCode MentalStatusAssessmentCode MentalStatusAssessmentCodeP MentalStatusAssessmentEffectiveTime MentalStatusAssessmentValue' templateId.root='2.16.840.1.1133883.17.3.10.1.122' templateId.extension='2022-01-01' moodCode='EVN' code.code='67535-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Mental status assessment NEMSIS' constraints.validation.dependOn.MentalStatusAssessmentCode='MentalStatusAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' constraints.validation.warning='MentalStatusAssessmentValueP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__3mu4GaNEe2Mns8sNTkjCw" base_Class="_A65pUHwIEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CardiacArrestTimingTemplateId CardiacArrestTimingMoodCode CardiacArrestTimingCode CardiacArrestTimingValue' templateId.root='2.16.840.1.1133883.17.3.10.1.123' templateId.extension='2022-01-01' moodCode='EVN' code.code='67502-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Cardiac arrest timing' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__30xUGaNEe2Mns8sNTkjCw" base_Class="_tcPw4HwKEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CardiacArrestCauseTemplateId CardiacArrestCauseMoodCode CardiacArrestCauseCode CardiacArrestCauseValue CardiacArrestCauseValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.124' templateId.extension='2022-01-01' moodCode='EVN' code.code='67503-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Cardiac arrest cause NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__4JhcmaNEe2Mns8sNTkjCw" base_Class="_Ia0ocHwREeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ArrestRhythmTemplateId ArrestRhythmMoodCode ArrestRhythmCode ArrestRhythmValue' templateId.root='2.16.840.1.1133883.17.3.10.1.127' templateId.extension='2022-01-01' moodCode='EVN' code.code='67512-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='First monitored rhythm NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__4YK8WaNEe2Mns8sNTkjCw" base_Class="_gnLCQHwSEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ReturnOfSpontaneousCirculationTemplateId ReturnOfSpontaneousCirculationMoodCode ReturnOfSpontaneousCirculationCode ReturnOfSpontaneousCirculationCodeP ReturnOfSpontaneousCirculationValue ReturnOfSpontaneousCirculationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.128' templateId.extension='2022-01-01' moodCode='EVN' code.code='88670-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Return of spontaneous circulation' constraints.validation.dependOn.ReturnOfSpontaneousCirculationCode='ReturnOfSpontaneousCirculationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__4vXUGaNEe2Mns8sNTkjCw" base_Class="_khXxgHwTEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DestinationRhythmTemplateId DestinationRhythmMoodCode DestinationRhythmCode DestinationRhythmValue DestinationRhythmValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.129' templateId.extension='2022-01-01' moodCode='EVN' code.code='67519-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Cardiac rhythm NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__5GjsGaNEe2Mns8sNTkjCw" base_Class="_edpw0JuqEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AbandonedProcedureReasonObservationTemplateId AbandonedProcedureReasonObservationMoodCode AbandonedProcedureReasonObservationCode AbandonedProcedureReasonObservationCodeP AbandonedProcedureReasonObservationValue AbandonedProcedureReasonObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.130' templateId.extension='2022-01-01' moodCode='EVN' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='ActCode' code.displayName='Assertion' constraints.validation.dependOn.AbandonedProcedureReasonObservationCode='AbandonedProcedureReasonObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrAbandonedProcedureReasonObservationAbandonedProcedureReasonObservation moodCode='EVN' constraints.validation.error='AbandonedProcedureReasonObservationAbandonedProcedureReasonObservationMoodCode AbandonedProcedureReasonObservationAbandonedProcedureReasonObservationCode AbandonedProcedureReasonObservationAbandonedProcedureReasonObservationValue'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__5hacmaNEe2Mns8sNTkjCw" base_Class="_0IBaIJ0sEeGmCMENP40rhA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedurePriorIndicatorTemplateId ProcedurePriorIndicatorMoodCode ProcedurePriorIndicatorCode ProcedurePriorIndicatorCodeP ProcedurePriorIndicatorValue' templateId.root='2.16.840.1.1133883.17.3.10.1.131' templateId.extension='2022-01-01' moodCode='EVN' code.code='67542-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure performed prior to this units EMS care NEMSIS' constraints.validation.dependOn.ProcedurePriorIndicatorCode='ProcedurePriorIndicatorCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__5nhEmaNEe2Mns8sNTkjCw" base_Class="_iZg7kJ0tEeGmCMENP40rhA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureNumberOfAttemptsObservationTemplateId ProcedureNumberOfAttemptsObservationMoodCode ProcedureNumberOfAttemptsObservationCode ProcedureNumberOfAttemptsObservationCodeP ProcedureNumberOfAttemptsObservationValue' templateId.root='2.16.840.1.1133883.17.3.10.1.132' templateId.extension='2022-01-01' moodCode='EVN' code.code='67543-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure attempts [#] NEMSIS' constraints.validation.dependOn.ProcedureNumberOfAttemptsObservationCode='ProcedureNumberOfAttemptsObservationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__5uOwGaNEe2Mns8sNTkjCw" base_Class="_D32TkJ0uEeGmCMENP40rhA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureSuccessfulObservationTemplateId ProcedureSuccessfulObservationMoodCode ProcedureSuccessfulObservationCode ProcedureSuccessfulObservationCodeP ProcedureSuccessfulObservationValue' templateId.root='2.16.840.1.1133883.17.3.10.1.133' templateId.extension='2022-01-01' moodCode='EVN' code.code='67544-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure successful NEMSIS' constraints.validation.dependOn.ProcedureSuccessfulObservationCode='ProcedureSuccessfulObservationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__51jgmaNEe2Mns8sNTkjCw" base_Class="_lVl1sJ0uEeGmCMENP40rhA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureComplicationsObservationTemplateId ProcedureComplicationsObservationMoodCode ProcedureComplicationsObservationCode ProcedureComplicationsObservationCodeP ProcedureComplicationsObservationValue ProcedureComplicationsObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.179' templateId.extension='2022-01-01' moodCode='EVN' code.code='67545-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure complication NEMSIS' constraints.validation.dependOn.ProcedureComplicationsObservationCode='ProcedureComplicationsObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__6Mv4GaNEe2Mns8sNTkjCw" base_Class="_Z3nhEJ0vEeGmCMENP40rhA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedurePatientResponseObservationTemplateId ProcedurePatientResponseObservationMoodCode ProcedurePatientResponseObservationCode ProcedurePatientResponseObservationCodeP ProcedurePatientResponseObservationValue ProcedurePatientResponseObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.135' templateId.extension='2022-01-01' moodCode='EVN' code.code='67546-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Response to procedure NEMSIS' constraints.validation.dependOn.ProcedurePatientResponseObservationCode='ProcedurePatientResponseObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__6gR4GaNEe2Mns8sNTkjCw" base_Class="_KR_lQJ4aEeGzbp5zEFWdWg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AirwayConfirmationObservationTemplateId AirwayConfirmationObservationMoodCode AirwayConfirmationObservationCode AirwayConfirmationObservationCodeP AirwayConfirmationObservationEffectiveTime AirwayConfirmationObservationValue AirwayConfirmationObservationMethodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.175' templateId.extension='2022-01-01' moodCode='EVN' code.code='71576-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Airway device placement confirmation NEMSIS' constraints.validation.dependOn.AirwayConfirmationObservationCode='AirwayConfirmationObservationCodeP' methodCode.codeSystem='2.16.840.1.113883.6.1' methodCode.codeSystemName='LOINC' constraints.validation.info='AirwayConfirmationObservationMethodCodeP' constraints.validation.dependOn.AirwayConfirmationObservationMethodCode='AirwayConfirmationObservationMethodCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__61pEGaNEe2Mns8sNTkjCw" base_Class="_N8t6kFhWEeK-i8RB1gvLUA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ReasonProcedureNotAttemptedObservationTemplateId ReasonProcedureNotAttemptedObservationMoodCode ReasonProcedureNotAttemptedObservationCode ReasonProcedureNotAttemptedObservationCodeP ReasonProcedureNotAttemptedObservationValue ReasonProcedureNotAttemptedObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.137' templateId.extension='2022-01-01' moodCode='EVN' code.code='72112-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Reason resuscitation not attempted NEMSIS' constraints.validation.dependOn.ReasonProcedureNotAttemptedObservationCode='ReasonProcedureNotAttemptedObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__7JyImaNEe2Mns8sNTkjCw" base_Class="_4ZsacKg_EeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ComplaintTypeTemplateId ComplaintTypeMoodCode ComplaintTypeCode ComplaintTypeCodeP ComplaintTypeValue ComplaintTypeValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.138' templateId.extension='2022-01-01' moodCode='EVN' code.code='72114-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Complaint NEMSIS' constraints.validation.dependOn.ComplaintTypeCode='ComplaintTypeCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__7fJUmaNEe2Mns8sNTkjCw" base_Class="_g93MsKhAEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ComplaintDurationTemplateId ComplaintDurationMoodCode ComplaintDurationCode ComplaintDurationCodeP ComplaintDurationValue' templateId.root='2.16.840.1.1133883.17.3.10.1.139' templateId.extension='2022-01-01' moodCode='EVN' code.code='67491-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Duration of chief complaint NEMSIS' constraints.validation.dependOn.ComplaintDurationCode='ComplaintDurationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__7l3AGaNEe2Mns8sNTkjCw" base_Class="_YMy4UKhDEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ComplaintOrganSystemTemplateId ComplaintOrganSystemMoodCode ComplaintOrganSystemCode ComplaintOrganSystemCodeP ComplaintOrganSystemValue ComplaintOrganSystemValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.140' templateId.extension='2022-01-01' moodCode='EVN' code.code='69468-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Primary anatomic organ system of chief complaint NEMSIS' constraints.validation.dependOn.ComplaintOrganSystemCode='ComplaintOrganSystemCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__76AEmaNEe2Mns8sNTkjCw" base_Class="_gBOGYJorEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NeurologicalAssessmentTemplateId NeurologicalAssessmentMoodCode NeurologicalAssessmentCode NeurologicalAssessmentCodeP NeurologicalAssessmentValue NeurologicalAssessmentValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.141' templateId.extension='2022-01-01' moodCode='EVN' code.code='67536-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Neurological assessment Nervous system NEMSIS' constraints.validation.dependOn.NeurologicalAssessmentCode='NeurologicalAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__8SakGaNEe2Mns8sNTkjCw" base_Class="_l4xA4IzrEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DiastolicBloodPressureTemplateId DiastolicBloodPressureMoodCode DiastolicBloodPressureCode DiastolicBloodPressureValue DiastolicBloodPressureMethodCode DiastolicBloodPressureMethodCodeP' templateId.root='2.16.840.1.1133883.17.3.10.1.144' templateId.extension='2022-01-01' moodCode='EVN' code.code='8462-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Diastolic blood pressure' constraints.validation.info='DiastolicBloodPressureEffectiveTime' methodCode.codeSystem='2.16.840.1.113883.6.1' methodCode.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__8nxwWaNEe2Mns8sNTkjCw" base_Class="__qJ7UIzrEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HeartRateTemplateId HeartRateMoodCode HeartRateCode HeartRateCodeP HeartRateValue' templateId.root='2.16.840.1.1133883.17.3.10.1.145' templateId.extension='2022-01-01' moodCode='EVN' code.code='8867-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Heart rate' constraints.validation.dependOn.HeartRateCode='HeartRateCodeP' constraints.validation.info='HeartRateEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__8t4YmaNEe2Mns8sNTkjCw" base_Class="_Q7VIMIzsEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='RespiratoryRateTemplateId RespiratoryRateMoodCode RespiratoryRateCode RespiratoryRateCodeP RespiratoryRateValue' templateId.root='2.16.840.1.1133883.17.3.10.1.146' templateId.extension='2022-01-01' moodCode='EVN' code.code='9279-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Respiratory rate' constraints.validation.dependOn.RespiratoryRateCode='RespiratoryRateCodeP' constraints.validation.info='RespiratoryRateEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__8z_AGaNEe2Mns8sNTkjCw" base_Class="_koRz8IzsEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='BodyTemperatureTemplateId BodyTemperatureMoodCode BodyTemperatureCode BodyTemperatureValue' templateId.root='2.16.840.1.1133883.17.3.10.1.176' templateId.extension='2022-01-01' moodCode='EVN' code.code='8310-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Body temperature' constraints.validation.info='BodyTemperatureEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__843gWaNEe2Mns8sNTkjCw" base_Class="_01XGkIzsEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='OxygenSaturationTemplateId OxygenSaturationMoodCode OxygenSaturationCode OxygenSaturationCodeP OxygenSaturationValue' templateId.root='2.16.840.1.1133883.17.3.10.1.177' templateId.extension='2022-01-01' moodCode='EVN' code.code='2708-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Oxygen saturation in Arterial blood' constraints.validation.dependOn.OxygenSaturationCode='OxygenSaturationCodeP' constraints.validation.info='OxygenSaturationEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__8--ImaNEe2Mns8sNTkjCw" base_Class="_MjD2kJ-nEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProtocolAgeCategoryTemplateId ProtocolAgeCategoryMoodCode ProtocolAgeCategoryCode ProtocolAgeCategoryCodeP ProtocolAgeCategoryValue ProtocolAgeCategoryValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.149' templateId.extension='2022-01-01' moodCode='EVN' code.code='67538-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Protocol age category NEMSIS' constraints.validation.dependOn.ProtocolAgeCategoryCode='ProtocolAgeCategoryCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__9U8YmaNEe2Mns8sNTkjCw" base_Class="_lC10cJ-BEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispatchLocationNameTemplateId DispatchLocationNameMoodCode DispatchLocationNameCode DispatchLocationNameValue' templateId.root='2.16.840.1.1133883.17.3.10.1.150' templateId.extension='2022-01-01' moodCode='EVN' code.code='69466-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Vehicle location Vehicle NEMSIS --at dispatch'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__9Z04maNEe2Mns8sNTkjCw" base_Class="_sPMP9p-NEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispatchLocationLatitudeTemplateId DispatchLocationLatitudeMoodCode DispatchLocationLatitudeCode DispatchLocationLatitudeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.151' templateId.extension='2022-01-01' moodCode='EVN' code.code='69750-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS unit GPS latitude Vehicle --at dispatch'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__9etYGaNEe2Mns8sNTkjCw" base_Class="_UGLMFZ-OEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispatchLocationLongitudeTemplateId DispatchLocationLongitudeMoodCode DispatchLocationLongitudeCode DispatchLocationLongitudeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.152' templateId.extension='2022-01-01' moodCode='EVN' code.code='69465-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS unit GPS longitude Vehicle --at dispatch'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__9i-0GaNEe2Mns8sNTkjCw" base_Class="_9i0HIJ99EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispatchDelayTemplateId DispatchDelayMoodCode DispatchDelayCode DispatchDelayCodeP DispatchDelayValue DispatchDelayValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.153' templateId.extension='2022-01-01' moodCode='EVN' code.code='67480-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Dispatch delay NEMSIS' constraints.validation.dependOn.DispatchDelayCode='DispatchDelayCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__94WAGaNEe2Mns8sNTkjCw" base_Class="_pCK4JZ9-EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseDelayTemplateId ResponseDelayMoodCode ResponseDelayCode ResponseDelayCodeP ResponseDelayValue ResponseDelayValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.154' templateId.extension='2022-01-01' moodCode='EVN' code.code='67557-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Response delay NEMSIS' constraints.validation.dependOn.ResponseDelayCode='ResponseDelayCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__-L4AGaNEe2Mns8sNTkjCw" base_Class="_Vo79JZ9_EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SceneDelayTemplateId SceneDelayMoodCode SceneDelayCode SceneDelayCodeP SceneDelayValue SceneDelayValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.155' templateId.extension='2022-01-01' moodCode='EVN' code.code='67558-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Scene delay NEMSIS' constraints.validation.dependOn.SceneDelayCode='SceneDelayCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__-ey8maNEe2Mns8sNTkjCw" base_Class="_4qwhJZ9_EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TransportDelayTemplateId TransportDelayMoodCode TransportDelayCode TransportDelayCodeP TransportDelayValue TransportDelayValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.156' templateId.extension='2022-01-01' moodCode='EVN' code.code='67559-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Transport delay NEMSIS' constraints.validation.dependOn.TransportDelayCode='TransportDelayCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="__-xt4maNEe2Mns8sNTkjCw" base_Class="_e7LIFZ-AEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TurnaroundDelayTemplateId TurnaroundDelayMoodCode TurnaroundDelayCode TurnaroundDelayCodeP TurnaroundDelayValue TurnaroundDelayValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.157' templateId.extension='2022-01-01' moodCode='EVN' code.code='67560-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Turn-around delay NEMSIS' constraints.validation.dependOn.TurnaroundDelayCode='TurnaroundDelayCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="___ITMGaNEe2Mns8sNTkjCw" base_Class="_WduLAIzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowTotalTemplateId GlasgowTotalMoodCode GlasgowTotalCode GlasgowTotalCodeP GlasgowTotalValue' templateId.root='2.16.840.1.1133883.17.3.10.1.158' templateId.extension='2022-01-01' moodCode='EVN' code.code='9269-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glasgow coma score.total' constraints.validation.dependOn.GlasgowTotalCode='GlasgowTotalCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="___NywGaNEe2Mns8sNTkjCw" base_Class="_ZLqX8IzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowQualifierTemplateId GlasgowQualifierMoodCode GlasgowQualifierCode GlasgowQualifierCodeP GlasgowQualifierValue' templateId.root='2.16.840.1.1133883.17.3.10.1.159' templateId.extension='2022-01-01' moodCode='EVN' code.code='55285-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glasgow coma score special circumstances' constraints.validation.dependOn.GlasgowQualifierCode='GlasgowQualifierCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' constraints.validation.info='GlasgowQualifierValueP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="___gtsmaNEe2Mns8sNTkjCw" base_Class="_bxS9cIzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowEyeTemplateId GlasgowEyeMoodCode GlasgowEyeCode GlasgowEyeCodeP GlasgowEyeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.160' templateId.extension='2022-01-01' moodCode='EVN' code.code='9267-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glasgow coma score.eye opening' constraints.validation.dependOn.GlasgowEyeCode='GlasgowEyeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="___mNQGaNEe2Mns8sNTkjCw" base_Class="_eKfCYIzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowMotorTemplateId GlasgowMotorMoodCode GlasgowMotorCode GlasgowMotorCodeP GlasgowMotorValue' templateId.root='2.16.840.1.1133883.17.3.10.1.192' templateId.extension='2022-01-01' moodCode='EVN' code.code='9268-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glasgow coma score.motor' constraints.validation.dependOn.GlasgowMotorCode='GlasgowMotorCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="___rFwmaNEe2Mns8sNTkjCw" base_Class="_hLJ-EIzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowVerbalTemplateId GlasgowVerbalMoodCode GlasgowVerbalCode GlasgowVerbalCodeP GlasgowVerbalValue' templateId.root='2.16.840.1.1133883.17.3.10.1.162' templateId.extension='2022-01-01' moodCode='EVN' code.code='9270-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glasgow coma score.verbal' constraints.validation.dependOn.GlasgowVerbalCode='GlasgowVerbalCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="___v-QWaNEe2Mns8sNTkjCw" base_Class="_9koR4IzuEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='StrokeScoreTemplateId StrokeScoreMoodCode StrokeScoreCode StrokeScoreCodeP StrokeScoreValue StrokeScoreValueP StrokeScoreMethodCode StrokeScoreMethodCodeP' templateId.root='2.16.840.1.1133883.17.3.10.1.163' templateId.extension='2022-01-01' moodCode='EVN' code.code='67520-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Stroke scale overall interpretation NEMSIS' constraints.validation.dependOn.StrokeScoreCode='StrokeScoreCodeP' constraints.validation.info='StrokeScoreEffectiveTime' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' methodCode.codeSystem='2.16.840.1.113883.6.1' methodCode.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_AAXpUGaOEe2Mns8sNTkjCw" base_Class="_lnVLQIzuEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PainScoreTemplateId PainScoreMoodCode PainScoreCode PainScoreCodeP PainScoreValue' templateId.root='2.16.840.1.1133883.17.3.10.1.164' templateId.extension='2022-01-01' moodCode='EVN' code.code='56840-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Pain severity verbal numeric scale' constraints.validation.dependOn.PainScoreCode='PainScoreCodeP' constraints.validation.info='PainScoreEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_AAdv8maOEe2Mns8sNTkjCw" base_Class="_xgaHgIztEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='LevelOfResponsivenessTemplateId LevelOfResponsivenessMoodCode LevelOfResponsivenessCode LevelOfResponsivenessCodeP LevelOfResponsivenessValue LevelOfResponsivenessValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.165' templateId.extension='2022-01-01' moodCode='EVN' code.code='67775-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Level of responsiveness NEMSIS' constraints.validation.dependOn.LevelOfResponsivenessCode='LevelOfResponsivenessCodeP' constraints.validation.info='LevelOfResponsivenessEffectiveTime' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_AA1jYmaOEe2Mns8sNTkjCw" base_Class="_jmDsgIztEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='BloodGlucoseTemplateId BloodGlucoseMoodCode BloodGlucoseCode BloodGlucoseCodeP BloodGlucoseValue' templateId.root='2.16.840.1.1133883.17.3.10.1.166' templateId.extension='2022-01-01' moodCode='EVN' code.code='2339-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glucose [Mass/volume] in Blood' constraints.validation.dependOn.BloodGlucoseCode='BloodGlucoseCodeP' constraints.validation.info='BloodGlucoseEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_AA9fMWaOEe2Mns8sNTkjCw" base_Class="_WFit0IztEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CarbonMonoxideTemplateId CarbonMonoxideMoodCode CarbonMonoxideCode CarbonMonoxideCodeP CarbonMonoxideValue' templateId.root='2.16.840.1.1133883.17.3.10.1.167' templateId.extension='2022-01-01' moodCode='EVN' code.code='20563-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Carboxyhemoglobin/​Hemoglobin.total in Blood' constraints.validation.dependOn.CarbonMonoxideCode='CarbonMonoxideCodeP' constraints.validation.info='CarbonMonoxideEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ABEz8GaOEe2Mns8sNTkjCw" base_Class="_IU2lIIztEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CarbonDioxideTemplateId CarbonDioxideMoodCode CarbonDioxideCode CarbonDioxideCodeP CarbonDioxideValue' templateId.root='2.16.840.1.1133883.17.3.10.1.168' templateId.extension='2022-01-01' moodCode='EVN' code.code='19889-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Carbon dioxide/Gas.total.at end expiration in Exhaled gas' constraints.validation.dependOn.CarbonDioxideCode='CarbonDioxideCodeP' constraints.validation.info='CarbonDioxideEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ACM1UWaOEe2Mns8sNTkjCw" base_Class="_RNfAcIzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowComaScoreOrganizerTemplateId GlasgowComaScoreOrganizerComponent414 GlasgowComaScoreOrganizerComponent42 GlasgowComaScoreOrganizerComponent45' templateId.root='2.16.840.1.1133883.17.3.10.1.170' templateId.extension='2022-01-01' constraints.validation.info='GlasgowComaScoreOrganizerEffectiveTime GlasgowComaScoreOrganizerComponent43' constraints.validation.warning='GlasgowComaScoreOrganizerComponent44'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrGlasgowComaScoreOrganizerGlasgowEye constraints.validation.error='GlasgowComaScoreOrganizerGlasgowEyeObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrGlasgowComaScoreOrganizerGlasgowMotor constraints.validation.error='GlasgowComaScoreOrganizerGlasgowMotorObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrGlasgowComaScoreOrganizerGlasgowQualifier constraints.validation.error='GlasgowComaScoreOrganizerGlasgowQualifierObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrGlasgowComaScoreOrganizerGlasgowTotal constraints.validation.error='GlasgowComaScoreOrganizerGlasgowTotalObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrGlasgowComaScoreOrganizerGlasgowVerbal constraints.validation.error='GlasgowComaScoreOrganizerGlasgowVerbalObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ACP4oGaOEe2Mns8sNTkjCw" base_Class="_k-cIsJ-ZEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseBeginningOdometerReadingTemplateId ResponseBeginningOdometerReadingMoodCode ResponseBeginningOdometerReadingCode ResponseBeginningOdometerReadingCodeP ResponseBeginningOdometerReadingValue' templateId.root='2.16.840.1.1133883.17.3.10.1.171' templateId.extension='2022-01-01' moodCode='EVN' code.code='67484-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Counter or odometer reading NEMSIS --beginning of call' constraints.validation.dependOn.ResponseBeginningOdometerReadingCode='ResponseBeginningOdometerReadingCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ACYbgGaOEe2Mns8sNTkjCw" base_Class="_ib1zpZ-aEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseOnSceneOdometerReadingTemplateId ResponseOnSceneOdometerReadingMoodCode ResponseOnSceneOdometerReadingCode ResponseOnSceneOdometerReadingCodeP ResponseOnSceneOdometerReadingValue' templateId.root='2.16.840.1.1133883.17.3.10.1.172' templateId.extension='2022-01-01' moodCode='EVN' code.code='67485-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Counter or odometer reading NEMSIS --patient arrival' constraints.validation.dependOn.ResponseOnSceneOdometerReadingCode='ResponseOnSceneOdometerReadingCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ACg-YmaOEe2Mns8sNTkjCw" base_Class="_7kghNZ-aEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseDestinationOdometerReadingTemplateId ResponseDestinationOdometerReadingMoodCode ResponseDestinationOdometerReadingCode ResponseDestinationOdometerReadingCodeP ResponseDestinationOdometerReadingValue' templateId.root='2.16.840.1.1133883.17.3.10.1.173' templateId.extension='2022-01-01' moodCode='EVN' code.code='67486-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Counter or odometer reading NEMSIS --patient destination' constraints.validation.dependOn.ResponseDestinationOdometerReadingCode='ResponseDestinationOdometerReadingCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ADKeoGaOEe2Mns8sNTkjCw" base_Class="_JHDCEK9UEeO6uquZyO0R2Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DrugAllergyOrganizerTemplateId DrugAllergyOrganizerComponent415 DrugAllergyOrganizerComponent42' templateId.root='2.16.840.1.1133883.17.3.10.1.183' templateId.extension='2022-01-01'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDrugAllergyOrganizerEMSDrugAllergy constraints.validation.error='DrugAllergyOrganizerEMSDrugAllergyObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDrugAllergyOrganizerExistenceOfKnownDrugAllergyComponent constraints.validation.error='DrugAllergyOrganizerExistenceOfKnownDrugAllergyComponentObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_AEYmoWaOEe2Mns8sNTkjCw" base_Class="_iIDnYMtXEeSbT7e8VE5niQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CardiacArrestOutcomeTemplateId CardiacArrestOutcomeCode CardiacArrestOutcomeCodeP CardiacArrestOutcomeMoodCode CardiacArrestOutcomeValue CardiacArrestOutcomeValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.184' templateId.extension='2022-01-01' code.code='77152-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Cardiac arrest event outcome' constraints.validation.dependOn.CardiacArrestOutcomeCode='CardiacArrestOutcomeCodeP' moodCode='EVN' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_AFCt8GaOEe2Mns8sNTkjCw" base_Class="_8rap8MtaEeSbT7e8VE5niQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TransportModeQualifierTemplateId TransportModeQualifierClassCode TransportModeQualifierCode TransportModeQualifierCodeP TransportModeQualifierMoodCode TransportModeQualifierValue TransportModeQualifierValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.193' templateId.extension='2022-01-01' classCode='OBS' code.code='77153-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Transport Mode Descriptors' constraints.validation.dependOn.TransportModeQualifierCode='TransportModeQualifierCodeP' moodCode='EVN' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_AFvRgGaOEe2Mns8sNTkjCw" base_Class="_Eb5OsMxCEeSOI6Ao2VuoSQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DestinationHospitalCapabilityTemplateId DestinationHospitalCapabilityClassCode DestinationHospitalCapabilityCode DestinationHospitalCapabilityCodeP DestinationHospitalCapabilityMoodCode DestinationHospitalCapabilityValue DestinationHospitalCapabilityValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.104' templateId.extension='2022-01-01' classCode='OBS' code.code='77155-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Hospital designation capability' constraints.validation.dependOn.DestinationHospitalCapabilityCode='DestinationHospitalCapabilityCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_AGVHYGaOEe2Mns8sNTkjCw" base_Class="_oKeDoMxFEeSOI6Ao2VuoSQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DestinationWardTemplateId DestinationWardClassCode DestinationWardCode DestinationWardCodeP DestinationWardMoodCode DestinationWardValue DestinationWardValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.186' templateId.extension='2022-01-01' classCode='OBS' code.code='77154-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Hospital inpatient destination' constraints.validation.dependOn.DestinationWardCode='DestinationWardCodeP' moodCode='EVN' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_AG2EwGaOEe2Mns8sNTkjCw" base_Class="_7PIw4M0VEeSJm6m0rTs9zw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseModeQualifierTemplateId ResponseModeQualifierClassCode ResponseModeQualifierCode ResponseModeQualifierCodeP ResponseModeQualifierMoodCode ResponseModeQualifierValue ResponseModeQualifierValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.191' templateId.extension='2022-01-01' classCode='OBS' code.code='77157-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Response mode descriptors' constraints.validation.dependOn.ResponseModeQualifierCode='ResponseModeQualifierCodeP' moodCode='EVN' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_AHgzIGaOEe2Mns8sNTkjCw" base_Class="_bFfQYJokEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SkinAssessmentTemplateId SkinAssessmentMoodCode SkinAssessmentCode SkinAssessmentCodeP SkinAssessmentValue SkinAssessmentValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.180' templateId.extension='2022-01-01' moodCode='EVN' code.code='67524-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings of Skin NEMSIS' constraints.validation.dependOn.SkinAssessmentCode='SkinAssessmentCodeP' constraints.validation.info='SkinAssessmentEffectiveTime' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_AIJsUmaOEe2Mns8sNTkjCw" base_Class="_F-GKoLMNEeKNbt70lHd2Eg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdditionalVitalSignsOrganizerTemplateId AdditionalVitalSignsOrganizerMoodCode AdditionalVitalSignsOrganizerComponent43 AdditionalVitalSignsOrganizerComponent44 AdditionalVitalSignsOrganizerComponent46 AdditionalVitalSignsOrganizerComponent48' templateId.root='2.16.840.1.1133883.17.3.10.1.30' templateId.extension='2022-01-01' moodCode='EVN' constraints.validation.info='AdditionalVitalSignsOrganizerEffectiveTime AdditionalVitalSignsOrganizerComponent416 AdditionalVitalSignsOrganizerComponent42 AdditionalVitalSignsOrganizerComponent45' constraints.validation.warning='AdditionalVitalSignsOrganizerComponent47'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrAdditionalVitalSignsOrganizerStrokeScoreComponent constraints.validation.error='AdditionalVitalSignsOrganizerStrokeScoreComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrAdditionalVitalSignsOrganizerPainScoreComponent constraints.validation.error='AdditionalVitalSignsOrganizerPainScoreComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrAdditionalVitalSignsOrganizerLevelOfResponsiveness constraints.validation.error='AdditionalVitalSignsOrganizerLevelOfResponsivenessObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrAdditionalVitalSignsOrganizerBloodGlucoseComponent constraints.validation.error='AdditionalVitalSignsOrganizerBloodGlucoseComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrAdditionalVitalSignsOrganizerCarbonMonoxideComponent constraints.validation.error='AdditionalVitalSignsOrganizerCarbonMonoxideComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrAdditionalVitalSignsOrganizerCarbonDioxideComponent constraints.validation.error='AdditionalVitalSignsOrganizerCarbonDioxideComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrAdditionalVitalSignsOrganizerCardiacRythmComponent constraints.validation.error='AdditionalVitalSignsOrganizerCardiacRythmComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrAdditionalVitalSignsOrganizerGlasgowScoreOrganizer constraints.validation.error='AdditionalVitalSignsOrganizerGlasgowScoreOrganizerOrganizer'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_AIWgomaOEe2Mns8sNTkjCw" base_Class="_gTzdICVKEeyHwdMImhiDzQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='LungAssessmentTemplateId LungAssessmentCode LungAssessmentCodeP LungAssessmentValue LungAssessmentValueP LungAssessmentTargetSiteCode' templateId.root='2.16.840.1.1133883.17.3.10.1.194' templateId.extension='2022-01-01' code.code='32449-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical Findings of Lung Assessment' constraints.validation.dependOn.LungAssessmentCode='LungAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' targetSiteCode.codeSystem='2.16.840.1.113883.6.1' targetSiteCode.codeSystemName='LOINC' constraints.validation.warning='LungAssessmentTargetSiteCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_AI-ywGaOEe2Mns8sNTkjCw" base_Class="_uSA4MDKiEeyOwtfRawW6Qw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitDispositionTemplateId UnitDispositionCode UnitDispositionCodeP UnitDispositionValue UnitDispositionValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.196' templateId.extension='2022-01-01' code.code='100037-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Patient contact disposition' constraints.validation.dependOn.UnitDispositionCode='UnitDispositionCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_AJUJ8maOEe2Mns8sNTkjCw" base_Class="_2BpygDKkEeyOwtfRawW6Qw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientEngagementTemplateId PatientEngagementCode PatientEngagementCodeP PatientEngagementValue PatientEngagementValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.197' templateId.extension='2022-01-01' code.code='100038-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Patient evaluation disposition' constraints.validation.dependOn.PatientEngagementCode='PatientEngagementCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_AJphIWaOEe2Mns8sNTkjCw" base_Class="_PFi4UDKmEeyOwtfRawW6Qw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CrewDispositionTemplateId CrewDispositionCode CrewDispositionValue CrewDispositionValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.198' templateId.extension='2022-01-01' code.code='100039-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Crew Disposition' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_AJ9qMGaOEe2Mns8sNTkjCw" base_Class="_Kp-OcDKyEeyOwtfRawW6Qw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TransportDispositionTemplateId TransportDispositionCode TransportDispositionCodeP TransportDispositionValue TransportDispositionValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.199' templateId.extension='2022-01-01' code.code='100040-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Transport Disposition' constraints.validation.dependOn.TransportDispositionCode='TransportDispositionCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_AKcLUGaOEe2Mns8sNTkjCw" base_Class="_Y9KOgEHMEeyzA5MgFxuJFA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ChestAssessmentTemplateId ChestAssessmentCode ChestAssessmentCodeP ChestAssessmentValue ChestAssessmentValueP ChestAssessmentTargetSiteCode' templateId.root='2.16.840.1.1133883.17.3.10.1.195' templateId.extension='2022-01-01' code.code='11422-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical Findings of Chest Assessment' constraints.validation.dependOn.ChestAssessmentCode='ChestAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' targetSiteCode.codeSystem='2.16.840.1.113883.6.1' targetSiteCode.codeSystemName='LOINC' constraints.validation.warning='ChestAssessmentTargetSiteCodeP'</annotation>
  </Ecore:EClass>
</xmi:XMI>
